name: On Push

on:
  push:
    branches: [ "devel", "main" ]
#    branches: [ "*" ]

jobs:
  check:
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      matrix:
        os: [ubuntu-22.04]
#        os: [ubuntu-20.04, ubuntu-22.04, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - run: mkdir m4

      - name: Provision Ubuntu
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install doxygen
          sudo apt-get install pax
          autoreconf -fi

      - name: Provision MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install autoconf@2.69
          brew install automake
          brew install doxygen
          brew install pax
          /usr/local/opt/autoconf@2.69/bin/autoreconf -fi

#      - name: Initialize CodeQL
#        if: matrix.os == 'ubuntu-22.04'
#        uses: github/codeql-action/init@v2
#        with:
#          languages: "cpp"

      - name: Make Distribution
        run: |
          ./configure --prefix=/tmp/ldm --with-noaaport || { cat configure; exit 1; }
          make all
          make dist
#          make distcheck

#      - name: Perform CodeQL Analysis
#        if: matrix.os == 'ubuntu-22.04'
#        uses: github/codeql-action/analyze@v2
#        with:
#          category: "cpp"

      - name: Save Distribution
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v3
        with:
          name: distro
          path: ldm-*.gz
          retention-days: 1

      - name: Make Documentation
        if: matrix.os == 'ubuntu-22.04'
        run: |
          make install
          pax -w /tmp/ldm/share/doc/ldm >docs.tar

      - name: Save Documentation
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs.tar
          retention-days: 1

  publish:
#    if: github.ref == 'main'
    needs: check
    environment: Publish
    runs-on: ubuntu-latest
    env:
      USER: ${{ secrets.NEXUS_USER }}
      PW: ${{ secrets.NEXUS_PW }}

    steps:
      - name: Provision
        run: sudo apt-get install pax

      - name: Get Distribution
        uses: actions/download-artifact@v3
        with:
          name: distro

      - name: Publish Distribution
        run: |
          version=`ls ldm-*.gz | sed -r 's/ldm-([0-9]+(\.[0-9]+)*)\.tar.gz/\1/'`
          curl -u "$USER":"$PW" \
            -T ldm-*.gz https://artifacts.unidata.ucar.edu/repository/downloads-ldm/$version/ \
            -T ldm-*.gz https://artifacts.unidata.ucar.edu/repository/downloads-ldm/current/

      - name: Get Documentation
        uses: actions/download-artifact@v3
        with:
          name: docs

      - name: Publish Documentation
        run: |
          version=`ls ldm-*.gz | sed -r 's/ldm-([0-9]+(\.[0-9]+)*)\.tar.gz/\1/'`
          pax -r <docs.tar
          cd ldm
          find . -type f | sed 's/^\.\///' | while read path; do
            curl -u "$USER":"$PW" \
              --upload-file $path https://artifacts.unidata.ucar.edu/repository/docs-ldm/$version/ \
              --upload-file $path https://artifacts.unidata.ucar.edu/repository/docs-ldm/current/
          done
