6.14.5.1  2023-01-31T16:15:39-0700
    rtstats(1):
        * Commented code about who logs because the code is convoluted
        * Removed trailing newline in rtstats(1) log message to eliminate extraneous log message
        * Eliminated sending of NULLPROC before closing connection because it's superfluous
        * Documented return value of ldmsend_statsbin()
        * Prevented overrun in formatting report
        * Eliminated unnecssary log message
        * Replaced abort(), due to unsupported remote LDM version, with log_error() and ECONNABORTED
          return value

    Documentation:
        * Added requirement that "RemoveIPC" in "/etc/systemd/logind.conf" must be "no" to
          prevent systemd(8) from deleting the LDM's shared-memory segment that contains the
          upstream LDM database.
        * rtstats(1) man(1) page: Corrected description of number of bytes, number of products, and
          peak-latency parameters: they are not for "this hour" but since rtstats(1) was started

    CHANGE_LOG:
        * Consolidated 6.14.4.* entries into 6.14.4.

6.14.4  2023-01-26T11:03:17-0700
    ldmd(1):
        * Eliminated log messages when an upstream LDM process that was ACCEPTed terminates. This
          should reduce the number of log messages on the rtstats(1) mothership.
        * Moved setting of "hiyaCalled" to top of HIYA service functions
        * Made ECONNRESET error a single INFO-level log message
        * Replace some ERROR log messages with FATAL ones in the main module.

    NOAAPort:
        * Added entries with new PDTNs to GEMPAK tables:
            * g2varswmo.tbl:
                000 002 000 002 Wind Direction             Degree true  DRCT    0  -9999.00
            * g2varsncep.tbl:
                001 001 194 009 Prob precip exceeding FFG  %            PEFG--  0  -9999.00

    rtstats(1):
        * Made error reporting more robust

    Documentation:
        * More hyperlink corrections
        * Returned Coverity Scan badge to top-level, version-specific index.html

    Misc:
        * Removed lint found by Coverity Scan
        * ErrObj module
            * Created
            * Created log_dispose(ErrObj*)
            * Might get used; might not.

    DevOps:
        * Enhanced "pre-commit" hook to vet the version ID in CHANGE_LOG and ensure a timestamp
          in CHANGE_LOG when committing to the main branch
        * Enhanced "OnPush.yml":
            * Vet the version ID in CHANGE_LOG and "configure.ac"
            * Update the "versions.html" file for LDM documentation on the artifacts server
        * Deleted "--disable-root-actions" from Coverity Scan target
        * Added deletion of /tmp/pqact_test.conf before creation due to /tmp having the "restricted
          deletion" bit set
        * Deleted use of CodeQL in OnPush.yml in favor of using Coverity Scan because it's better,
          IMO

6.14.3  2022-12-22T13:34:03-0700
    Documentation:
        * Fixed more links in HTML documentation

6.14.2	2022-12-20T15:32:36-0700
    Documentation:
        * Added missing graphic "product-queue.svg"
        * Fixed links in HTML documentation

6.14.1  2022-12-19T12:40:42-0700
    Installation:
        * Eliminated the configure(1)-script option "--disable-root-actions". Installation now
          proceeds as if this option were always specified. The "make install" step now prints a
          message at the end stating that the superuser (i.e., "root") must now execute the command
          "make root-actions". This was necessary in order to migrate the continuous-integration
          workflow to GitHub actions: autoconf(1) 2.71 on the Ubuntu 22.04 platform creates an
          invalid configure(1) script if the autoconf(1) configuration-file contains this option.

          Installation from the unpacked distribution now comprises the following steps (details
          omitted):
            - Execute the configure(1) script as the LDM user
            - "make install" as the LDM user
            - "make root-actions" as root
          See the HTML documentation for details.
        * The configure(1) script now requires that a C++ compiler be found if the "--with-noaaport"
          option is specified

    ldmd(1):
        * Demoted the logging level of some common connection losses to reduce the number of ERROR
          messages in the log file
        * Improved log message when select() fails
        * Improved logging and simplified up6_run()
        * Only close file-descriptors 0, 1, & 2 when daemonizing
        * Added "-h" (help) option
        * Moved daemonization to before the creation of the shared upstream LDM database
        * Ensured that the LDM server is the process group leader.

    regutil(1):
        * Added "-l <logdest>" option to accomodate GitHub actions

    pqing(1):
        * Eliminated compilation error in "tty.c" under MacOS by including <sys/ioctl.h>

    NOAAPort:
        * blender(1):
            * Added frame-header sequence-number to determination of frame ordering.
            * Corrected determination of frame ordering
        * GEMPAK Tables: Added missing PDTNs

    LDM registry:
        * Ensured that the file-descriptor of the registry is close-on-exec

    Logging:
        * In order to accomodate GitHub actions, changed the determination of whether or not to use
          the standard error stream from whether of not the process was a daemon to whether or not
          the standard error stream is open on /dev/null

    rpc(3) library:
        * Eliminated compilation errors under MacOS by replacing bzero(), bset(), and bcmp() with
          POSIX equivalents
        * Demoted the logging level of some common connection losses to reduce the number of
          ERROR messages in the log file

    Documentation:
        * Changed the download site to downloads.unidata.ucar.edu and eliminated the FTP site
        * Added recommended home directory /home/ldm or /opt/ldm
        * Changed the installation instructions to "make install" by the LDM user and then "make
          root-actions" by the superuser
        * Removed the Coverity Scan badge from the top-level, version-specific "index.html" page
          because the code is now being scanned by GitHub's CodeQL
        * Changed the example LDM home-directory from "/opt/ldm" back to "/home/ldm" because that's
          more appropriate for an LDM *user*

    DevOps:
        * A push to the "devel" and "master" branches on GitHub now causes "make distclean" to be
          executed on 2 Ubuntu systems and the latest MacOS system and the code to be scanned by
          CodeQL.
        * Modified Git hook "pre-commit" to ensure that the version ID in "configure.ac" is the
          same as the first word in "CHANGE_LOG" 
        * Removed target "consistent" and its dependencies from "dev-makefile"
        * Corrected code faults found by GitHub's CodeQL (mostly in GEMPAK library)
        * Modified "make check" in regutil/ to accomodate GitHub actions
        * Modified include of "ldm.h" in "fix_clnt.pl" to accomodate GitHub actions
        * Enabled everything in OnPush.yml for LDM release

6.13.17 2022-10-24T15:01:17-0600 (should have been 6.14.0 due to the addition of blender(1))
    Installation:
        * Restored setting of LDM_PORT in distribution's registry
        * Added support for use of chronyd(8) instead of ntpdate(8)

    ldmadmin(1):
        * Improved:
            * Waiting for the LDM to start
            * Determining if the LDM is running
        * "ldmadmin start" verifies that
            * The product-queue exists
            * ldmd(1) owned by root and setuid
        * Added support for use of chronyd(8) instead of ntpdate(8)
        * Added "-o <template>" option to "plotmetrics" command to write metrics plots to files
          instead of to the X-server.
        * Added 1 s timeout to ldmping(1) in isRunning() to speed up "ldmadmin start" and
          "ldmadmin stop"

    Top-level LDM server, ldmd(1):
        * Ensure printing of process ID in daemonize()
        * Always make final process a group leader
        * Improved daemonization of the LDM by fork(2)ing twice and redirecting all standard I/O
          streams to /dev/null
        * Now becomes owned by root before sending SIGTERM to process group to ensure that even
          setuid processes that are owned by root receive the signal. Relinquishes root privileges
          immediately after sending the signal.

    scour(1):
        * Documented in man(1) page:
            * Missing options
            * Specification of hours and minutes in configuration-file
        * Corrected format of "old" specification in
            * Configuration-file
            * scour(1) internal comments

    logging:
        * Corrected logging initialization (i.e., logi_init()) when package is configured to use
          the system logging daemon.

    NOAAPort:
        * blender(1): Created this program to blend together TCP streams of the same NOAAPort
          channel from socat(1) servers at multiple, remote sites to create a more-perfect stream.
        * noaaportBlender.py: Created this program to execute (and keep running)
          a blender(1) and noaaportIngester(1) pair.
        * noaaportIngester(1):
            * Now logs reason for termination of reader
            * Corrected usage message. "-S <bufsize>" should have been "-R <bufsize>"
            * Documented the meaning of bit 2^4 (value 16) in the transfer type field of the
              product-definition header (according to ProductMaker, it means the product is
              compressed)
            * Modified "gap" reporting to support receiving data frames only: if a frame-level gap
              occurs but the PDH product sequence number and data block number are contiguous, then
              the missing frame(s) will be ignored and not counted.
            * Moved the test for no product-specific header and a transfer type of 0 to before the
              test for frame gaps because the PDH for such a frame is invalid and the gap check now
              requires a valid PDH
            * Continue after inability to set desired scheduling of input thread
            * Log previous and current product sequence numbers and data-block numbers when a gap is
              detected
            * Renamed some "last..." variables to "prev..." for clarity
            * Change logging level of product sequence number diagnostic when a gap is found from
              NOTE to WARN to ensure visibility when grep(1)ping.
            * Ensured that all messages are logged when the input closes
        * GEMPAK tables: Added
            000 019 235 008 Joint Fire Weather Probability   % JFWPRB   0  -9999.00
            000 019 237 008 Dry Thunderstorm Probability     % DRYTPROB 0  -9999.00

    Logging (log(3)):
        * Improved determination of whether or not the current process is a daemon by testing for a
          controlling terminal. This correctly handles the standard error stream being open on
          /dev/null.

    ulogger(1):
        * Have it log everything regardless of message priority

    rpc(3):
        * Fix latent security bug in unexecuted code

    Registry (etc/registry.xml):
        * /check-time/ntpdate/servers: Changed the default value of this parameter to just
          "us.pool.ntp.org" because the previous value contained defunct time-servers. The new value
          will automatically take effect *only* when the LDM is installed for the *first* time:
          upgrades to existing installations should set this parameter manually.

    Documentation:
        * Enhanced section on pqact(1) decoders in the "Programs" page:
            * Corrected the HTML to make visible the paragraph on shell scripts
            * Added an example shell script that duplicates the FILE action and uses the ulogger(1)
              utility to log error messages

    Multicast:
        Modified to omit sending valid multicast packet if environment variable
        FMTP_INVALID_PACKET_RATIO is negative.

6.13.16 2021-09-14T09:18:55-0600
    build:
        * Improved handling of supplied rpcgen(1) output files on systems that
          don't have rpcgen(1) installed 

    ldmadmin(1):
        * Made vetQueueSize() print a message only when necessary

    DevOps:
        * Documentation:
            * Removed configure(1) variables from "html/basics/index.html.in"
              and renamed it "index.html"

6.13.15         2021-08-11T14:52:31-0600
    configure(1):
        * Made c99 the default compiler on SunOS systems because gcc(1) either
          caused the configure(1) script to fail or failed to compile some files

    scour(1):
        * Replaced getline(3) with mygetline(3) to accommodate Solaris
        * Eliminated defects found by Coverity Scan

    Misc:
        * mygetline.c: Added "#include <sys/types.h>" to ensure "ssize_t"
        * Removed lint found by Coverity Scan

    Multicast:
        * fmtpRecvv3.c: Remove minor clang(1) lint

    DevOps:
        * dev-makefile:
            * Improve rules for "coverity-scan"
		* Ensure gcc(1) used
		* Make more robust
            * Added "reset" target

6.13.14 2021-07-27T17:24:00-0600
    configure(1):
        * Defined _XOPEN_SOURCE to be 600 on and only on SunOS systems in order
          to support the C compiler; otherwise, it's 700
        * rpcgen(1):
            * Require on MacOS system
            * Use if possible; otherwise, use package-supplied rpcgen(1) output
              files

    ldmadmin(1):
        * Changed match on "ESTABLISHED" in netstat(1) output to "ESTAB" just in
          case some netstat(1)'s use that instead
        * Corrected error-message in "addmetrics" command
        * Added missing "}" to 'while ($_ = $ARGV[0]) {'
        * Documented the two types of "pqactcheck" invocations in the
          manual-page
        * Made more(1) the default pager for "ldmadmin log". The environment
          variable PAGER will override.
        * Created "showsettings" command to print information on the LDM
          installation to assist troubleshooting

    logging:
        * Added LOG_LEVEL_FATAL and associated functions/macros
        * Merged logging levels ALERT, CRIT, & EMERG into just FATAL

    pqcreate(1):
        * Fixed manual-page regarding the computation of the default number of
          product slots
        * Corrected approximate mean product-size from 51 kB to 140 kB. This
          value is used when the number of slots registry parameter is
          "default".

    pqact(1):
        * Enhanced log message about pqact(1) being at the oldest end of the
          queue to include waking up to discover its position in the queue is
          older than the oldest data-product. The word "oldest" still appears in
          the warning -- so you can still search on it.
        * Changed the logging-level associated with the "-log" option of the
          FILE and STDIOFILE actions from INFO to NOTE to ensure that such
          messages are always logged regardless of the logging-level of the
          pqact(1) process
        * Removed or demoted to DEBUG some redundant ERROR messages related to
          the inability to pipe to a decoder
        * Fixed bug in which a pattern/action entry wouldn't have its time of
          last-use reset if it was already at the head of the most-recently-used
          list. If this situation persisted for 6 hours, then the entry would
          be removed from the list and its file descriptor would be closed.
          This latter situation could only occur if one entry monopolized its
          pqact(1) process for 6 hours.
        * Modified the "-strip" option: it no longer deletes characters whose
          unsigned value is greater than 127. This allows textual products in an
          extended ASCII character set (e.g., ISO 8859-1).

    scour(1):
        * Replaced scour(1) script with multi-threaded C program that scours
          much faster than the script
        * Added scour configuration-file to LDM registry
        * Renamed "scour" script to "scour.sh" in case users still want to use
          it
        * Added "-d" option to scour(1) man-page
        * Increased maximum size of pattern field to MAX_INPUT bytes
        * Function replacements to accommodate SunOS 5:
             * getline(3) -> mygetline(3)
             * fstatat(2) -> lstat(2)

    rpc(3) library:
        * Replaced call to bindresvport() in clnttcp_create() with binding to an
          ephemeral port to eliminate the necessity for having root privileges

    LDM Registry:
        * Added SCOUR_EXCLUDE_PATH for pathname of file that lists directories
          to be excluded by scour(1)

    Misc:
        * Removed much lint identified by clang(1)
        * Removed lint identified by Coverity Scan

    Documentation:
        * Removed reference to installing from an RPM because it doesn't exist
        * Updated the instructions on using metrics to monitor the LDM
        * Remove obsolete feedtype webpages

    NOAAPort:
        * GRIB2 (GEMPAK) Tables:
            * README: Modified the "clone" command to work-around permission
              problems
            * Added:
                * Ice Thickness (ICETK, (10,2,1,0))
                * Rip Current Occurrence Probability (RIPCOP) (10,1,4,0)
                * Total Water Level Accounting for Tide, Wind and Waves (TWLWAV)
                  (10,3,205,0)
                * Mean Increase in Water Level due to Waves (SETUP) (10,3,207,0)
                * Time-varying Increase in Water Level due to Waves (SWASH)
                  (10,3,208,0)
                * Erosion Occurrence Probability (EROSNP) (10,3,252,0)
        * dvbs_multicast(1): Replaced non-standard usleep(3) with standard
          nanosleep(3)
        * noaaportIngester(1):
            * Created "-R <buf_size>" option to set the size of the receive
              buffer in order to reduce the number of missed packets.
              (The operating system must allow the new size.)
        * Ensure that the NEXRAD feedtype is assigned to every product whose
          parameter "product-specific type" in the product-specific header
          identifies it as being NEXRAD

    Multicast:
        * fmtpRecvv3(3):
            * Corrected logic bug in tracking last multicast product index
            * Ignore FMTP PDU if header flag is unknown
            * Log closing of retransmission socket and ensure set to -1 on error
            * Made handling of retransmitted duplicate BOP more robust:
                * retxBOPHandler() and BOPHandler(): Made return-value indicate
                  if BOP was invalid or a duplicate
                * retxHandler():
                    * Modified to ignore an invalid BOP
                    * No longer relies on a positive product-size to indicate a
                      tracker-map entry
                    * Exception throwing on no tracker-map entry replaced with
                      logging a notice
                * Created McastProdPar which encapsulates multicast
                  product-index and sequence number object under mutex
                  protection
                * Improved log message, documentation, and internal commentary
                * Improved handling of last product whose BOP needn't be
                  requested
                * fmtpRecvv3.cpp: Replaced <inttypes.h> with <cinttypes> to get
                  PRIu32 macro
        * Improved debug messages
        * UdpRecv.cpp:
            * Corrected reversed "expected" and "actual" values in error message
              about a too-small payload message
        * IperfFmtpPdu(1): Created to create invalid FMTP packet for malicious
          testing by iperf(1)
        * mldm_sender(1): Removed lint
        * recv_test(1): Corrected documentation & simplified diagnostic
          statement
        * configure.ac & FmtpConfig.h.in: Added _XOPEN_SOURCE
        * FmtpConfig.h{,.in}: Removed from repository
        * UdpSend(3): Created private BlackHat class for sending invalid packets
          based on the environment variable FMTP_INVALID_PACKET_RATIO
        * Created three levels of message authentication of multicast packets
              dependent on the value of environment variable FMTP_MAC_LEVEL:
                - unset or "0": No MAC
                - "1":          SHA256 HMAC
                - "2":          Ed25519
        * Up7Down7_test: Increased sleep after product insertions from 1 s to 2
              s to give Ed25519 more time
        * Improved FMTP packet structures regarding I/O handling and padding:
            * Deleted RETX_REQ_LEN
            * Replaced flexible arrays with [1] to accommodate g++ 8.3
            * Improved BOPMsg structure
            * Eliminated use of sizeof(struct ...) where appropriate
            * Converted FMTP PDU size from a compile-time to a runtime parameter

    DevOps:
        * Added "regpar.tab" to configured files
        * Changed "388" to "@LDM_PORT@" in registry
        * publish(1):
            * Eliminated deletion of tarballs with the same major and minor
              numbers but lower bug-fix numbers because some sites -- rather
              than implementing their own repository -- depend on older versions
              always being accessible upstream.
            * Improved messages
        * .travis.yml:
            * Enabled "branch_pattern: devel"
        * push(1):
            * Tag the commit if and only if it's on the main branch
            * Execute autoreconf(1) after setting a new version identifier in
              "configure.ac"
        * Doxygen:
            * Doxyfile.developer: Set output directory to "doxygen-output"
            * Delete obsolete parameters
        * .git/hooks: Created pre-commit(1) & pre-push(1)
        * UXF diagrams: Improved and added to repository
        * dev-makefile(5): Created
        * check(1): Created
        * scan(1): Created
        * configure.ac:
            * Improved setting of CFLAGS, CXXFLAGS, AM_CFLAGS, & AM_CXXFLAGS
            * Removed "pqcreate.1" and "regpar.tab" from AC_CONFIG_FILES
        * deployAll(1):
            * Added version argument
            * Modified to use an associative array and to print asynchronous
              logs at the end
        * scour/:
            * testCscour.py(1): Tests scour(1) correctness
            * aSpringTree(1): Builds a tree of depth and breadth for testing
              scour(1)
            * benchMarkIt.sh(1): Tests performance of scour(1)
            * .gitignore: Deleted inappropriate slash prefix of "scour.conf"
        * pq/Makefile.am: Moved HAVE_CUNIT to before test_PROGRAMS to enable
          "make check" on systems with no CUnit package installed
        * Makefile.am: Added CLEANFILES, DISTCLEANFILES, and
          MAINTAINERCLEANFILES
        * pqact/Makefile.am: Decreased time for "make check"

6.13.13	2020-11-03T15:22:01-0700
    ldmadmin(1):
        Switched the order of the bin/ and util/ directories when setting PATH
        because one site had a script named "util/ldmd".

    ldmd(1):
        * Increased the size of the listen(2) queue from 32 to 1024 in order to
          support the Unidata LDM that's accepting rtstats(1) messages

    NOAAPort:
        * GEMPAK Tables: Added new WMO parameters:
            000 000 000 010 Temperature
            000 002 000 006 Wind Direction
            000 002 022 002 Wind Speed (gust)
            000 006 001 002 Total Cloud Cover
            000 006 013 005 Ceiling
            010 000 003 002 Sig Hgt Wind Waves and Swell
         * GEMPAK NSSL parameter table:
            * Added MRMS parameters that just appeared in NOAAPort. See
              <https://www.nssl.noaa.gov/projects/mrms/operational/tables.php>:
                209 002 005 000 Lightning Prob. next 30min Grid  %                    LgtProb30min     0      0.00
                209 006 030 000 MultiSensor QPE 01H Pass1        mm                   MrgdQpe1HP1      0     -1.00
                209 006 031 000 MultiSensor QPE 03H Pass1        mm                   MrgdQpe3HP1      0     -1.00
                209 006 032 000 MultiSensor QPE 06H Pass1        mm                   MrgdQpe6HP1      0     -1.00
                209 006 033 000 MultiSensor QPE 12H Pass1        mm                   MrgdQpe12HP1     0     -1.00
                209 006 034 000 MultiSensor QPE 24H Pass1        mm                   MrgdQpe24HP1     0     -1.00
                209 006 035 000 MultiSensor QPE 48H Pass1        mm                   MrgdQpe48HP1     0     -1.00
                209 006 036 000 MultiSensor QPE 72H Pass1        mm                   MrgdQpe72HP1     0     -1.00
                209 006 037 000 MultiSensor QPE 01H Pass2        mm                   MrgdQpe1HP2      0     -1.00
                209 006 038 000 MultiSensor QPE 03H Pass2        mm                   MrgdQpe3HP2      0     -1.00
                209 006 039 000 MultiSensor QPE 06H Pass2        mm                   MrgdQpe6HP2      0     -1.00
                209 006 040 000 MultiSensor QPE 12H Pass2        mm                   MrgdQpe12HP2     0     -1.00
                209 006 041 000 MultiSensor QPE 24H Pass2        mm                   MrgdQpe24HP2     0     -1.00
                209 006 042 000 MultiSensor QPE 48H Pass2        mm                   MrgdQpe48HP2     0     -1.00
                209 006 043 000 MultiSensor QPE 72H Pass2        mm                   MrgdQpe72HP2     0     -1.00
            * Removed 
                209 002 004 000 Lightning Probability 0-30min    %                    LgtProb30min     0  -9999.00
              because it's not in NSSL's table and because it's long-name is too
              similar to and it's short-name is identical to (209,002,005) above
              from NSSL.

    pqact(1):
        * Hopefully closed a tiny window-of-vulnerability in which a SIGALRM
          might be generated after a successful write(2) to a (very) slow
          decoder but before the alarm is dismissed -- leading to the abnormal
          termination of the process. This has occurred at more than one site.
        * Set default SIGALRM handing to "ignore" just in case
        * Documented "-t <timeout>" option for piping to a decoder
        * Added decoder command to pbuf_flush() log messages

    Multicast:
        * Up7.c:
            * Made auto-initialize: changed public up7_init() to static init()
        * ChldCmd.c:
            * Demoted log messages from ERROR to NOTE because the message
              "Success" from the child process isn't an error
        * Improve handling of OpenSSL:
            * Move library examination from LDM's to FMTP's configure.ac
            * Create FmtpConfig.h.in
            * Add declaration of EVP_PKEY_new_raw_private_key() if necessary
        * fmtpRecvv3:
            * Made handling of index of last multicast product more rigorous

    Developer:
        * publish.sh(1):
            * Converted to functional form. Needs to be tested.
            * Removed FTP references when modifying "versions.inc" on website
        * Top Makefile:
            * Added targets "push-gempak-tables" & "pull-fmtp"
        * push(1):
            * Made agnostic of branch
            * Replaced use of "git commit <file> ..." with use of "git add"
        * .travis.yml:
            * Made Coverity Scan act on all branches
        * deployAll(1):
            * Replaced use of internal shell function with calling deploy(1)
            * Made all LDM7 deployments asynchronous
        * configure.ac:
            * Added "-I" and "-L" checks for /opt/openssl and
              /usr/lib64/openssl11

6.13.12	2020-09-30T10:25:12-0600
    Installation:
        * Added EOF newline to regpar.tab.in to accommodate Solaris' sed(1)

    ldmadmin(1):
        * plotmetrics:
            * Corrected sense of local/remote port connections. They were
              reversed all this time.
        * Put $LDMHOME/util at head of PATH to support customization
        * Changed URL for GEMPAK tables updates from "git@github..." to 
          "https://..." because the former could require a key

    ldmd(1):
        * Top-Level Server:
            * Eliminated superfluous error messages at process termination about
              the upstream LDM database not existing if the "-n" (do nothing)
              option is specified.
            * Replaced log_log_q() with loc_add() & log_flush() in "Child ...
              exited with status ..." messages.
            * Combined hostname and dotted-quad "Denying connection from ..."
              messages into one
        * Upstream LDM:
            * Don't terminate previously-executing upstream LDM with a different
              protocol version number.
            * one_svc_run(): Replaced use of select() with poll()
            * Increase service timeout from 60 s to 120 s
        * Downstream LDM-6:
            * Replaced use of IS_ALIVE with fixed timeout of 5 minutes
            * Created vetProduct() and modified down6_hereis() and
              down6_comingsoon() to use it.
            * Changed logging level of "too-old" and "unrequested" products from
              INFO to WARN in order to unconditionally reveal why products
              aren't being inserted into the product-queue due to a slow
              connection (because it's being throttled, for example). If this
              happens to you, then you'll need to work with your network
              administrator to allow LDM traffic to pass unhindered. NB: This
              means a cold-started LDM might log some "too-old" warning
              messages, initially.
            * Log a warning that the (PRIMARY/ALTERNATE) transfer-mode won't
              work correctly if there are more than two REQUESTs for the same
              feed.
            * Modified the algorithm for determining when to switch between
              PRIMARY and ALTERNATE transfer-modes to consider whether or not
              the same feed is being received via multicast. This will only have
              an effect if multicast reception is enabled -- which isn't by
              default.

    pqact(1):
        * pqact.c:
            * Simplified decision on whether or not to write a new state-file by
              using tvIsNone() on the insertion-time of the last, successfully-
              processed product
            * Ensure valid time-of-last-insertion before writing state file at
              exit
            * Correct parsing/formatting of state file with negative seconds.
            * Modified "Starting Up" message to log the command-line
            * Changed log message at process termination from
                  Behind by %g s
              to either
                  No product was processed
              or
                  Last product processed was inserted %g s ago
              to better reflect the meaning
            * Replaced log_error_q() with log_add() & log_flush().
        * filel.c:
            * Added 6 hour timeout for inactive entries that, nevertheless, had
              open file descriptors to eliminate the possibility of pqact(1)
              holding open thousands of files that have been scoured and,
              consequently, filling up the disk with invisible files. This also
              improves the time it takes for the LDM to shut down.
            * Corrected truncation of output file by the FILE action when both
              "-overwrite" and "-metadata" are specified. Before, the file would
              be truncated to the size of the data-product even though it now
              has a metadata header. Thanks to Bryan for spotting and analyzing
              this.
            * Made the removal of the least-recently-used action (and the
              comcomittant closure of its open file descriptor) repeat until the
              current action can succeed or a failure occurs
            * Added use of the above if a child process can't be fork(2)ed for a
              decoder
            * Improved log messages for when an action with an open file
              descriptor is deleted from the list of such actions and its
              descriptor is closed

    uldb.c:
        * Removed lint found by Coverity Scan

    NOAAPort:
        * Changed pre-installation instructions to recommend disabling UDP
          packet sequence checking.
        * Created keep_running(1) script to ensure that NOAAPort ingesters are
          restarted if they crash. Added examples to NOAAPort documentation.
        * Updated main page of Doxygen-based documentation. In particular,
          corrected discussion of UDP packet reassembly and setting of system
          parameter net.ipv4.ipfrag_max_dist to zero.
        * Added new parameters to the NCEP GEMPAK tables:
            * 000 001 228 010 Flat Ice Accumulation (FRAM)     kg m**-2
                  FICEAC           0  -9999.00
            * 010 003 204 000 Freezing Spray                   -
                  FRZSPR           0  -9999.00
            * 000 002 231 000 Tropical Wind Direction          Deg
                  TPWDIR           0  -9999.00
            * 000 002 232 000 Tropical Wind Speed              m s-1
                  TPWSPD           0  -9999.00
            * 000 001 234 008 Precipitation Duration           hr
                  PCPDUR           0  -9999.00
            * 000 002 009 000 Vertical Velocity (Geometric)    m s**-1
                  DZDT             0  -9999.00
        * updateGempakTables(1):
            * Changed the "make install..." to "mv -f *.tbl..." to make it
              independent of the build mechanism.
        * NOAAPortIngester(1):
            * Changed logging-level of messages for first fragment of GOES
              imagery from NOTE to INFO.
            * Modified thread-creation to prevent the program from immediately
              terminating if the RHEL Insights Client security package is
              running. That package will, by default, prevent the creation of a
              thread with non-default scheduling -- even if the process is owned
              by root. The program will now try to create threads with
              high-priority, real-time scheduling but will create default
              threads and log a warning if it can't. The default threads will
              increase the risk of missing NOAAPort packets.
        * process_prod.c:
            * Added feed to notice-level log message about inserted product
        * Makefile.am:
            * Replaced ingest-verification files with ones containing new log
              messages

    Logging:
        * Library:
            * Created macro log_log(level, ...)
            * Replaced minimum field-width in default log messages with
              canonical column-start positions to reduce line lengths and
              CPU usage
            * Improved concurrency:
                * Unlocked file and mutex if thread cancelled. Irrelevant
                  for LDM6.
                * Added automatic deletion of message queue when thread
                  exits, so calling log_free() is no longer necessary.
                * Added use of pthread_atfork(). Irrelevant for LDM6.
            * Added "Terminating logging" message at DEBUG priority
        * refresh_logging(1):
            * Replaced "command kill" with "/bin/kill" to ensure correct
              behavior
        * Documented internally how log_refresh() will cause the log file to be
          closed/opened *on the next log message* and not before

    Product-Queue (pq.c):
        * Changed return values of pq_sequence() and pq_sequenceLock()
        * Documented that pq_sequence() and pq_sequenceLock() error codes are
          negative
        * Improved error-message in pqe_newDirect()
        * Added error-message to pqe_discard()
        * Corrected return status of ctl_rel() on mtof() failure

    Documentation:
        * Troubleshooting webpage:
            * Removed the incorrect value of 4096 for the average product size
              when computing the number of product-slots to create in a new
              product-queue.

    Misc:
        * Removed lint found by Coverity Scan
        * ldm_formatCmd()
            * Created to format a command-line from a command vector
        * ghostname():
            * Improved logic in for determining the fully-qualified name of the
              local host, which is used by rtstats(1). The LDM registry is still
              checked first, then gethostname(), and then the default value set
              by the configure script. If, after all this, the name still isn't
              fully qualified, then a system call will be made in an attempt to
              make it fully qualified. This means that the "hostname" parameter
              in the LDM registry needn't be set unless ghostname() doesn't
              return a fully-qualified hostname or a different name is desired.
        * ldmfork(3):
            * Documented `errno` values
        * Improved internal commentary

    Multicast:
        * ChildCmd.c:
            * Ensured that all pipe(2) file descriptors in the child process are
              greater than 2 to avoid conflicts when duplicating them to the
              standard file descriptors (i.e., 0, 1, and 2).
        * Product-Queue (pq.c):
            * Disable thread-cancellation on entry and revert on return
            * pq_sequenceHelper():
                * Print number of locked products
                * The product will now be unlocked upon return if
                    * The offset argument is NULL
                    * The product doesn't match the class specification
                    * An error occurs, either in the product-queue or the
                      caller's function
            * Added missing decrease of lock count
        * OESS scripts:
            * Modified to handle different virtual circuits that, nevertheles,
              have the same switch name, port name, or VLAN tag
            * Corrected URL for OESS services
        * up7.c:
            * Simplified and improved robustness by eliminating second
              server-side transport.
            * Cleaned-up subscription-request logic. Ensured that an error
              message is logged if anything goes wrong.
            * request_product_7_svc():
                * Added call to svcerr_systemerr() if there's no current
                  subscription
            * Added test_connection_7_svc() from Down7
            * Improved handling of client destruction when subscribing LDM7
              disconnects
            * Added product-index to "Sending missed product" log message
            * Squashed SIGSEGV when getting number of product-queue slots for
              product-index map by always opening product-queue
            * Corrected bug in determining PIM-file parent directory
            * Replaced use of global product-queue with one given to up7_init()
            * Made up7_init() and up7_destroy() public
            * UpMcastMgr.c:
                * Added check of logging destination for mldm_sender(1)
                  execution
                * Assert that the logging module doesn't hold a mutex lock
                  before calling fork()
                * Stop multicast LDM sender, mldm_sender(1), during multipoint
                  VLAN reconfiguration
        * down7.c:
            * Increased sleep duration between subscription attempts from 30
              seconds to 120 seconds
            * Increased RPC subscription timeout to 10 minutes
            * Specified absolute pathname of vlanUtil(1) to workaround Ubuntu's
              non-standard execvp(2)
            * Replaced reliance on getting the RPC timeout from the client
              handle to explicitly setting the subscription-timeout because the
              RPC timeout is unset until the first call to `clnt_call()`
            * Included RECEIVE entry in computation of count of number of
              upstream suppliers of a given feed
            * Added mutex loccking/unlocking in down7_init() to silence Coverity
              Scan
            * Moved test_connection_7_svc to Up7
            * Added periodic heartbeat to upstream LDM7
            * Improved some log messages
            * MldmRcvr.c:
                * eop_func(): Improved INFO message
                * missed_prod_func(): Added flushing of errors
            * ProdNotifier.cpp:
                * startProd(): Improved error-message
                * missedProd(): Added error-message
            * MldmRcvrMemory.c:
                * Removed lint found by Coverity Scan
                * Replaced searching of YAML mapping with streaming
            * Improved commentary 
        * FMTP:
            * Got multicast message authentication working
            * Modified logMsg(std::string) to always log at NOTE level
            * fmtpSendv3:
                * Improved debug logging
                * Added release of products held by a unicast socket that just
                  disconnected to prevent all products in the queue from
                  eventually being locked
                * Release products held by socket that just disconnected
                * Eliminated deadlock
                * Added rcvrCount()
                * Added log_info() for duplicate BOP
                * Initialized numRetrans to -1
                * TcpSend:
                    * Explicitly enabled SO_REUSEADDR and SO_KEEPALIVE
            * fmtpRecvv3:
                * Moved direct sending of product-EOP to sender on unicast
                  reception thread to adding message to retransmission queue on
                  that thread to obviate deadlock between that thread and
                  sender's retransmission thread.
                * Improved handling of missed multicast packets
                * Adapted to use UdpRecv
                * Modified to only consider valid FMTP messages
                * OffsetMap:
                    * Added missing deletion of entry by om_get()
                    * Modified OffsetMap::get() to indicate no-entry instead of
                      throwing an exception
                * UdpRecv.c:
                    * Created
        * mldm_sender(1):
            * Improved releasing of product in product-queue:
                * Added product release on multicast failure
                * Added debug message about releasing locked product
            * Added registry parameter "/fmtp-retx-timeout" for FMTP timout in
              seconds
            * Modified to use registry parameter "/fmtp-retx-timeout"
            * Modified "-r <fmtp_timeout>" option to be in seconds
            * Merged mls_tryMulticast() into mls_startMulticasting()
            * Added error message on fmtpSender_send() failure
            * Don't multicast product if no FMTP receivers
            * Modified mcastProd() to return LDM7_NORCVR and not explicitly
              release product
            * Eliminated double free()ing of `mcastInfo`
            * Continue if no receivers
            * Log more errors
            * Demoted "Product not multicast because no receivers from INFO to
              DEBUG
            * Added notice-level log message (with status) about terminating
              normally
        * Up7Down7_test(1):
            * Added (commented out) single, small product possibility for
              debugging
        * vlanUtil(1):
            * Replaced use of gawk(1)-only bit operations with shell's for
              portability
            * Corrected setting of broadcast address string
        * setMcastRate(1):
            * Created to set the multicast sending rate. Uses tc(1). Must be
              executed by root.

    Developer:
        * Removed publishing rules from makefiles in favor of using "publish.sh"
        * send_recv_test.h:
            * Improved commentary on multicast addresses
        * configure.ac(1):
            * Added LDM_BIN_DIR
        * push(1):
            * Replaced "commit -a" with list of modified files
            * Replaced "git push" arguments with "--mirror"
        * Instrumented OffsetMap
        * Only deploy to NWSC node6
        * ldm7PreInstall:
            * Added perl and corrected g++ package-name (gcc-g++)
        * OffsetMap.cpp:
            * Demoted get() log message from NOTE to DEBUG
        * pq.c:
            * Demoted pq_sequenceHelper() log message from NOTE to DEBUG
        * Added "delayQueue/" to Git.
        * Corrected target "push-%" in top-level makefile
        * Removed Authorizer_test from "make check" because GTest segfaults at
          exit.
        * pthread_atfork_test.c:
            * Created
        * one_svc_run():
            * Converted timeout argument from unsigned to int to support
              indefinite timeout
        * Down7::up7Proxy_heartbeat():
            * Fixed setting of `lastRequest`
        * send_test(1) & recv_test(1):
            * Added "-g <grpAddr>" option
            * Made independent of LDM library
            * Changed HELLO_GROUP to 234.128.117.1 (unicast prefix based)
            * Added to distribution (but neither built nor installed)
        * deployAll(1): Enabled California and Maryland
        * Disabled "make installcheck" in "mcast_lib/ldm7" on Travis CI
        * pq_test_insert(1):
            * Increased inter-product gap to 0.1 s
        * Moved sleep from beginning to end of insertion-loop
        * deployAll(1):
            * Added ldm7@idc-uva.dynes.virginia.edu
            * Changed deployment to uni15 to deployment to uni17
        * Top Makefile.am:
            * Removed superfluous "muticast-check" target
        * .travis.yml:
            * Added cat(1) of top-level Makefile on error
            * Disabled multicast testing because OpenSSL 1.1 isn't available
        * ldm7/Makefile.am:
            * Eliminated hmac_test from testing and distribution
            * Ignore MldmRcvr.h and MldmRcvrMemory.h because of *.hin
        * pbuf.c, filel.c:
            * Commented-out excessive debug log messages

6.13.11	2019-05-06T14:30:46-0600
    ldmd(8):
        * Top-level Server:
            * Eliminated having the operating-system assign a transitory port
              number for the LDM server if the server couldn't get its official
                * A receiving LDM can't connect to the server without knowing
                  the transitory port number; 
                * The LDM server doesn't communicate the transitory port number
                  to the outside world; and
                * Using a transitory port number prevented the LDM from
                  terminating with an error to indicate a problem
            * LdmConfFile(3):
                * EXEC action:
                    * Replaced blocking of SIGUSR1 before execvp() with ignoring
                      it
                    * Added ignoring of SIGUSR2 before execvp()
                * Eliminated memory-leak found by Coverity Scan
            * Removed calls to open_on_dev_null_if_closed() to accommodate
              replacement of log_is_stderr_valid() with log_stderr_is_open(),
              which returns true if stderr is legitimately redirected to
              /dev/null
        * Downstream/Receiving LDM:
            * DownHelp(3): Eliminated SIGSEGV due to incorrect format for
              `size_t` variable in error message
            * Renamed getPreviousProdInfo() to getPrevProdInfo() to shorten
              log messages
            * Improved log message(s) resulting from socket disconnection

    pqact(1):
        * Made processes created via EXEC entries in pqact(1)
          configuration-files process group leaders so that they don't receive
          signals sent to the LDM system's process group. This was done because
          such processes are unlikely to handle such signals. This feature can
          be disabled via the configure(1) script's option
          "--disable-setpgid_exec".
        * pbuf.c: Corrected format for printing of `ssize_t` variable in error
          message
        * Removed SIGALRM from handled signals because pq(1) handles it
        * Demoted prodAction() log message from INFO to DEBUG and improved it

    Logging:
        * Improved concurrency locking for access by multiple threads
            * Removed mutex-locking from implementations: Locking occurs in
              log.c only
            * Eliminated calls to pthread_atfork()
        * Moved log_...() functions from implementations to log.c
        * Improved return values and initialization in implementations
        * log.c:
            * Refactored
            * Made functions async-signal-safe:
                * log_roll_level()
                * log_refresh()
                * log_avoid_stderr()
            * Allowed logging levels from LOG_LEVEL_ERROR to LOG_LEVEL_EMERG to
              be valid
        * log2slog(3):
            * Changed alignment of fields from right to left:
                * Process
                * Code location
            * Added description of SIGUSR1 action
            * Reintroduced line numbers in code location field
        * Replaced log_is_stderr_valid() (which returned false if stderr was
          open on "/dev/null") with log_stderr_is_open() (which returns true in
          that case) in order to handle legitimate redirection of stderr by the
          user to "/dev/null"
        * Ensured that all programs check the return-value of
            * log_init()
            * log_set_destination()
        * Eliminated use of deprecated log_syserr_q()

    Product-Queue (pq.c):
        Created pq_getMagic() to obtain the magic number for debugging purposes

    NOAAPort:
        noaaportIngester(1):
            * Ensured initialization of the index of the last received frame if and
              when the run number changes. This lint was found by Coverity Scan.
            * ldmProductQueue: Created lpqGetMagic() to obtain magic number of
              product-queue for debugging purposes
            * Redirected stderr to /dev/null if it's closed because some GRIB/GEMPAK
              functions mistakenly write to it and it was open on the product-queue
              -- causing an assertion failure
        dvbs_multicast(1):
            Adapted to use extractDecls(1) script in the top-level directory
            because it includes a warning

    Misc:
        Compiled under "gcc -Wall" and fixed almost all warnings

    Multicast:
        * ChildCmd(3) (was ChildCommand(3)):
            * Shortened log messages by
                * Renaming ChildCommand(3) to ChildCmd(3)
                * Renaming childCmd_logStdErr() to childCmd_log()
            * Improved error-logging
            * Created childCmd_getCmd()
            * Corrected sudo()
            * Added debug message that prints command before execution
        * ldmd.conf(5)
            * RECEIVE entry:
                * Corrected description of <host>
                * Improved description of <al2sVlanId>
            * MULTICAST entry:
                * Eliminated parameters
                    * Multicast interface
                    * time-to-live
        * down7(3):
            * Corrected AL2S VLAN endpoint <-> FMTP interface
              consistency-test
            * Added "sh" to vlanUtil(1) command because Linux won't execute a
              setuid script that's owned by root
            * Increased RPC timeout for subscribe_7() because adding a node to
              an AL2S multipoint VLAN can take longer than the default RPC
              client timeout.
            * Modified to pass CIDR address for virtual interface to vlanUtil(1)
            * Made down7_halt() async-signal-safe to obviate deadlock if
              interrupted while logging
            * Differentiated "backlog" from "backstop" product-insertion
              messages
            * Removed lint found by Coverity Scan
            * Added number of FMTP retransmissions to "Received" log message
        * OESS Scripts:
            * Replaced calls to ulogger(1) with sys.stderr.write() because
              sudo() handles the child process writing to stderr
            * provision.py:
                * Replaced writing of circuit-ID to stderr with writing to
                  stdout
                * Added case where multipoint VLAN already exists
            * Scripts now expect the name of the OESS workgroup to be in the
              OESS account file
        * UpMcastMgr(3):
            * Changed default extension of OESS account-file from "json" to
              "yaml"
            * Added installation of account.py(1) and edit.py(1)
            * Deleted invocation of Python interpreter because scripts are
              executable
            * Removed acquisition of root privileges when calling "provision.py"
            * Added printing of "provision.py" command-string on failure
            * Deleted logging of child process that error-exits
            * Added to mldm_ensureExec() removal of terminated sender from
              mldm_sender_map(3)
            * Changed AL2S workgroup name from "UCAR-LDM" to "Virginia" so that
              Yuanlong could more easily diagnose problems
        * Up7(3): Demoted "Backlog product sent:..." log-message from NOTE to
          INFO
        * vlanUtil(1):
            * Addd "/sbin" to PATH to get ip(1)
            * Removed address de-assignment from "destroy" because deleting the
              virtual-interface deletes the address
            * Added subnet specification to assignment of address to virtual
              interface
            * Eliminated use of subnet specifiction when managing route to
              sender
            * Added broadcast address to `ip addr add`
        * Sender code:
            * Disallowed multicast interface parameter because the interface
              must be the same as the FMTP server address
            * Ensured that the FMTP server address is in in the same subnet as
              its FMTP clients
        * Internet(3): Created ::to_string(struct sockaddr&)
        * mldm_sender(1):
            * Improved MldmRpcCmd server start-up message
            * Corrected removal of secret file
        * CidrAddr(3):
            * Made cidrAddr_copy() more robust to verify subscription reply
            * Created cidrAddr_snprintf(), which doesn't allocate memory
        * FmtpClntAddrs::Impl(3): Corrected vetting of FMTP server address in
          constructor
        * FMTP:
            * TcpRecv::initSocket(): Corrected name in log messages
            * fmtpRecvv3::Start(): Modified to iterate its attempt to connect
              to the sending FMTP server because it can take time for the AL2S
              VLAN to be provisioned. It will attempt every 5 seconds for 2
              minutes.
            * fmtpSendv3(3):
                * ::RunRetxThread(): Don't terminate process on
                  TcpSend::parserHeader() error
                * Adapted ::logMsg() to use LDM logging
                * Eliminated this module terminating the process if an exception
                  occurs
                * Eliminated slicing of the exception that caused an instance
                  to stop working
            * fmtpRecvv3(3):
                Added per-product tracking of number of FMTP data-block
                retransmissions

    Developer:
        * Deployment:
            * deploy(1):
                * Added determination of "-r" host-suffix
                * Added removal of runtime link if LDM wasn't running
                * Added "-r <root>" option
                * Handle $sudoUser not being able to create log file for "make
                  root-actions"
                * Added test for "runtime" link and improved messages
                * Modified to delete previous installed versions
                * Added "-v" option to "ldmadmin start"
                * Changed one beep to two
                * Disabled X11 forwarding by ssh(1) ("-x" option) because it
                  1) isn't needed; and 2) fails on some hosts
            * deployAll(1):
                * Removed determination of "-r" host-suffix
                * Added the MAX's host
                * Set privileged user to "ldm7" for sudo(8) on "fdt-uva"
                * Added University of Missouri's host
                * Changed host names to state abbreviations
                * Sequenced deployment to non-NWSC nodes alphabetically
        * Up7Down7_test(1): Ensured that CU_ASSERT_*() functions aren't called
          during teardown
        * GitHub: Added deletion of temporary branch in makefile rule "push-%"
        * ldm7PreInstall:
            * Eliminated the use devtools-2's g++ if on a CentOS7 system
            * Changed an "install" to "update"
        * Travis CI (.travis.yml):
            * Corrected command to download Coverity Scan's certificate-chain
            * Ensured that last "/"-separated component in "secure" declaration
              starts with letter
            * Broke download of Coverity's certificate into multiple lines
            * Added installation of certificate that's missing in Coverity
              Scan's certificate-chain
            * Moved dependent package installations from "before_install:" to
              "addons:apt:packages:"
        * configure.ac: Modified to allow "./configure ... CC='gcc -std=c99' 
          CFLAGS=-Wall"
        * SCM:
            * Deleted "oess" subtree and renamed "oess-client" subtree to
              "oess"
            * Fixed broken "pull-%" rule: made it explicit for "oess" and "fmtp"

6.13.10	2019-03-06T14:17:16-0700
    Logging:
        Applied changes to log2slog(3) module to log2ulog(3) module

    Developer:
        Redirected publish.sh(1)'s scp(1) output to /dev/null while copying
        documentation

6.13.9	2019-03-06T13:30:34-0700
    ldmping(1):
        Made the main loop interruptable. Reconciling signal-handling amongst
        the various programs apparently caused this one to loop forever.

    pqact(1):
        Demoted two log messages about writing a product to a file from NOTICE
        to INFO because per-product messages should be logged only in verbose
        logging mode ("-v").

    Logging:
        Unconditionally included the ulog(3) logging module in the LDM library
        for use by third-party software (e.g., McIDAS)

    Misc:
        Replaced <wait.h> in ChildCommand(3) with <sys/wait.h> to comply with
        the X/Open standard

    Developer:
        * Modified "publish.sh" to use "www" or "www-r" by default
        * Improved messaging by deploy(1) and added an alert
        * Adapted configure(1) to new directory structure of
          "mcast_lib/OESS-Client"
        * Added rationale for using longer subtree merging command in makefile
        * Made version an option in deploy(1) and added user to @host
        * Eliminated $version and $hostSuffix from deployAll(1) and added host
         "frgp"
        * Moved "Deploying..." message from deployAll(1) to deploy(1)

6.13.8	2019-03-04T08:49:35-0700
    Building and Installing:
        * Made the C++ library reference for building the LDM library
          conditional on WANT_MULTICAST to obviate the need for a C++ library
          for a regular build
        * Added missing mutex source-files to distribution to support
          configure(1)'s "--with-ulog" option

    ldmadmin(1):
        * Changed "ldmadmin start" to only print one message and to wait
          indefinitely for the LDM server to start
        * Changed "ldmadmin stop" to only print one message and to wait
          indefinitely for the LDM server to stop
        * Added the command "updategempaktables" to update the installed GEMPAK
          tables from the GitHub repository. Requires a standard installation
          directory structure.

    Logging:
        * Refactored logging to eliminate occasional hanging by a terminating
          ldmd(1) process
        * Added to two functions a missing return value found by Coverity Scan

    NOAAPort Ingestion:
        * Converted the directory "gempak/tables" into its own GitHub repository
          so that it can be updated and downloaded independent of the LDM
          package
        * Added RHEL and CentOS to the documentation as examples of Red Hat
          derivatives

    Multicast:
        * fmtpRecvv3::joinGroup()
            * Replaced joining an any-source multicast group with joining a
              source-specific one because not all networks support any-source
              multicast
            * Converted "struct ip_mreq_source mreq" from class member to local
              variable
            * Added debug log message for successfully joining multicast group
            * Added debug log message for successful bind()
        * Added error message if MldmRpc::Impl::~Impl can't remove the secret
          file
        * Added removal of MldmRpc(3) secret files to ldmadmin(1)
        * Modified downlet_run() to print result of changing address of FMTP
          server 
        * Refactored oess_init() & oess_destroy() to achieve "const" correctness
        * Adapted to new "provision.py" and "remove.py" command-arguments
        * Improved OESS-client markup in README.md
        * Removed double free()ing in UpMcastMgr(3) found by Coverity Scan
        * Improved documentation of childCmd_reap()
        * Corrected documentation of up7::init()
        * Improved documentationi of umm_subscribe()
        * Saved remote virtual-circuit endpoint for removal in UpMcastMgr(3)

    Documentation:
        Added thread-safety and async-signal safety sections to
        doxygen-generated documentation

    Misc:
        Eliminated small and infrequent memory leak found by Coverity Scan

    Developer:
        * Removed directory "mcast_lib/OESS-Client" from AC_CONFIG_SUBDIRS() to
          eliminate warning about that directory not having a configure(1)
          script
        * Made directory "mcast_lib/OESS-Client" into the subtree "oess-client"
          because it's a separate repository. (The FMTP repository is already a
          subtree.)
        * Added "pull-%" and "push-%" to the top-level makefile for pulling-from
          and pushing-to subtrees
        * Added scripts "ldm7PreInstall" and "ldm7Install" to distribution
        * Changed multicast group IP address of send_test(1) and recv_test(1)
          from 234.127.117.0 to 234.128.117.1 and improved logging.
        * send_test(1) & recv_test(1):
            * Made independent of LDM package
            * Made independent of gcc(1) and eliminated compiler warnings
            * Changed multicast group address from any-source 234... to
              source-specific 232...
        * Created script for deploying to a remote host
        * Created script for deploying to all permitted remote hosts
        * Created context/container/component diagrams for LDM

6.13.7	2019-02-01T15:19:00-0700
    Building and Installing:
        * Downgraded standard-compliance from _XOPEN_SOURCE=700 to 600 to
          accommodate Solaris and eliminated reliance on non-standard GNU C
          functions. Lots of small changes as a result.
        * Made binary installation directory writable by LDM user only to
          obviate execution of malicious binary with root privileges.
        * Added "-lstdc++" to shared-library creation.
        * Added explicit defines of some C macro values to "1" to avoid problems
          with configure(1) on BSD systems.
        * Added "--with-delayQueue" option to configure(1).
        * Made configure(1)'s "--enable-debug" option set CFLAGS & CXXFLAGS.
        * Added OESS-Client module
        * Created ldm7PreInstall(1) and ldm7Install(1) scripts
        * Corrected setting of installation directories in "config.h" that are
          overridden at configure(1) time

    noaaportIngester(1):
        * Improved responsiveness to external events:
            * Improved input FIFO:
                * Made fifo_close() async-signal-safe for calling by the signal
                  handler
                * Modified fifo_close() to use shutdown() and close() to improve
                  responsiveness
                * fifo_getBytes() is now notified if either fifo_close() is
                  called or if an EOF is encountered
                * Added file descriptor to construction and deleted buffer
            * Modified signal handler to only use async-signal-safe functions
            * Modified statistics-reporting thread to use sigwait() and
              eliminated now-unnecessary `reportStatistics` variables
            * Incorporated fileReader and multicastReader components into
              noaaportIngester.c
            * Eliminated file descriptor from input-reader component
        * Improved construction of LDM product-identifier:
            * Enabled creation of a complete LDM product-identifier even if the
              forecast time-interval of a GRIB2 field can't be decoded due to an
              unknown PDTN.
            * Added requirement that the GRIB2 version number not be missing
              (255) and the local version number be 0 or missing (255) in order
              to obtain the WMO GEMPAK vertical coordinate table.
            * Made the decision to use GEMPAK's WMO parameter table more robust
              by requiring that the Local Table number be 0 or 255 (missing).
            * Modified how GEMPAK finds a parameter entry:
                * Replaced linear search with binary search
                * Allowed use of parameter with same discipline, category, and
                  ID but different parameter definition template number if an
                  exact match doesn't exist. An ERROR-level message will be
                  logged in this case.
            * Added some error-checking to GRIB2 and GEMPAK libraries
        * Changed default logging level of noaaportIngester(1) from ERROR to
          WARN

    LDM registry and regutil(1):
        * Simplified log messages about missing registry parameters and changed
          logging level from error to warning.
    	* Replaced obsolete time-server `timeserver.unidata.ucar.edu` with
    	  `pool.ntp.org`.
        * Added pathname of file that contains OESS account information to LDM
          registry

    ldmd(1):
        * Decomposed server into smaller functions.
        * Eliminated use of portmapper because
            * Lots of places consider it a security hole
            * It slowed things down significantly if it wasn't running
            * It doesn't appear to be used much
        * Replaced log_*_q() calls with log_*()

    uldbutil(1):
        Reduced number of error messages if the LDM isn't running.

    ldmadmin(1):
        * "addmetrics" command:
            * Corrected space-usage numbers on CentOS 
            * Added non-blocking locking of metrics file to eliminate concurrent
              writes by multiple "ldmadmin addmetrics" processes when under
              severe load.
        * "isrunning" command:
            * Replaced use of kill(1) with ps(1) because some systems
              misreported success.
    	* Changed how the PATH environment variable is modified to favor
    	  version-specific utilities to accommodate non-standard installations
    	  that don't have a version-specific subdirectory.

    plotMetrics(1) (used by "ldmadmin plotmetrics"):
        * Added "eval" to pathname expansion to accommodate patterns that contain
          things like "metrics.txt{,.[1-4]}".
        * Added "-o  <template>" option to output PNG files.

    pqing(1):
        * Added "-F" option to enable XON/XOFF software flow control for TTY
          input.
        * Changed behavior of system-calls on receipt of SIGTERM from restart to
          interrupt in order to ensure proper response to an "ldmadmin stop".
        * Added O_TTY_INIT to open of a TTY to ensure conforming TTY behavior.

    pqact(1):
        Improved log messages

    delayQueue(1):
        Created for Tom to use with GOES-16 ingest.

    Product-queue:
        * Made "pqe_index" argument a pointer
        * Improved log messages
        * Removed extraneous newlines from log messages
        * Removed inappropriate pq_lockIf() calls.
        * Refactored the code that allows an application to reserve space in the
          product-queue for a data-product that will be written in pieces
          because the code wasn't sufficiently thread-safe.

    Logging:
        * Changed printing of multi-line log messages: each line will have the
          same timestamp, process ID, location, and logging level.
        * Reduced occurrence of overlapping log messages:
            * Added output file locking to prevent overlapping log messages to a
              regular file.
            * Added signal blocking and mutex locking for concurrent threads
        * Removed SIGUSR1 handling from logging module
        * Changed `log_level` from log_level_t to sig_atomic_t
        * Removed locking from log_roll_level to make it async-signal-safe
        * Eliminated trailing newline in log message
        * Right-justified location and process fields to minimize eye travel
        * Made logging macros not cancellation points
        * Replaced line number with function name in default logging
        * Eliminated empty last line.
        * Created log_errno() and log_syserr()

    GEMPAK Tables:
        * Added entries from Gilbert and Leno (duplicated by NOAA). Gave to
          NOAA. In particular:
            * g2vcrdwmo.tbl:
                Added "Surface to reserved" (yes, that's "reserved"), (001, 000)
                -- for all the good it will do.
            * g2varsncep.tbl:
                Added (0,1,29,{9,10,12}), ASNOW, and corrected unit for that
                parameter from "kg m-3" to "m".
            * g2vcrdncep.tbl:
                * Added depth below sea level, (160,255)
                * Added other missing vertical coordinates to GEMPAK's NCEP
                  table to accommodate invalid GRIB2 messages (i.e., WMO version
                  number != 255 yet local version number != 0).
        * Added missing GRIB2 parameter 10.3.192.9 (storm surge).
        * Created a GEMPAK table for GRIB2 vertical coordinates from NSSL, 
          "g2vcrdnssl.tbl". This table is installed and linked-to from
          "g2vcrdnssl1.tbl". As a consequence, noaaportIngester(1) might now
          miss some vertical coordinates from NSSL GRIB2 products.
        * Added creation of missing symbolic link, g2vcrdnssl1.tbl ->
          g2vcrdnssl.tbl, to "make install".
        * Changed logging level of missed-parameter messages from ERROR to WARN.
        * Added g2varswmo0.tbl and g2vcrdwmo0.tbl symbolic links during
          installation.
        * Reverted gempak/ctbg2rdvar.c to version that doesn't check the return
          value of sscanf(3) to handle "missing" entries like this (in
          g2varswmo.tbl):

              010 191 255 000 Missing                                                                0  -9999.00

    LdmConfFile(3):
        * Renamed from "ldm_config_file"
        * Adapted "scanner.c" and "parser.c"
        * Corrected isa_getSockAddr() usage
        * Moved some functions from "parser.y" to "LdmConfFile.c"
        * Adapted some arguments to new "InetSockAddr" types

    ChildCommand(3):
        Created this object for executing a command in a child process and
        enabling the parent process to write to the child's standard input
        stream and read from the child's standard output stream while
        concurrently logging the child's standard error stream

    Networking:
        * Changed some "int"s to "sa_family_t"s.
        * Created HostId and InetSockAddr objects and modified code to use
        * Created isa_getInetId(), isa_getSockAddr(), and sockaddr_format().
        * RPC:
            Allow signals to interrupt readtcp() svc_tcp.c so that a
            concurrent thread can be terminated via pthread_kill().
        * XDR:
            Eliminated some compiler warnings.

    Concurrency:
        Created Future, Executor, Completer, and StopFlag objects:

    Misc:
        * Repurposed the unused DIFAX feed to SATELLITE for satellite imagery.
        * Removed all logging calls from signal handlers because the logging
          functions are not async-signal-safe
        * Shortened many file, function, class, and method names to shorten log
          messages
        * Shortened or changed some function names. In particular:
            * isa_getHostId() -> isa_getInetId()
        * Added some debug messages.
        * Ported priv.h to C++
        * Renamed some *_delete() functions to *_free().
        * Replaced use of obsolete gethostbyaddr(3) with getnameinfo(3).
        * Removed Coverity Scan lint.
        * Eliminated memory-leaks found by valgrind(1).
        * Collapsed CHANGE_LOG entries for 6.13.7

    Documentation:
        * Documented new format for log messages
        * Corrected long instructions for installing from source using pax(1) by
          removing use of mv(1)
        * Updated simple logging documentation regarding SIGUSR1.
        * Changed the example LDM home-directory from "/usr/local/ldm" to
          "/opt/ldm" to conform to the Linux Filesystem Hierarchy Standard
          <https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard>.
        * Added to pqact(1) configuration-file documentation:
            * The string "(seq)" in the argument of a pqact(1) FILE or PIPE
              action is replaced with the sequence-number of the data-product.
            * Replacements based on data-product creation-time are based on
              `strftime()`, which *might* have additional replacement strings
              (e.g., "%N" for nanoseconds).
        * Improved section on general platform requirements
              
    Multicast (LDM7) DO NOT USE YET!:
        vlanUtil(1):
            * Created for creating and provisioning the multipoint VLAN
            * Modify usage message of vlanUtil(1) to use basename of program.
            * Made vlanUtil(1) usable by the sender as well as the receiver.
            * Made more robust. Added error messages.
            * Changed "ip route show ..." to "ip route get ...".
            * Stopped making vlanUtil(1) setuid root because such scripts no
              longer work on Linux systems.

        ChildCommand(3):
            Fix static getline()

        ldmd.conf(5):
            Add <mcastIface> argument to MULITICAST description

        mcast_lib:
            Multicast Information:
                * Replaced ServiceAddr-based implementation of `McastInfo` with
                  string-based one
                * Created `SepMcastInfo` and modified code to use

            down7_manager:
                * Allowed NULL FMTP interface
                * Created elt_toString()

            Multicast LDM sender map:
                * Replaced use of SHM REALTIME API with XSI

            Down7:
                * Modified down7.c to use an `in_addr_t` for the VLAN virtual
                  interface address instead of a `CidrAddr`.
                * Execute vlanUtil(1) with root privileges because such scripts
                  no longer work under Linux.
                * Added reception-time to LDM7 EOP function and logging of
                  duration of transmission.
                * Handled EHOSTUNREACH to handle offline upstream LDM7
                * Used "done" variable for SIGTERM termination
                * Have down7 call downlet direcly (eliminate executor).
                * Stopped exiting of downstream LDM6 if room in the product-queue
                  can't be made because all products are locked.
                * Converted it and subcomponents into singletons.
                * Added initial zeroing of component structures during
                * initialization.
                * Replaced process termination request and task termination
                  signalling mechanism with one that uses async-signal-safe
                  read/write calls on a pipe. This now works for both regular
                  and signal-handler calls to down7_halt().
                * Eliminate thread argument of down7_halt()
                * Prevent down7_halt() from sending SIGTERM to down7.thread if
                  same thread
                * Error-return if poll() error-returns only if errno != EINTR to
                  accommodate Linux's non-standard signaling when seteuid() is
                  called
                * Don't error-return if pthread_kill(SIGTERM) fails with ESRCH
                  because completed threads can't be signaled
                * Improve concurrency:
                    - Add task states
                    - Improve inter-thread signaling
                * Block SIGCONT & SIGALRM
                * Add debug statements
                * Add assertions
                * Add product-index to eop_func() and print in INFO message
                * Use SIGHUP instead of SIGTERM to interrupt Down7 threads
                  beacause an external SIGTERM must terminate the process and
                  figuring out if one is external or internal is more
                  complicated
                * Have Down7 re-connect immediately on multicast error
                * Improve handling of task states
                * Improve Backlogger
                * Add restart capability to missed-product queue
                * Shorten method names in RecvProxy & ProdNotifier
                * Move test_connection_7_svc() from Up7 to Down7

            Upstream multicast manager:
                * Added umm_init() and checks for initialization.
                * umm_destroy() now calls msm_destroy()
                * Moved addition of FMTP client to multipoint VLAN from module
                  "up7" to this module
                * Set AL2S workgroup to "UCAR-LDM"
                * Modified code to invoke Python OESS client scripts with
                  pathname of file that contains OESS account information

            Up7:
                * Added upstream LDM7 to upstream LDM database.
                * Improve logic of mldm_ensureRunning().
                * Improve documentation
                * Server-side changes to accommodate RPC assumption that calls to
                  svc_getreqset() and svc_getreqsock() aren't nested
                    * Functions that call svc_getreqset() always destroys
                      transport
                    * Separate, server-side RPC transport created and used
                * Use "remote.h"
                * Extract init() and shouldReply() from subscribe_7_svc() into
                  subscribe()
                * Improve handling of multicast information
                * Improve destruction
                * Simplified initXprt() & ensured destroyXprt() called
                * Correct socket closure in initXprt()

            ProdNotifier:
                * Improve handling of start-of bad data-product
                * Improve code to insert multicast product

            Misc:
                * In order to allow unit testing, up7.c and down7.c were
                  modified to ignore VLAN-creation errors if the switch or port
                  identifiers of the AL2S end-points start with "dummy".
                * Added ability to ignore vlanUtil(1) exit status and got
                  up7_down7_test to work
                * Execute OESS provisioning script with root privileges.
                * Modified LDM7 to log duration of multicast product
                  transmission for throughput calculation
                * Allow signals to interrupt XDR's readtcp() so that a
                  concurrent thread can be terminated via pthread_kill().
                * Added support for non-AL2S RECEIVE.
                * Add ability for fmtp.c to join mcasticast group with port
                  number < 1024
                * Add debug message and improve exception message in 
                  FmtpClntAddrs
                * If the subscription reply from the LDM7 server says that the
                  FMTP server's address is "0.0.0.0", then set it to the LDM7
                  server's address.

        mldm_sender(1):
            * Changed "-m <interface>" option to "-i <interface>" in
              mldm_sender(1).
            * Changed specification of FMTP subnet to mldm_sender(1) from
              operand to option-argument (default is no subnet).
            * Remove signature from "Sent:" log message
            * Ensure log_free() called at end of RPC server thread

        FMTP:
            * Added start-of-transmission time to beginning-of-product packet
            * Make LDM logging cpp(1)-conditional (macro "LDM_LOGGING")
            * Ensure calls to log_free() on thread termination
            * Improve start-time handling and serialization: initialize
              RetxMetadata::startTime
            * Make reference to logging directory independent of workspace
              directory hierarchy
            * Add system error messages to FMTP messages
            * Create Serializer and add to fmtpSendv3

            TcpRecv(3):
              * Improve re-connection logic by making locally-static
                mcast-handler-started variable a member
              * Eliminated use of htonl() in constructor by duplicating the
                constructor. Apparently, its use in assigning a default value
                violates the C++ standard.
              * Remove indefinite loop from TcpRecv::initSocket() because
                failure should be handled by the application.

            FMTPRecvv3:
                * Added reception-time to LDM7 EOP function and logging of
                  duration of transmission.
                * Accept longer BOP-s and improve exception message
                * Correct fmtprecvv3::joinGroup() name

        LDM:
            * Modify decodeMulticastEntry() to allow NULL arguments.
            * Call down7_halt() from signal handler
            * Note in ldmd.conf that multicast feeds must be disjoint.
            * Clear log messages if umm_remove() returns "no entry"
            * Add down7_destroy() to cleanup()
            * Replace log_*_q() with log*()
            * Log all caught signals
            * Catch all signals

6.13.6	2017-01-19T16:37:43-0700
    Slightly improved HTML Documentation based on latest workshop and added
    some missing webpages.

    NOAAPort:
        nplog_rotate(1):
            Added hupsyslog(1) invocation to accommodate old, unmodified
            noaaportIngester(1) EXEC-entries that use the "-u" option.

        noaaportIngester(1):
            Fixed handling of SIGUSR1 to enable log file rotation.

    Multicast (not yet ready):
        Modified `PerProdNotifier::notify_of_eop()`. Before, it would throw an
        exception if the product-index was unknown. Now, it will log a warning
        message. This was done because the FMTP retransmission handler might be
        calling that method when the last data-block is received and,
        consequently, no entry is found in the product-index-to-pq-info map when
        the end-of-product message arrives.

6.13.5	2016-10-06T13:53:22-0600
    ldmd(1):   
        Added logging of received signals. In particular, SIGINT and SIGTERM
        are logged at the notice level.

    pqact(1):
        Corrected handling of blank but non-empty lines in configuration-file.
        Before, they would terminate parsing of the configuration-file.
        
    noaaportIngester(1):
        Merged some changes by Raytheon.

    fileIngester(1):
        Added this utility created by Raytheon in support of NOAAPort. Don't ask
        me what it does.

    LDM library:
        Improved log message for when shmget() fails.

    noaaportIngester(1):
        Added missing basename(1) declaration.

    Ported to FreeBSD (thanks Eric).

    HTML Documentation:
        Added activity diagrams for ldmd(1), upstream LDM, downstream LDM, and
        pqact(1).

        Added product-queue graphic.

        Added troubleshooting page.

        Improved LDM tips.

    Multicast (not ready yet):
        Added FMTP-LDM7 as a submodule.

6.13.4	2016-08-05T10:39:58-0600
    Logging:
        log.c:
            Ensured that the "refresh_logging" flag is cleared if and only if
            the destination is refreshed to eliminate a potential race
            condition.

        On a system built without configure(1)'s "--with-ulog" option:
            refresh_logging(1):
                Corrected the signal from SIGHUP to SIGUSR1.

                Prefixed kill(1) command with command(1) to avoid non-standard
                kill(1)-s (e.g., those that expect "%job").

            log.c:
                Changed the signal that the system uses to re-open log files
                from SIGHUP to SIGUSR1 to follow more closely the semantics of
                these signals. (Re-opening a log file is necessary to support
                log file rotation.) SIGUSR1 is also used by some LDM utilities
                to log performance statistics; consequently, such statistics
                will appear at the start of a rotated log file. The extant LDM
                utilities that log such statistics are: dvbs_multicast(1),
                noaaportIngester(1), readnoaaport(1), pqcat(1), pqcopy(1),
                pqing(1), pqsend(1), pqsurf(1), and rtstats(1).

    ldmd(1):
        Changed "obsolete" to "redundant" in the log message about terminating a
        previous upstream LDM whose subscription is a subset of the
        currently-subscribing downstream LDM.

        Blocked delivery of the SIGUSR1 signal for EXEC-ed programs so that it
        won't terminate programs that don't handle it (e.g., the McIDAS
        product-decoding programs). Programs that do handle it must and do
        explicitly unblock this signal.

    pqcat(1):
        Added printing of product-class to starting-up message.

    pqcopy(1):
        Corrected usage-message and manual-page.

    ldmadmin(1):
        Fixed computation of the number of LDM connections on a Solaris system
        by making the algorithm more robust to variations in netstat(1) output
        and by using uldbutil(1).

    Multicast:
        Ensured removal of test product-queues in up7_down7_test.c.

6.13.3	2016-07-20T14:56:07-0600
    logging:
        Enhanced performance by making "log_level" volatile and having LOG_LOG()
        test it directly.

        Improved robustness by moving log_refresh() action from logl_lock() to
        the static I/O function flush().

    ldmd(1):
        Changed the exit status of the top-level LDM server from 0 to 3 when it
        terminates due to the crashing of a child process.

    pqact(1):
        Corrected "pq_sequence()" to "pq_next()" in log message in pqact.c.

    notifyme(1):
        Corrected handling of "-l ..." option.

6.13.2	2016-07-13T10:32:17-0600
    Logging:
        log.c:
            Added check of return-value of logi_set_destination() in log_init().

            Added performance test and profiling target.

        ulogger(1):
            Enabled makefile "make ctags" target.

    Product-Queue:
        pq.c:
            Added function pq_next() as a more performant replacement for 
            pq_sequence() and pq_sequenceLock().

            Squashed latent bug that would eventually cause an assertion failure
            or a segmentation violation if a new skip-list node couldn't be
            obtained.

            Restored caching to fb_sz(), tq_sz(), fl_sz(), and ix_sz() to
            improve performance. Added log_assert(nelems) to same and to
            ix_ptrs().

            Inlined some static functions to obtain small performance
            improvements.

        test_pq.c:
            Created test_pq_sequence().

        pq_test_insert(1):
            Added ability to periodically insert synthetic data products.

    pqact(1):
        pqact.c:
            Refactored to use pq_next().

            Moved setting of insertion-time of last successfully-processed
            product from main() to processProduct() to increase performance.

            Corrected time-value in first "Processed oldest product" message.

        filel.c:
            Improved performance by
                Converting the function entry_isFlagSet() into a macro
                (profiling revealed that pqact(1) spent about 15% of its time in
                this function).

                Executing the fl_sync() function only when the head of the
                product- queue is reached instead of after every matched
                data-product (profiling revealed that pqact(1) spent about 1/3
                of its time in this function).

            Squashed latent bug in format argument of log_add_syserr() in
            unio_put().

        palt.c:
            Rewrote processProduct(), which is called by pq_next().

            Rewrote dummyprod() to use new processProduct().

        Added test and profiling targets.

    noaaportIngester(1) (productMaker.c):
        Reverted the computation of the MD5 checksum in productMaker.c for
        compressed GINI data-blocks when neither the "-c" nor "-f" options are
        specified from Raytheon's algorithm (which always decompresses and
        recompresses the data-block) to the original algorithm (which uses the
        data-block "as is"). This was done because Raytheon's algorithm results
        in MD5 checksums that differ from previous versions of
        noaaportIngester(1) -- resulting in failure of the duplicate product
        rejection mechanism of the product-queue.

        Incorporated Raytheon's bug-fix that eliminates unnecessary
        retransmission requests for GINI products from NOAA's NCF. (Only
        requests from NOAA offices are honored).

    ldmadmin(1):
        Added check for the pqsurf(1) queue for any pqsurf(1) EXEC-ed in the LDM
        configuration-file.

    refresh_logging(1):
        Modified makefile to create logging-specific script at build-time to
        accommodate Solaris' broken sh(1) (`test -z "#"` fails).

        Changed "test -f <pid_file>" to "test -r <pid_file>" to accommodate the
        non-standard test(1) built-in of Solaris' shell.

        Added quotes around variable substitutions.

    Multicast(1):
        Improved up7_down7_test(1).

6.13.1	2016-06-02T15:29:28-0600
    Installation:
        Improved examination of system logging daemon by configure(1) script:
            Removed check for running daemon to accommodate Docker

            Simplified tests for configuration and PID files.

        Modified the "make clean" rule so that it doesn't delete the (generated)
        LDM tutorial files so that a subsequent "make" won't fail.

        Added "StrBuf.h" to BUILT_SOURCES macro in "misc/Makefile.am".

    Logging:
        log(3):
            Created log_is_stderr_useful(), which indicates if the standard
            error stream is open on something other than /dev/null.

            Eliminated log_reinit() because it's no longer needed.

        log2slog(3):
            Made initialization more robust.

            Corrected algorithm that vets the facility code.

            Eliminated printing of trailing newline in messages.

            Made the setting of the destination for log messages more atomic.

        ulogger(1):
            Corrected interpretation of priority levels by making the map from
            name to logging level distinct from the one in
            </usr/include/sys/syslog.h>.

    Product-Queue (pq.c):
        Made product-queue file descriptor close-on-exec.

        Added property that is the count of outstanding reservations from
        uncompleted pqe_new() and pqe_newDirect() calls and the function
        pqe_get_count() to read it.

    ldmd(1):
        Moved configuring of standard I/O file descriptors from EXEC action of
        the configuration-file module to near where ldmd(1) daemonizes itself.

    pqact(1):
        Made the configuration of the standard output and standard error streams
        more robust in preparation for execution of child processes.

    pqing(1):
        Corrected bug introduced in 6.13.0 that didn't honor the argument of the
        "-q" option.

    NOAAPort:
        noaaportIngester(1):
            Merged Raytheon's correction to the use of zlib(3). When option
            "-c" wasn't specified, the OCONUS imagery received over the
            NOAAPORT_OPT channel wasn't processed correctly: the zlib stream
            was not reset before the beginning of the new product resulting
            in Z_STREAM_ERROR.

        nbs_ingest(1) (not yet ready for use):
            Use "Option Field Length" parameter in product-definition header for
            length of product-specific header instead of remaining bytes in
            frame.

            Added debugging statements.

    Misc:
        Replaced the use of clock_gettime() with gettimeofday() because the
        former doesn't exist on one client's OS X system (at least) and it
        appears to be supported on fewer platforms than the latter. Also, while
        clock_gettime() can have nanosecond resolution, the microsecond
        resolution of gettimeofday() is sufficient for the LDM.

        Created open_on_dev_null_if_closed().

        Added unit-test of timestamp module.

        Corrected timeval_normalize() (which is currently unused).

        Added "#include <stddef.h>" to "noaaport/fifo.hin" for `size_t`.

        Removed minor lint discovered by Coverity.

    Testing:
        Shortened run-time of pq_test(1).

    Documentation:
        Updated version-independent HTML files.

    Multicast (not yet ready for use):
        mcast_lib(3):
            Changed use of SendAppNotifier and RecvAppNotifier to SendProxy and
            RecvProxy, respectively.

        FMTP:
            Changed name from "vcmtp" to "FMTP" in LDM codebase.

            Ported TcpSend::updatePathMTU() to SunOS 5.10.

6.13.0	2016-05-03T16:03:52-0600
    Logging:
        Re-wrote LDM logging to eliminate the dependency on the system logging
        daemon because:
            1) It was the major impediment to correctly using the LDM (different
               logging daemons, different configuration-file formats, different
               security considerations, etc.);
            2) It was the major impediment to putting the LDM in a Docker
               container;
            3) Only 7 "local" syslog(8) facilities are guaranteed and NOAAPort
               ingestion could use more; and
            4) Some system logging daemons would drop LDM log messages depending
               on how heavily they were loaded.
        For backward-compatibility, the original logging component, "ulog",
        still exists and is unconditionally included in the LDM library,
        "libldm". Indeed, the original behavior of the LDM can be obtained by
        specifying the option "--with-ulog" to the configure(1) script. By
        default, however, the new logging component, named "slog" (for "simple
        logging"), will be built and used. While "slog" can be told to write to
        the system logging daemon, by default it will write directly to the LDM
        log file if the process doesn't have a controlling terminal (i.e., is a
        daemon) or to the standard error stream if the process does have a
        controlling terminal (i.e., is not a daemon). Like the original "ulog"
        component, "slog" also supports log file rotation via a
        crontab(1)-executed "ldmadmin newlog" command. See the installed HTML
        documentation "$HOME/share/doc/ldm/basics/logging-format.html" or the
        web page
        <https://docs.unidata.ucar.edu/ldm/ldm-current/basics/logging-format.html>
        for more information.

        A particular consequence is that logging, by default, will no longer
        depend on SELINUX.

    NOAAPort Ingestion (noaaportIngester(1), readnoaaport(1)):
        Incorporated Raytheon's modifications to noaaportIngester(1) to:
          1) Optionally create blank scan lines for missing GINI data; and
          2) Optionally always de-compress a compressed data block in a NOAAPort  
             frame.

        Eliminated memory-leaks and SIGSEGV violations from components that read
        GEMPAK tables.

        Added entries to GEMPAK tables (indicated column positions aren't correct):
          File "g2varswmo.tbl":
          000 001 008 010 Total precipitation             kg m**-2     APCP   0    -0.01
          000 001 029 009 Total Snowfall                  m            SNOW   0 -9999.00
          000 001 029 010 Total Snowfall                  m            SNOW   0 -9999.00
          000 019 028 000 Mtn Wave Turb (eddy disp rate)  m**2/3 s**-1 MWTURB 0 -9999.00

          File "g2varsncep.tbl":
          000 001 225 009 Freezing Rain                   kg m**-2     FRZL   0 -9999.00
          000 001 225 010 Freezing Rain                   kg m**-2     FRZL   0 -9999.00
          000 019 219 000 Turbulence Potential Fcst Index NA           TPFI   0 -9999.00
          010 000 193 000 Wave Length                     -            WLENG  0 -9999.00

    ldmadmin(1):
        Reduced overestimation of new queue capacities (i.e., data capacity and
        product capacity) by "ldmadmin vetqueuesize" and eliminated computing
        new capacities if the data is insufficient.

        Modified the "printmetrics" command to use free(1) to obtain
        memory-usage metrics if they aren't obtained from top(1).
        
        Corrected "break" in loop to "last".
        
    LDM (ldmd(1)):
        Top-level Server:
            Added immediate, unsuccessful termination of the top-level LDM
            server -- before it forks a daemon version of itself -- if its LDM
            configuration-file doesn't specify anything to do (i.e., is
            effectively empty).
            
            Removed misleading "Couldn't get command of EXEC process ..." error
            message because it was mistakenly applied to upstream LDM processes
            and not just EXEC processes.

        Upstream LDM Child Process:
            Reduced the delivery latency of products with relatively large
            inter-product arrival gaps by modifying the RPC calls that LDM-6
            makes to send data products in primary mode by switching from
            "batched" RPC calls to asynchronous "message-passing" RPC calls.
            Specifically, the XDR function to decode the (non-existent) response
            was changed from `NULL` to `xdr_void()` in the functions
            `notification_6()`, `hereis_6()`, and `blkdata_6()`. Because the
            results are highly dependent on the characteristics of the data
            flow, you might not notice any difference.

    pqinsert(1):
        Corrected test of mmap() return-value to eliminate crashing if a
        directory was specified on the command-line.

    pqact(1):
        Corrected the setting of the product-queue cursor based on the last
        successfully-processed data-product from the previous session. Before
        this, pqact(1) might miss a product due to a restart of the LDM. This
        was most apparent in processing NEXRAD-2 data-products. Thanks Ryan.

        Demoted uerror() message in spipe_prodput() to log_debug().

    pqing(1):
        Accepted Bill Gerry's additions of higher baud rates.

        Added support for decoding the length of GRIB-2 data-products and
        improved algorithm for decoding the length of GRIB-1 messages.

    Product-Queue (pq(3)):
        Added mutex destruction to freeing.

        Modified fb_get() to log `fblk` diagnostics when it fails.

        Improved assertion of relationship between `fblk` arena size and actual
        used space.

        Modified tq_add() to error-return if it can't get an `fblk` because
        there are too many products in the queue.

        Modified rpqe_new() to return the product-queue to a consistent state
        if an error occurs.

        Used correct product size in pqe_insert() and pq_insertNoSig().

        Refactored pqe_insert() for better error-handling and return status.

        Harmonized return code names by adding PQ_DUP and PQ_BIG and making
        PQUEUE_DUP and PQUEUE_BIG aliases.

        Hardened the product-queue module against concurrent access by multiple
        threads by:
            1)  Adding a new (undocumented) option (`PQ_THREADSAFE`) to the
                `pq_create()` and `pq_open()` functions;
            2)  Replacing the use of the thread-unsafe function `random()` with
                the thread-safe function `nrand48()`; and
            3)  Removing the (undocumented) ability to reset the
                pseudo-random-number generator used in the skip-list
                implementation.

    inetutil(3):
        Modified sa_getInetSockAddr() to try AF_UNSPEC first, then AF_INET.

    ldmprint(3):
        Added missing space between the timestamp and feedtype.

    Installation:
        Stopped "make distclean" from removing "*.log" files so that the prior
        invocation of the configure(1)-script can be seen in the file
        "config.log".

        Improved test of netstat(1) options by the configure-script.

        Replaced UD_SEARCH_HEADER and UD_SEARCH_LIB with AC_ macros, improved
        library searching, and modified makefiles accordingly.

        Improved the setting of header file and library references by the
        configure script -- in particular, `/opt/csw` is favored over `/usr`
        because the Solaris XML2 library appears to have a bug.

        Modified script ensureSyslogEntry(1) to accommodate Solaris's grep(1),
        which doesn't support the standard "-F" or "-q" options.

    Documentation:
        Improved documentation based on latest workshop.

    Testing:
        Added "check-local" make(1)-target for ldmd(1).

    Continuous-Delivery:
        Corrected setting of configure(1) options in "delivery/deploy.sh".

6.12.14	2015-06-09T09:45:43-0600
    Logging:
        Corrected bug dealing with variadic arguments that could cause a crash
        under certain circumstances.

    pq_test_insert(1):
        Created test utility for inserting synthetic data-products into the
        product-queue.

6.12.13	2015-05-29T15:42:39-0600
    Logging:
        Rewrote many of the formatting functions in "ldmprint.c" in an attempt
        to eliminate the cause of a crash experienced by Art Person when a 
        downstream's LDM request was reduced due to applicable ALLOW entries.

6.12.12	2015-05-27T08:45:53-0600
    scour(1):
        Corrected setting of PATH.

6.12.11	2015-05-21T15:32:07-0600
    pqact(1):
        Corrected a bug introduced in version 6.12.10 in the logic regarding the
        setting of the last successfully-processed data-product and the return
        value of processProduct(). The bug manifested itself in version 6.12.10
        by not writing products to disk under certain circumstances. Thanks
        Gilbert.

6.12.10	2015-05-16T08:42:51-0600
    Product-Queue (pq.c):
        Corrected a bug that dealt with finding the last data-product that a
        downstream LDM successfully received given the product's signature. This
        bug manifested itself as either a segmentation violation (i.e., SIGSEGV)
        or 100% CPU usage -- both in the function `tqe_find()`. Thanks Gilbert.
        
    pqact(1):
        Modified pqact(1) to correct the setting of the last
        successfully-processed data-product when the LDM exits. Before, the last
        data-product that matched the `-f feed` and `-p pattern` options would
        be used regardless of whether or not it matched any entries in the
        pqact(1) configuration-file. Now, a data-product will be used if and
        only if it's successfully processed by an entry in the pqact(1)
        configuration-file. Thanks Daryl.

    Logging (ulog.c, log.c):
        Added signal blocking to the <log.h> implementation because that module
        calls async-unsafe functions and could be called by a signal handler.

    Misc:
        Removed considerable lint identified by Coverity Scan. Some of it was
        significant. See <https://scan.coverity.com/projects/4645>.

6.12.9	2015-03-16T11:11:30-0600
    Added to the configure(1) script, support for Solaris' non-standard grep(1),
    which doesn't have the "-q" (quiet) option.

6.12.8	2015-03-13T15:45:05-0600
    Installation:
        Modified to hopefully prevent installation subdirectories/links from
        being created in the home directory of an LDM developer executing the
        command `make distcheck`. This only affects LDM developers.

    NOAAPORT (noaaportIngester):
        Corrected code in the AWIPS-II retransmission-request layer that relied
        on undefined behavior in formatting log messages. This only affects NWS
        offices.

6.12.7	2015-03-06T09:39:26-0700
    LDM Server (ldmd):
        If the LDM configuration-file has no ALLOW or ACCEPT entries, then the
        top-level LDM process will no longer listen for incoming connections.
        This change makes it easier to run downstream-only LDM instances that
        don't interfere with an LDM server on the same computer.

    pqact(1) (filel.c):
        Refactored and generally improved the code in an attempt to stop
        pqact(1) from receiving a SIGSEGV when executing regexec(3). This has
        only occurred on one host and it's not clear if it's due to the code or
        the host.

    Product Queue (pq.c):
        Corrected bug introduced in LDM 6.12.4 that caused the command "ldmadmin
        vetqueuesize" to work incorrectly: the queue size parameter or maximum
        acceptible latency parameter would *not* be adjusted if the registry
        parameter "/reconciliation-mode" was set to "increase queue" or
        "decrease maximum latency", respectively.

    NOAAPORT (noaaportIngester):
        Corrected a bug in getting GRIB2 vertical coordinate table in GEMPAK
        library. The routines to get the WMO and local tables cleared the extant
        table if a new table needed to be read. They then forgot that they did
        this if reading-in the new table failed.

        Added GEMPAK GRIB2 table "g2varsnssl.tbl" and installation of the
        symbolic link "g2varsnssl1.tbl".

        Improved the performance of finding GRIB2 parameter information by
        caching the GEMPAK parameter tables.

        Improved the error-message logged when information on a GRIB2 parameter
        or vertical coordinate can not be found in the relevant GEMPAK table.

        Added entries to the GEMPAK GRIB2 NCEP parameter table.

        Got the option "-I <ifaceIpAddr>" working. A process can now be made to
        receive from one interface only.

        Added printing of WMO header of GRIB2 data-products with unknown
        parameters.

        Slightly improved the performance of reading multicast input.
        
        Added attempt to lock process in physical memory to increase
        performance. The program will continue if this fails.

        Added to the statistics report, instances when the data input thread
        had to wait until sufficient space was available in the internal FIFO
        queue. Ideally, no such instances should occur when reading NOAAPORT
        multicast input. The statistics report is logged when the process
        terminates or receives a SIGUSR1. Reporting statistics might interfere
        with realtime data ingest.

        Merged changes to the retransmit-request capability from Raytheon for
        the AWIPS-II system. This capability can only be used by NOAA's weather
        forecast offices.

        Added `make check` using multi-radar/multi-sensor (MRMS) data from NSSL.

    Installation:
        Reduced the likelyhood that the script that modifies the system logging
        daemon's configuration-file would add an effectively duplicate entry
        for the LDM.

        Added support for running rsyslogd(8) on a Solaris system with
        configuration-file "/etc/opt/csw/rsyslog.conf" and PID-file
        "/var/run/rsyslogd.pid".

    Misc:
       Improved internal documentation.        

       Added finding doxygen(1) to configure script.

6.12.6	2014-09-04T13:56:41-0600
    pqcreate(1):
        Changed the assumed mean product size (which is used to compute the
        default number of slots in the product-queue) from 4096 to 51000
        bytes to better match current reality.

    NOAAPORT:
        Enhanced GRIB2 decoding by adding "ESTOFS" and "HRRR" model codes for
        the NCEP center.

6.12.5	2014-08-21T13:57:50-0600
    Installation:
        Added (untested) support for syslog-ng(8) as the system logging daemon
        rather than rsyslog(8) or syslog(8).

    NOAAPORT:
        Added port numbers for the two new channels that are part of the
        NOAAPORT SBN upgrade.

    Documentation:
        Removed from the HTML documentation, links to the web pages that listed
        successful and unsuccessful build environments because the information
        was hopelessly out of date, difficult to maintain, and labor intensive.

6.12.4	2014-07-29T17:04:22-0600
    Product-queue library (pq.c):
        Modified the product-insertion logic to continue rather than
        error-return (and, consequently, terminate the downstream LDM process)
        if the signature of a product that's being deleted to make room for the
        new product can't be found in the signature-list. An error-message will
        be logged instead. This was done because we've seen this occur at least
        three times over the past couple of years -- resulting in the LDM
        ceasing to receive data. Our working hypothesis is that a bit (either
        on-disk or in-memory) was somehow corrupted.

6.12.3	2014-06-27T16:12:47-0600
    Fixed a bug in the upstream LDM database that prevented disabling of the
    anti-DOS feature from taking effect and telling the user why.

6.12.2	2014-06-26T17:49:53-0600
    Fixed a bug in the extraction of function declarations from C source files
    into header files that caused the function `getSysConfDirPath()` to be
    undeclared and, consequently, to have its `char*` return value interpreted
    as an `int` -- with possibly catastrophic consequences on 64-bit systems.

6.12.1	2014-06-24T09:50:11-0600
    LDM registry:
        Fixed a bug in the decoding of boolean values that was introduced in
        the previous version.

    LDM server, ldmd(1):
        The ability to disable the anti-denial-of-service (anti-DOS) feature
        should now work.

6.12.0	2014-06-19T16:11:23-0600
    Installation:
        Improved robustness:
            * Check for CUnit package by configure(1) script;
            * Creation of "runtime" symbolic link;
            * Non-creation of LDM tutorial.

        Now requires that the C compiler supports the C99 standard (GNU's
        gcc(1) does, as should any c99(1) program).

    LDM server, ldmd(1):
        Added the ability to disable the anti-denial-of-service (anti-DOS)
        feature of upstream LDM-s. The anti-DOS feature ensures non-overlapping
        feeds to every downstream host by reducing subscription requests from
        downstream LDM-s running on the same host and terminating duplicate
        upstream LDM proceses. This action can cause problems if multiple
        downstream hosts are behind a NAT device or are connecting via ssh(1)
        tunnels because the downstream host will appear to be the same. The
        anti-DOS feature is enabled by default. To disable it, set the value of
        the registry parameter "/server/enable-anti-DOS" to "FALSE" via the
        command

            regutil -b FALSE /server/enable-anti-DOS

        The anti-DOS feature should only be disabled by sites that know and 
        trust *all* downstream LDM-s that can feed from it. Note that accidental
        denial-of-service attacks have occurred from trusted downstream sites
        due to incorrect network configuration.

        Here's your rope, now go hang yourself. :-)

    NOAAPORT Ingestion:
        Incorporated Raytheon's support for extracting NOAA Weather Wire
        Service (NWWS) products from the broadcast (basically a new numbered
        datastream).

6.11.7	2014-04-04T15:37:47-0600
    Downstream LDM:
        Squashed a bug that could result in an assertion failure if a remote
        site's portmapper was successfully used to connect to a remote LDM
        server (thanks Gilbert).

    NOAAPORT Ingestion:
        noaaportIngester(1):
            Incorporated Ratheon's latest modifications to support
            retransmission requests. This feature can only be used by NWS sites
            -- so don't even think about it.

        Improved the code in the NOAAPORT, GRIB-2, and GEMPAK libraries to
        reduce the chance a segmentation violation (SIGSEGV).

    notifyme(1):
        Squashed a bug in the LDM 5 client library (which is used by
        notifyme(1)) that would cause a segmentation violation (SIGSEGV) if the
        upstream hostname couldn't be resolved into an IP address.

    Documentation:
        Corrected URL for the IDD.

        Added missing manual-page precursor files to the source distribution.

    Misc:
        Implemented a continuous-delivery pipeline for the project.

6.11.6 	2013-06-24 17:04:55-06:00
    SUMMARY OF SIGNIFICANT CHANGES:
        * Eliminated the bundled PNG library;
        * Squashed bugs;
        * Improved the portability, release-engineering, and installation
          process;
        * Created a binary RPM for fc14.x86_64.

    Installation:
        Configure(1) Script:
            Made the search for the PNG library dependent on the
            "--with-noaaport" option.

            Improved the search for the XML2 and ZLIB header-files and
            libraries. In particular, added "/usr/local/lib", "/opt/lib",  and
            "/user/sfw/include" for general searches.

            Adapted to older tr(1)-s that don't extend the second character
            set.

        Mac OS/X Support:
            Added definition of _DARWIN_C_SOURCE to have "struct ip_mreq"
            defined on that system (that definition is needed by the NOAAPORT
            module).

            Don't define "union semun" on that system because it's defined by a
            system header-file.

            Added "opt/X11" to library search-path.

        SunOS Support:
            Removed SunOS 5.6 and 5.9 from portability-testing platforms
            because they're end-of-life.

            Added testing on other SunOS environments.

        Misc:
            Removed the bundled ZLIB package. This package's library was in the
            LDM shared-library and, on some systems, it conflicted with the
            system ZLIB library referenced by the system XML2 library (which was
            removed from the LDM in version 6.11.5).

            Created a relocatable binary RPM for fc14.x86_64.

            Made the creation of the contents of the ~/var directory more
            robust when relevant symbolic links already exist.

            Changed the default installation-directory from "/usr/local/ldm"
            to "/opt/ldm" following the Filesystem Hierarchy Standards. This
            is the default for the RPM installation. Use the "--prefix=..."
            option of rpm(1) if you want a different home-directory for the
            LDM user.

            Eliminated the creation of the "data" and "logs" symbolic links in
            the LDM user's home-directory. If they exist, however, then they
            won't be removed.

            Removed the bundled "libpng" package.

    ldmadmin(1):
        Added verbose logging to the check of the LDM configuration-file by
        the "start" command.

    LDM server (ldmd):
        Squashed a bug that caused a segmentation violation (SIGSEGV) on 64-bit
        Darwin.

        Eliminated a minor memory leak in the parsing of LDM configuration-file
        when the "-n" (do nothing) option is specified.

        Documented the "-n" (do nothing) option.

    Logging:
        Added setting of the SELINUX security context for the LDM log
        directory. This should allow the LDM to log when SELINUX is enabled.

        Squashed a bug that caused the log(3) module to drop a long new message.

    pqinsert(1):
        Squashed a bug that caused a segmentation violation (SIGSEGV) when given
        an unknown option.

    regutil(1):
        Made the "usage" message use the LDM logging facility.

        Added the "-v|-x" options and some debug-level messages.

    NOAAPORT:
        Enhanced the verification of the structure of a GRIB2 message.

        Adapted code to the opaque "struct png_struct" of PNG 1.5 and later.

        Corrected the inclusion of the "png.h" header-file.

    Documentation:
        HTML:
            Documented the RPM installation.

            Documented the dependency on the PNG package if the NOAAPORT
            system is built.

            Documented that the XML2 development and PNG development packages
            (as opposed to the runtime packages) are necessary.

        Misc:
            Replaced the license with the BSD 3-Clause license enhanced with
            patent protection.

6.11.5 	2013-05-10 14:42:19-06:00
    Summary:
        Elimination of the bundled "libxml2" package and improvements due to 1)
        vetting by valgrind(1); and 2) investigating and testing the Upstream
        LDM Database (ULDB).

    libxml2:
        Eliminated this package from the LDM distribution. This was done because
        1) the libxml2 package has become ubiquitous -- it's on all platforms to
        which I have access; 2) bundling it with the LDM distribution means that
        an upgraded, more secure version can't be used; and 3) eliminating it
        approximately halves the size of the distribution and the time-to-build.

    Upstream LDM:
        Added printing of the subscription (the request by the downstream LDM)
        when filtering by the upstream LDM disallows it.

        Corrected the error-message when unable to open the product-queue.

    Access Control List (src/protocol/acl.c):
        Improved layering by abstracting the linked-list of requests.

    ULDB (Upstream LDM Database in src/uldb/):
        Added blocking of signals to the public functions of the ULDB module
        that modify the database.

        Improved internal layering.

        Improved valgrind(1)-using unit-test.

        These changes were made because a 6.11.4 LDM appeared to have received
        a SIGSEGV in the ULDB module (support ticket JVF-237504). Consequently,
        the unit-test of that module was improved and a robustness test was
        added (about 3000 upstream processes in 5 seconds).

        Unfortunately, none of these changes appear to have been necessary: the
        ULDB module passes the improved unit-tests even without the changes.

    Semaphore-based Read/Write Lock (src/misc/semRWLock.c):
        Corrected the order of invalidating and freeing the lock structure as
        part of the ULDB investigation. Didn't make a difference.

    LDM Registry (src/registry/):
        Ensured that free() isn't called twice on the same file object, which
        could result in a SIGSEGV.

        Improved some internal documentation.

    NOAAPORT:
        Corrected error-message when unable to open the product-queue.

    Documentation:
        Added "libxml2" as a platform prerequisite.

    Release Engineering:
        Improved the "release" target in the top-level makefile.

        Re-enabled "make distcheck".

        Improved the "valgrind" target for ldmd(8).  Tried to add an
        "installcheck-local" target, but valgrind(1) won't execute setuid
        programs that are owned by root -- even adding a wrapper script doesn't
        do what's needed.

        Removed "libdict" subdirectory because it wasn't used.

6.11.4 	2013-04-03 14:22:34-06:00
    Installation:
        Added $(DESTDIR) to "ensure-ldmhome-links" rule in the makefile.

    ldmd(1):
        Made the "Exiting" log message an unconditional NOTICE.

        Eliminated redundant and dangerous free_prod_class() before
        set_prod_class() in the LDM-5 module.

        Improved places where an LDM process might terminate.

        Made establishing a connection more efficient.

        Decreased timeout if a forked server doesn't receive anything from 12
        minutes to 1 minute.

        Upstream LDM:
            Changed policy on duplicate incoming requests from 6.11.3 to
            terminate the earlier upstream LDM rather than current upstream
            LDM.

            Corrected PID in OK reply to version 6 FEEDME or NOTIFYME request.

            Reduced resource usage by eliminating duplication of upstream socket.

            Corrected time amount in "silent client" log message.

            Documented log message about terminating an obsolete upstream LDM
            process.

            Eliminated some closings of the connection by the upstream LDM to
            favor closing by the downstream LDM in order to avoid the upstream
            LDM going into the TCP TIME_WAIT state.

            Improved handling of errors.

            Demoted logging-level of transmission failure to INFO because this
            is expected when the downstream LDM switches its transfer-mode
            between PRIMARY and ALTERNATE.

            Documented log messages associated with subscription reduction by
            upstream LDM.

            Simplified waiting for next data-product (sleep either 0 or 60
            seconds).

        Downstream LDM:
            Assume upstream LDM is alive unless explicitly stated otherwise by
            the upstream LDM server.

            Convert status of a time-out due to death of upstream LDM from a
            disconnect into a time-out.

            Added PID of upstream LDM to error-messages.

            Enabled logging of LDM-6 request errors.

            Removed duplication of downstream socket.

            Made the autoshifting default "don't switch" in order to correctly
            handle out-of-the-blue HIYA messages.

            Improved decision on when a downstream LDM would change its
            transfer-mode.

    ldmsend(1):
        Added flushing of connection when all files are sent.

    protocol/child_process_set.c:
        Simplified some functions and added internal documentation.

    NOAAPORT Ingester:
        Allowed tabs in textual products.

    pqact(1):
        Improved clarity of buffer-toggling code in processProduct().

    rtstats(1):
        Added "-H <hostname>" option to rtstats(1) program.

        Added test for disallowed operands.

        Added gethostbyname(3) to "See Also" section of manual-page.

    RPM generation (still don't know if it works):
        Improved support:
            requtil(1) makefile:
                Made rules involving ETC_DIR honor DESTDIR.

                Corrected definition of ETC_DIR.

            ldm.spec.in:
                Added DESTDIR=%{buildroot} to "make" invocations.

    Misc:
        Improved some log messages.

        Improved some internal documentation.

        Made some cosmetic changes.

6.11.3 	2013-02-12 13:11:20-07:00
    General:
        Ported to all available in-house systems. Unfortunately, this means
        only certain versions of Linux (Fedora and CentOS), SunOS, and Darwin.

    Installation:
        Fix creation of ~/data if it already exists and isn't a link

    Downstream LDM 6:
        Added the reduction of REQUEST subscriptions based on previous
        REQUEST subscriptions. This means that, for example, the second
        subscription in the following:

            REQUEST IDS|DDPLUS .* idd.unidata.ucar.edu
            REQUEST UNIDATA .* idd.unidata.ucar.edu

        will, effectively, become

            REQUEST HDS|UNIWISC .* idd.unidata.ucar.edu

        This was done in order to reduce bandwidth usage and because many
        sites have such inefficient REQUEST entries.

        THIS MIGHT CAUSE A PROBLEM IF YOU HAVE SEVERAL DOWNSTREAM LDM-s BEHIND
        A NAT THAT REQUEST OVERLAPPING DATA FROM THE SAME UPSTREAM LDM. This is
        because the upstream LDM will see all the requests as coming from the
        same NAT device and so will reduce them to non-overlapping requests.
        The best solution is to have only one downstream LDM request all the
        data and to have the other downstream LDM-s request their subset of the
        data from it. (There are other solutions. Contact
        <support-ldm@unidata.ucar.edu> if you need them).

        Improved the API of the auto-shift module (which is responsible for
        switching between primary and alternate transfer modes) and refactored
        the module in order to improve its performance. Adapted the rest of the
        LDM to the changes (in particular, an upstream LDM no longer
        initializes the autoshift module).

        Added checking for nil HEREIS data-product (does nothing).

    Upstream LDM 6:
        Modified to no longer reject a subscription by a downstream LDM 6 based
        on existing subscriptions from the same downstream host.  Instead, the
        upstream LDM checks the new subscription against all previous
        subscriptions from the same downstream host. If the new subscription is
        a superset (either proper or improper) of an existing subscription from
        the same downstream host, then the other upstream LDM 6 process is
        terminated; otherwise, the new subscription is reduced by all previous
        subscriptions (which would normally do nothing).

        Eliminated the requirement that an upstream LDM that's sending the same
        data-products must be in the same transfer-mode (PRIMARY or ALTERNATE)
        in order to be terminated. This is because the downstream LDM can
        alternate between the transfer-modes and the previous upstream LDM
        should be terminated regardless of its transfer-mode.

        Added the ability to flush the connection by use of a nil (i.e., empty)
        data-product in order to improve performance over the current method of
        using a NULLPROC message, which requires a round-trip.  This feature is
        currently disabled.  It can be enabled once all downstream LDM-s are
        version 6.11.3 or later.

        Replaced use of exit() with done=1 in feed_or_notify().

        Improved free(3)ing of upstream LDM database (ULDB)-determined
        product-class.

        Eliminated use of the auto-shift module because that capability is only
        meaningful to a downstream LDM.

    Top-level LDM Server:
        Added restart of system logging if an EXEC-initiated execvp(2) fails so
        that the reason for the failure will be logged.

        Ensured resource deallocation in upFilter_addComponent().

    pqact(1):
        Added printing of product-identifier to debug message.

        Added "pipe_put(): write error: ..." error-message.

    rtstats(1):
        Replaced initial use of standard error stream with use of the LDM
        logging module, ulog(3).

        Corrected documentation on "-P port" option.

        Made miscellaneous improvements.

    System Logging:
        Logging library (ulog(3)):
            Added getter functions for ulog(3) parameters to support the
            top-level LDM server logging the reason for an EXEC failure.

        Modified how the system logging configuration-file is modified during 
        package installation:
            Replaced ".debug" with ".*" in LDM entry to get logging to work on
            most systems.

            Added addition and use of template on systems that use version 5 or
            later of rsyslogd(8) so that the timestamps will be in UTC.

    Documentation:
        Improved description of LDM behavior.

        Documented "-p pattern" option in pqsend(1).

        Documented use of uldbutil(1) for monitoring upstream LDM-s.

        Updated 2012 workshop:
            Made break-times indefinite in workshop web pages.

            Corrected class times.

            Changed domain-name from guest.ucar.edu to fl-guest.ucar.edu.

            Added configuration variable YEAR to workshop-specifics.

        Replaced "6.9.8" with "@VERSION@".

    Misc:
        Created a data-product module and a nil data-product.

        Improved internal documentation.

        Adapted extractDecls(1) to SunOS 5.11's /usr/bin/awk.

        Corrected "git status -a" to "git status -u" in makefile.

6.11.2 	2012-12-17 11:11:20-07:00
    HOTFIX!

    LDM server:
        Differentiated between feeders and notifiers by the upstream LDM
        database (ULDB) when rejecting a request by a downstram LDM.

        Also removed all uldb_remove() calls except in cleanup() routine.

    ULDB module:
        Corrected use of RWL_EXIST in initLock() in misc/semRWLock.c.

    Makefile:
        Removed unnecessary "releaseCheck" target.

        Corrected "git status -a" to "git status -u".

6.11.1 	2012-10-05 10:21:05-06:00
    Makefile:
        Improved rules for releasing a new version:
            Removed targets "releaseCheck" and "ensureRelease".

            Corrected how "release" rule sets version in AC_INIT().

            Made "release" mandatory to prevent bad CHANGE_LOG from being
            released.

            Corrected "commit-check" rule: added "-Fq" to grep(1).

    Upstream LDM Database (uldbutil(1) & uldb(3)):
        Added pathname to uldb(3) initialization so that "make check" in
        the "protocol/" subdirectory doesn't interfere with a running LDM
        system.

        Improved logging by both uldb(3) and uldbutil(1).

    pqing(1):
        Corrected setting of logging file-descriptor (thanks Harry).

        Moved parsing of "-s" option to outside #ifdef conditional.

        Corrected version printed.

    Documentation:
        Corrected main index in tutorial.

        Added 5th channel example to NOAAPORT documentation.

        Corrected CHANGE_LOG for release 6.11.0.

        Added RELEASE_NOTES.

    Misc:
        Defined _XOPEN_SOURCE as 600 and corrected #includes of "config.h".

        Removed Eclipse-identified lint.

        Regenerated protocol/ldm_xdr.c.

        Improved some internal documentation.

        Removed unnecessary directories "pnglib/CVS" and "zlib/CVS".

6.11.0 	2012-09-24 16:13 -06:00
    Instructions:
        Improved preinstallation instructions: add modification of Red Hat
        net.ipv4.conf.default.rp_filter kernel parameter to preinstallation
        instructions.

        Corrected LDM configuration-file example: merged multi-line entry into
        single line.

    Installation:
        Improved configure(1) error-message: if the configuration-file for the
        system logging daemon isn't found, then the error-message will now
        indicate that the problem might be because it's not readable.

    NOAAPORT:
        Updated GRIB tables.

        Added noaaport/mainpage.h to repository.

        Fixed installation of NOAAPORT webpages

    ldmadmin(1):
        ldmadmin(1) calculates the number of slots from the size of the
        surf-queue. Modified to allow use of suffixes on size specification.

    ldmd(1):
        Added transitory upstream LDM database.

    uldbutil(1):
        Created uldbutil(1) utility to list local upstream LDM processes.

    pqact(1):
        Improved command-line parsing and usage message: two operands caused
        default configuration-file to be used, which is a latent bug.
        Error-messages during command-line parsing are printed to the
        standard-error stream, which doesn't exist in the LDM context.

        Merged Raytheon's changes from ldm-6.8.1

    pqing(1):
        Made the size of the largest expected data-product a command-line
        option (-s size).

    pqinsert(1):
        Added "-i" option to usage-message and improved message.

        Improved exit status.

    Logging:
        Modified log_start(): it no longer clears accumulated log messages.

        Moved filename and line number to start of log messages.

        Corrected addition of "localx.none" to system logging
        configuration-file when an entry comprises multiple lines.

        Demoted "Couldn't flush connection" log message from ERROR to NOTE.

    General:
        Removed some lint reported by Eclipse's C code analysis.

        Merged AWIPS-2 modifications from Raytheon

6.10.1 	2011-10-24 13:11:04-06:00
    Installation:
        Corrected installation helper-script "ensureSyslogEntry": ensured that
        ${LOG_LDM} and ${LDM_LOGFILE} would be replaced by their values rather
        than by their names.

        Added C macro LDMHOME to configuration header-file "config.h" and made
        configure(1) script set it to default value to be used if environment
        variable LDMHOME isn't set.

    ldmadmin(1):
        Removed setting of LDMHOME to $HOME in ldmadmin(1) because it was no
        longer necessary (and could be wrong) because LDMHOME is now determined
        by the configure(1) script.

    pqutil(1):
        Improved pqutil(1): initialized "path" variable in main() to NULL to
        prevent crashing when dereferenced.

    LDM library:
        globals.c:
            Improved getLdmHomePath(): made use of LDMHOME C macro in 
            "config.h" if environment variable LDMHOME isn't set.

        ulog.c:
            Corrected serror(): now handles arguments that contain "%".

    Documentation:
        Made cosmetic change to HTML documentation: remove extra space from
        example command.

6.10.0 	2011-10-18 11:01:05-06:00
    NOAAPORT:
        Merged the NOAAPORT package into the LDM package.

        Corrected a bug in the deprecated readnoaaport(1) and dvbs_ingest(1)
        programs that caused an abort if the logging level was DEBUG due to the
        shared memory FIFO being already locked.

        Improved noaaport/gempak error messages -- in particular, added
        information to messages about missing tables and parameters.

    GRIBINSERT:
        Merged the GRIBINSERT package into the LDM package. This subpackage
        converts GRIB messages in files into LDM data-products and inserts them
        into the LDM product-queue.

        Improved GRIB2 tables:
            Updated tables.

            Made installation rule create links instead of install duplicate
            files.

            Moved site-specific stuff from "g2varswmo.tbl" to "g2varsncep.tbl".

    pqact(1):
        Improved log messages:
            The PID and command-string of every child process is logged at
            level ERROR if its parent pqact(1) process deletes the reference to
            the child process due to an error in an interaction with it.

            The PID and command-string of every child process created due to a
            PIPE entry and whose reference is deleted in order to create
            another pipe is logged at level INFO.

    ldmadmin(1):
        Changed when product-queue metrics are reset by ldmadmin(1) and added
        queue metrics resetting to "ldmadmin start". The metrics are no longer
        reset if the reconciliation-mode is "do nothing".

        Improved the command "vetqueuesize" (and, consequently, the command
        "check"). The capacity of the product-queue will not be vetted until
        the LDM server has been running for at least `regutil
        /server/max-latency` seconds. This will prevent a misdiagnosis of the
        queue capacity when an initially empty queue is being rapidly filled at
        LDM startup.

        Improved "plotmetrics" command:
            Ported most of the command to SunOS. Getting the number of LDM
            connections is still problematical, however, because the output of
            SunOS's netstat(1) differs radically from Linux's netstat(1).

            Made the plotMetrics(1) script more portable by replacing
            arithmetic expansion with use of expr(1).

            Changed the title of an "ldmadmin plotmetrics" plot to "Amount of
            Data in Queue vs. time".

        Improved "ldmadmin newmetrics" example: corrected minute and hour
        fields and changed interval to weekly.

        Corrected spelling of "reconciliation"

    pqmon(1):
        Documented "mvrtSize" & "mvrtSlots" in output.

    pq(3):
        Improved error-message when queue is too big.

    Documentation:
        Improved installation documentation.

        Made tarfile reference version-independent.

        Modified README: removed RELEASE_NOTES section and modified SUPPORT
        section.

    Misc:
        Fixed error-logging when LDMHOME isn't set

        Many changes related to porting to different platforms.

6.9.8   2011-06-10
        Installation:
            Changed the build-procedure for the product-queue library (pq(3))
            to improve throughput.  Before, the build-procedure was configured
            to create a pq(3) library that always memory-mapped the
            data-products individually (rather than memory-mapping the entire
            product-queue) if the C compiler was c89(1) or c99(1) and the
            "int", "long", and pointer types were 32-bits but the "off_t" type
            was at least 64-bits. Now, the pq(3) library will always memory-map
            the product-queue in a single call if possible regardless of the
            programming environment. This reduces the number of calls to the
            system mmap(2) and munmap(2) functions and, consequently, increases
            throughput.

            Installed rpc/ header-files because the native ones on a Solaris
            system were preventing the NOAAPORT package from being built.

            Changed "configure.ac" so that the C compiler determined by the
            top-level "configure" script is used to build the "libxml2"
            subpackage.

            Eliminated use of _MAPRGNS C macro.

        ldmadmin(1) script:
            Changed setting of PATH environment variable. Before,
            "$LDMHOME/bin" was prefixed to PATH; now, "@prefix@/bin" is
            prefixed to PATH, where "@prefix@" is the value of the "prefix"
            variable determined by the configure(1) script). This allows the
            LDM user to easily execute an LDM system to which the "runtime"
            link doesn't point.

            Removed reference to SEEK_END from "use Fcntl" statement because
            that constant isn't used and older perl(1)'s don't have it.

        Product-queue library, pq(3):
            Demoted the logging-level of the minimum virtual residence time
            (MVRT) data-product message from NOTICE to INFO so that it will
            only be emitted if verbose logging is enabled.

            Modified logic for deciding whether or not to memory-map data-
            products individually. Such mapping now occurs if and only if the
            PQ_MAPRGNS flag is specified (not likely) or the actual size of the
            product-queue prevents it from being memory-mapped by a single
            mmap(2) call. Eliminated use of _MAPRGNS C macro.

        pqact(1):
            Added "-metadata" option to FILE action. This causes a binary
            representation of the data-product's metadata to be written to the
            output file. See the distributed, example pqact(1) configuration-
            file for more information.

            Documented "-log" option of FILE action in distributed, example
            pqact(1) configuration-file.

        HTML documentation:
            Removed all attributes from <body> element to enable correct
            working with new UPC website.

            Improved documentation on running multiple LDM-s.

        Misc:
            Modified file "protocol/LdmProxy.c". Replaced use of
            "s_prod_info(NULL, 0, ...)" with use of a static buffer to prevent
            SIGSEGV on 64-bit RHEL 6. Thanks Doug Gaer.

            Removed valgrind(1) lint from "misc/inetutil.c:ghostname()".

            Added handling of snprintf(3) and vsnprintf(3) returning a value
            greater than the size of the buffer.

            Improved log(3) module:
                * Arbitrarily long messages;
                * Return-value handling of vsnprintf(3); and
                * Thread-safe.
                * Added log_errnum(int errnum) in anticipation of supporting
                  multiple threads.

6.9.7   2011-02-01
        Installation:
            Make the determination of large-file support by the configure(1)
            script more robust by removing the use of the "-v <spec>" option of
            the getconf(1) utility because some of those utilities are broken.

        ldmadmin(1):
            Improve the computation of the queue parameters when the queue is
            too small or the maximum-latency is too large by basing the
            computation on the data-usage and slot usage at the time when the
            minimum virtual residence time is set in order to increase the
            stability of the result.

            Improve the warning message from the "ldmadmin vetqueuesize"
            command when the reconciliation-mode is "do nothing" in order to
            better inform the user by printing to the standard error stream
            what the queue parameters or the maximum-latency parameter should
            be in order to guarantee rejection of duplicate products.

        pqmon(1):
            Improve the output from the "-S" option in order to improve the
            stability of the computation of new queue parameters and maximum
            latency parameter by printing two more metrics: the data-usage and
            the slot-usage at the time when the minimum virtual residence time
            was set.

        pq(3) library:
            Add additional queue metrics in order to improve the stability of
            the computation of new queue parameters and maximum latency
            parameter by adding persistent tracking of the number of bytes used
            and the number of slots used when the minimum virtual residence
            time is modified.

            Improve the computation of the minimum virtual residence time in
            order to improve its stability by safeguarding the computation
            against data-products that are received or deleted before their
            creation-time.

            Improve the minimum virtual residence time access-API by replacing
            pq_getMinVirtResTime() and pq_clearMinVirtResTime() with
            pq_getMinVirResTimeMetrics() and pq_clearMinVirtResTimeMetrics(),
            respectively.

6.9.6   2011-01-25
        pqact(1):
            Now converts a relative specification of its configuration-file to
            an absolute one so that the file can be (re)read even if the
            current working directory changes (which is the default in LDM
            6.9).

        ldmd(1):
            Add check for empty product-identifier patterns in the LDM
            configuration-file. ldmd(1) will now emit a good error message and
            error-exit if it encounters one.

6.9.5   2011-01-20
        Installation:
            Correct determination by the configure(1) script of the pathname
            of the LDM log file for setting in the configuration-file of the
            system logging daemon.

6.9.4   2011-01-10
        Installation:
            Correct the configure(1) script's adjusting of the "sysconfdir" and
            "localstatedir" variables in order to get the "--syscondir=" and
            "--localstatedir=" options working.

            Correct a bug in the makefile rule that adds the LDM to the list
            of facilities that don't log to any system log files.

            Generalize the makefile rule that ensures the LDM doesn't log to
            any system log files.

6.9.3   2011-01-04
        Installation:
            Correct a bug in the configure(1) script's test for the c89(1) or
            c99(1) compiler that prevents building with support for large files
            on 32-bit systems.

            Generalize the makefile rule that adds the LDM to the list of
            facilities that don't log to the system log file.

        ldmadmin(1):
            Modify "newlog" command so that it no longer prevents other
            ldmadmin(1) scripts from executing simultaneously.

        pqact(1):
            Add the SIGXFSZ (file size limit exceeded) signal to the set of
            ignored signals in order to prevent the FILE action from crashing a
            running LDM system if the output file gets too big.

        Documentation:
             Remove "bin/" prefix from crontab(1) entry examples. It's
             unnecessary because the entries' "bash -l" beginning should obtain
             the correct LDM user's PATH environment variable.

6.9.2   2010-12-30
        Improve HTML documentation:
            Correct crontab(1) example for "ldmadmin check".

6.9.1   2010-12-29
        Enhance installation:
            Modify configure(1) script so that it attempts to build in as large
            a programming environment as possible (as it did in versions 6.2
            through 6.8) in order to support product-queues larger than 2^31
            bytes. The configure option "--disable-max-size" disables this
            feature.

        Modify ldmadmin(1):
            * Correct ldmadmin(1) lock-file locking (IMPORTANT!).
            * Improve queue-deletion logic.

        Improve pqcreate(1):
            Check for overflow of size specification due to suffix ("M", "G",
            etc.).

        Document wasReceived(1):
            Add printing of usage message; create man(1)-page; and add to list
            of programs in HTML documentation.

6.9.0   2010-12-23
        SUMMARY: Dragged the kicking and screaming LDM package into the late
            20th century.  :-)

        Installation:
            Upgraded the package-installation mechanism from one based on
            autoconf(1) and ad-hoc makefiles to one based on automake(1).  THIS
            IS A BIG DEAL WITH RAMIFICATIONS: BOTH THE INSTALLATION PROCEDURE
            AND LAYOUT ARE DIFFERENT.  FORGET EVERYTHING YOU KNOW ABOUT
            INSTALLING THE LDM AND FOLLOW THE NEW WEB-PAGE INSTRUCTIONS.

            Incorporated documentation into the package.

        Registry:
            Created a registry for the LDM similar to the Windows registry,
            Gnome's GCONF, and Java's preferences.  The registry can be
            accessed both from scripts and programatically.  A new utility,
            regutil(1), can access the registry from the command-line.

            The registry is implemented as an XML file (etc/registry.xml) -- so
            it can be manually edited if no other process is writing to it.

            As a consequence of the creation and use of the registry, the
            following environment variables no longer work:
                LDMHOSTNAME
                LDMPQFNAME

        Portability:
            Added checks for netstat(1) and top(1) to configure(1) script and
            appropriately modified ldmadmin(1).  Among other things, this
            ported the "ldmadmin printmetrics" command to Mac OS X (note,
            however, that a bug in Mac OS X prevents the LDM from working
            reliably on that system).

        ldmadmin(1):
            Added "vetqueuesize" command to reconcile the maximum latency
            parameter with the observed minimum virtual residence time of the
            queue. THIS IS A BIG DEAL BECAUSE IT MEANS THE LDM SYSTEM CAN NOW
            *AUTOMATICALLY* RECREATE THE PRODUCT-QUEUE -- ADJUSTING ITS SIZE AS
            NECESSARY -- TO PREVENT DUPLICATE PRODUCTS FROM BEING TRANSMITTED.
            See the web-page on configuring the LDM for details.

            Added "check" command to check the LDM system via crontab(1). This
            command will adjust the size of the product-queue if necessary
            and configured to do so.

            Made decoding of invocation-arguments command-specific so that
            the "-f" option could be used in both the "mkqueue" and "watch"
            commands.

            Improved support for concurrent ldmadmin(1) processes: replaced
            test for lock-file existence with non-blocking call to flock().

            Modified "clean" command so that it no longer emits a warning and
            error exits if the LDM server pid-file (~/ldmd.pid) doesn't exist.

            Modified "log" command so that it uses the PAGER environment
            variable instead of more(1).

            Made "usage" the default command.

            Cleaned-up "usage" message.

            Enhanced output of "config" command.

            Improved some error-messages.

        LDM server (ldmd(1)):
            Renamed the LDM server from "rpc.ldmd" to just "ldmd".
            APPROPRIATELY ADJUST ANYTHING YOU HAVE THAT DEPENDS ON THIS NAME.

            Added logging to some failed pq_close() calls in an attempt to
            debug the Mac OS X 10.5 fcntl() problem.

        regutil(1):
            New utility for accessing the LDM registry from the command-line.

        pqmon(1):
            Added "-S" option to print various "size" parameters to the 
            standard output stream.

        pqutil(1):
            Added "-C" option to clear the minimum virtual residence time
            metric.

        ulogger(1):
            Made the LDM logging facility (default: LOG_LOCAL0) the default
            facility for the "-p" option.

        pqsend(1):
            Modified to use LDM-6 protocol and added option to decouple its
            total time-out and time-offset parameters.

            Improved filtering of sent data-products.  If the downstream LDM
            replied to the HIYA with a RECLASS response, then the offered
            product-class specification was replaced with the one in the reply.
            This would prevent the originating site from restricting the class
            of products sent to the LDM. Now, the product-class specification
            in the RECLASS response from the LDM is used in series with the
            originating site's specification: products must now pass both
            filters.

        ldmsend(1):
            Modified to ensure that it can send a zero-length file on any
            system.

            Improved filtering of sent data-products.  If the downstream LDM
            replied to the HIYA with a RECLASS response, then the offered
            product-class specification was replaced with the one in the reply.
            This would prevent the originating site from restricting the class
            of products sent to the LDM. Now, the product-class specification
            in the RECLASS response from the LDM is used in series with the
            originating site's specification: products must now pass both
            filters.

        pq(3) library:
            Corrected ability to build without mmap(2) support via the NO_MMAP
            C macro.

            Added the ability to track the minimum virtual residence time.

            Added logging of data-product metadata when the associated
            data-product is deleted from the product-queue and it was created
            in the future.

        plotMetrics(1):
            Added test for non-existent data-files.

        Misc:
            Corrected pat_clone() if the source is the trivial pattern ".*".

            Upgraded the version-control mechanism from CVS to git(1).

            Corrected FNEXRAD webpages: removed "floater" link and corrected 
            "how to" link.

            Replaced defunct hyperlinks to list of WMO headers with hyperlink
            to WMO Tables from Manual 386.

            Added (undocumented) wasReceived(1) script.

            Added "config.h" to installed headers.

6.8.1   2009-08-14
        Installation:
            Improved configure(1) script:
                Added checks for ar(1), rpcgen(1), netstat(1), ntpdate(8),
                and version 5 of perl(1).

                Documented more significant environment variables listed
                by "configure --help".

            Replaced use of $(INSTALL) in makefiles with cp(1) because
            that was always the value of the macro.

        ldmadmin(1):
            Improved responsiveness by changing default ntpdate(1)
            timeout from 20 seconds to 5.

            Improved printmetrics":
                Fixed bug that caused the command on some systems to
                terminate prematurely due to a close() error.

                Set default values for product-queue metrics to -1
                (missing).

                Ported command to more environments.

                Modified command to honor value of variable $pq_path.

        Added internal documentation to file pqact/state.c.

6.8.0   2009-07-31
        Installation:
            The ldmadmin(1) configuration-file is copied, read, and
            rewritten with additional user-configurable parameters.

        LDM Server (rpc.ldmd):
            Improved vetting (i.e., access-checking) of a client to
            prevent delays due to a time-out on the reverse DNS lookup,
            which is used to convert the client IP address into a
            hostname:
                Moved vetting from the LDM server before fork(2)ing a
                child process to the fork(2)ed child process.

                Made vetting a two-phase procedure: first with the
                client IP address and then, if and only if that fails,
                with the client hostname.

            Added the new option "-M max_clients" (default: 256).

        ldmadmin(1):
            Program:
                Added the ability to check the accuracy of the system
                clock.  This new ability is highly user-configurable.
                The defaults are to check the clock but not to abort if
                it's off by too much.

                Added removal of product-information (~/.*.info) files
                to the "delqueue" command if "$deleteInfoFiles" is true
                in the ldmadmin(1) configuration-file.

                Added the new option "-M max_clients".

                Added the new commands "printmetrics", "addmetrics", and
                "plotmetrics".

                Moved variables "$os" and "$release" to the
                configuration-file.

                Added the error message "Uknown command: ".

                Removed printing of "ldmadmin" from "ldmadmin usage" output.

            Configuration-file (ldmadmin-pl.conf):
                Improved internal documentation and layout.

                Added many new variables.

            Manual-Page:
                Documented LDM configuration-file argument.

                Added "-C" and "-x" options.

                Rearranged options alphabetically.

        scour(1):
            Added the prefix "scour: " to log messages.

        scripts/plotMetrics:
            Created this script for plotting the accumulated output of
            "ldmadmin addmetrics".

6.7.1   (was 6.7.1.1) 2009-06-19
        Installation:
            Modified the rule for making the RPC library so that it
            always adds the object modules because they weren't always
            added to the LDM library on a very fast Linux
            2.6.26.6-79.fc9.x86_64 system.

            Added printing of system logging daemon PID file to
            configure(1) script output.

            Improved configure(1) help message.

        ldmadmin(1):
            Modified "ldmadmin pqactHUP".  In general, it now restricts
            its search for pqact(1) processes to those owned by the
            user.  This should only affect sites running multiple
            pqact(1)-using LDMs on the same host.

        rpc.ldmd(1) (LDM server):
            Improved handling of "EXEC pqact..." entries in the LDM
            configuration-file that have trailing whitespace by the
            ldmadmin(1) script.

            Improved ldmd(1) manual-page.

        Downstream LDM:
            Fixed bug in downstream-LDM code when it receives a
            data-product that is larger than the largest data-product
            that the product-queue can hold.  Before, the downstream-LDM
            process would terminate; now it emits an error-level log
            message and continues.  (Thanks AWC).

        pqact(1):
            Fixed a bug in pqact(1) that caused it to receive a
            segmentation fault (SIGSEGV) when an action-entry matched
            the dummy "_BEGIN_" data-product.  Thanks Chuck.

            Promoted "timed-out" message from pqact(1) PIPE action from
            WARN to ERROR.

        pqinsert(1):
            Added "-i" option to synopsis section of pqinsert(1)
            man(1)-page.

        Misc:
            Modified manual-pages to automatically indicate the time of
            last modification and put options in alphabetical order.

6.7.0   (was 6.7.0.7) 2008-10-09
        Installation:
            Added rpcgen(1) output to distribution (e.g., ldm6_clnt.c,
            ldm_xdr.c) and removed unconditional use of rpcgen(1) from
            makefiles.  This was done because rpcgen(1) on a Mac OS/X
            10.5.1 (Darwin 9.1.1) system generates output that's
            incompatible with the "rpc" subpackage.

            Slightly modified the configure(1) script to work around
            non-standard tr(1) utilities.

            Added the typedef "prod_class_t" to the header-file "ldm.h"
            and changed all code and documentation to use it instead of
            the typedef "prod_class".  This was done to allow "ldm.h" to
            be processed by a C++ compiler.  The typedef "prod_class"
            still exists for backward compatibility -- though it is no
            longer used in the code.  Both C and C++ programmers should
            now use "prod_class_t" instead of "prod_class".

            Added "typedef" for "rpc_inline_t" to "rpc/types.h" to
            support output of rpcgen(1) on SunOS 5.11 systems.

            Ported to Fedora 8.  The log file of the system log daemon
            is "/var/run/rsyslogd.pid".

            Ported to Darwin 9: corrected misdefinition of OPEN_MAX as
            10240 by ensuring that the XOPEN_SOURCE and
            XOPEN_SOURCE_EXTENDED macros are defined on that platform.

        Feedtypes:
            Changed the primary name of the FT27 feedtype from "NNEXRAD"
            to "NEXRAD3" to accommodate such data regardless of source.
            "NNEXRAD" is an understood alias for that feedtype.

        ldmadmin(1):
            Added checking of LDM configuration-file syntax to "start"
            command.

            Modified the "pqactcheck" command.  By default, it now
            checks the syntax of every pqact(1) configuration-file that
            is associated with an EXEC entry for pqact(1) in the LDM
            configuration-file.  LDM configuration-file entries like
            "EXEC pqact -f CONDUIT" (i.e., with options but with no
            explicit configuration-file) are correctly handled.

            Changed the default size of the product-queue from 400
            megabytes to 500 megabytes.

            Changed setting of PATH environment variable in ldmadmin(1)
            script to use $bin_path and $PATH only.

            Added initialization of local variables to functions in the
            ldmadmin(1) script to accommodate Perl interpreters that no
            longer perform default initialization.

        rpc.ldmd(1) (LDM server): 
            Adapted parsing of timestamps in .*.info files to Darwin 9.1.1: 
            replaced use of strptime() with sscanf() (strptime() conversion
            specification must be separated by non-alphanumeric characters).

        pqact(1):
            Made each decoder its own process-group leader.  This should
            improve the performance of decoders like GEMPAK's
            dcgrib2(1).

            Added "-metadata" and "-nodata" options to the PIPE action
            of pqact(1).

            Changed behavior if a corrupt state-file is read.  Before,
            the process would exit.  Now, it continues with the most
            recent data-product (same as if the state-file didn't
            exist).

            Adapted pqsurf(1) to handle multiple BOYC reports in
            composite SHIP bulletins.

            Added code to the parser of feedtype expressions to prevent
            an infinite loop upon encountering two consecutive UNION (|)
            operators.

        pq(3):
            Removed retry attempt from write-locking fcntl() call in
            file "pq/pq.c" because only fatal signals could occur.

        Misc:
            Improved some log messages.

            Slightly improved rtstats(1) man-page.

6.6.5   (was 6.6.5.11)  2007-06-19
        Corrected the "pqact" utility's determination of the month
        associated with a data-product from the creation-time of the
        data-product and the day-of-the-month field in the
        product-identifier.  This modification is tested extensively by
        executing the command "make check" in the pqact/ subdirectory.

        Removed extraneous carriage returns from file
        pqact/wmo_header.c.

6.6.4   (was 6.6.4.2)   2007-05-17
        Modified the function surf_split() in the "pqsurf" program so
        that it uses a dynamically allocated buffer instead of a
        statically allocated one.  This means that "pqsurf" can now
        handle arbitrarily large composite bulletins.

        Fixed (for the last time!) the "pqact" utility's determination
        of the month associated with a data-product from the
        creation-time of the data-product and the day-of-the-month field
        in the product-identifier.

        Changed the behavior of a downstream LDM upon reception of a
        COMINGSOON message whose data-product has zero length.  Before,
        this would cause the downstream LDM to exit; now the
        data-product is simply rejected.  Both LDM-6 and LDM-5 code were
        modified.

        Improved the performance of the "scour" utility.

        Added a call to exitIfDone() after the call to pq_sequence() in
        file "up6.c".

6.6.3   (was 6.6.3.1)   2007-04-06
        Corrected command that removes old ".*.info" files from the LDM
        user's home-directory in the "ldmadmin" script.  The "-prune"
        option wasn't preventing the "find" process from descending into
        subdirectories.

        Modified algorithm that determines when an upstream LDM should
        flush the connection to its downstream LDM.  The modification of
        the algorithm introduced in version 6.6.1 appears to not flush
        the connection often enough --- resulting in bursts of data
        which can cause problems (e.g., the ORPG apparently has problems
        keeping up with bursts of NEXRAD Level II data).  The modified
        algorithm will flush the connection the first time the end of
        the queue is hit and every 30 seconds thereafter if no relevant
        data is added to the queue.

6.6.2   (was 6.6.2.2)   2007-03-22
        Corrected (again) the "pqact" utility's determination of the
        month associated with a data-product from the creation-time of
        the data-product and the day-of-the-month field in the
        product-identifier.  This is the primary reason for this
        release.

        Added "-prune" option to execution of "find" in "ldmadmin" when
        removing old ".*.info" files from the LDM user's home directory.

        Corrected the logic behind an upstream LDM sending something (at
        least a NULLPROC) every 30 seconds.

6.6.1   (was 6.6.1.0) 2007-03-13
        Demoted the "Exiting" message from "rpc.ldmd" from log-level
        NOTE to log-level INFO unless it's in response to a TERM signal
        (such as by "ldmadmin stop").

        Modified the "flushing" algorithm of an upstream LDM.  It used
        to flush the connection more often than every 30 seconds; now it
        flushes the connection no more often than every 30 seconds.

6.6.0   2007-03-07
        Added a persistent-state file for a downstream LDM.  This file
        saves the metadata of the last, successfully-received
        data-product so that the next downstream LDM process that
        requests the same data from the same source can start where the
        previous process stopped.  The files reside in the LDM user's
        home-directory and have the pattern ".*.info".  This increases
        the startup performance of a downstream LDM and will greatly
        benefit LDM's with many REQUEST entries.

        Changed format of distribution file from ".tar.Z" to ".tar.gz"
        because the "compress" utility is not available on my
        development workstation (due to IP restrictions) and the (now
        necessary) "gunzip" utility appears to be ubiquitous.

        Corrected the "pqact" utility's determination of the month
        associated with a data-product from the creation-time of
        the data-product and the day-of-the-month field in the
        product-identifier.

6.5.1   (was 6.5.1.5) 2007-02-23
        Improved LDM performance:
            Of downstream process during startup by changing product-queue
            access-mode from writing to readonly when searching backwards
            for matching product to avoid file write-locking contention.

            Of upstream process during termination by
                Adding potential termination point to each data-product
                during initial backward search of the product-queue.

                Closing downstream connection upon receipt of SIGTERM.

            Of downstream process during termination by closing downstream
            connection upon receipt of SIGTERM.

        Modified the "pqact" utility:
            Corrected behavior of the "-overwrite" option of the FILE
            and STDIOFILE actions.

            Ensured proper behavior of the "-log" option of the FILE
            and STDIOFILE actions regardless of operating-system.

6.5.0   (was 6.5.0.4)
        Modified top-level LDM server:
            1.  Replaced sending of SIGINT to process-group with sending
                of SIGTERM because that allows for a cleaner shutdown of
                pqact(1) processes.  This *shouldn't* affect decoders
                because they've always been required to terminate upon
                reception of either a SIGTERM or SIGINT.  You might
                check your decoders, however.

            2.  Added the ability for the configuration-file to have
                "include" statements.

        Made all LDM programs safer in the face of asynchronous
        termination signals (SIGTERM) by eliminating calls to unsafe
        functions by signal handlers and correcting responses to
        SIGTERM.  The LDM server and its child processes will now
        respond synchronously to a SIGTERM rather than in an unsafe,
        asynchronous manner.  This makes termination of a running LDM
        system take longer (have patience), but greatly reduces the risk
        of mysterious crashes.

        Modified pqact(1) utility:
            1.  Added saving of the insertion-time of the last
                successfully-processed data-product in a file
                whose pathname is that of the configuration-file
                with ".state" appended.  This allows the pqact(1)
                process in a subsequent LDM session that uses the same
                configuration-file to start processing where the previous
                one left-off (it logs this fact).

                This means that one pqact(1) process, at most, should
                execute any pqact(1) configuration-file.

            2.  Added "-log" option to FILE and STDIOFILE actions.
                This option will cause the pathname and product-
                identifier to be logged at the NOTICE level.

            3.  Added logging of warning message when the oldest product
                in the product-queue is processed.

            4.  Modified error-message logged with a child process
                terminates.  If the child process was stated via an EXEC
                entry in the LDM configuration-file, then the command-line
                is appended to the error-message to identify the entry.

            5.  Added printing of the command-line of decoders that do not
                read from standard input quickly enough to log message.
                This should ease the identification of slow decoders.

            6.  Increased the number of arguments in a PIPE command from
                15 to _POSIX_ARG_MAX/2 (2048).

            7.  Modified algorithm for determining the canonical time of
                a WMO data-product from the day-of-month component in the
                product-identifier.  It now assigns the data-product to
                the previous month if and only if the canonical time of
                the data-product is one or more days in the future (as
                determined by the creation-time of the data-product and
                the day-of-month component in the product-identifier).
                This should eliminate the problem of old, retransmitted
                WMO data-products being assigned to a future time.

        Added "-i" option to pqinsert(1).  This option causes the MD5
        signature to be computed from the product-identifier rather than
        from the product's data.  This will greatly increase the rate
        at which large data-products can be inserted but requires that
        the product-identifier be unique.

        Modified behavior of product-queue module:
            Modified pq_setCursorFromSignature(3) in file "pq/pq.c".
            It used to find the data-product with the given signature
            by searching forward in the time-map from just before the
            creation-time of the target data-product until it either
            found a time-map entry whose signature matched or until
            the data-products appeared to come from the same source but
            were created one minute later.  Now it searches forward in
            the time-map from the same starting point until it finds
            an entry whose offset to the data region equals that of
            the signature-map entry.  If no entry is found, then a
            second search is made starting from the beginning of the
            product-queue up to the starting point of the first search.
            This second search is much more time-consuming but will find
            data-products whose creation-time is, otherwise, too far in
            the future (relative to the local system clock).  This should
            fix Art Person's problem of not finding the "signature"
            data-product during a reconnection by a downstream LDM
            (JIG-686458).

            Added warning-level log message to pq_insert(3) about
            data-products that are created sufficiently far in the
            future (see the previous paragraph) to cause problems during
            reconnection.  Only one such message will be logged per hour
            per ingest host.  In this day and age, any computer that's
            connected to the Internet can easily have an accurate system
            clock -- and that's been an explicit requirement for proper
            operation of the LDM from the beginning.

        Fixed bug in upstream LDM that could cause it to skip over
        data-products.  The bug was due to the way an upstream LDM
        processed a request with an encoded signature.  The LDM would
        adjust the "from" time of the request to the insertion time of
        the associated product, if found.  Under sufficient latency
        conditions, the insertion time would be after the creation-
        time of the next products that should be sent and the products
        would be filtered-out.  The correction involves removing the
        adjustment but still setting the product-queue cursor based on
        the signature product.

        Improved downstream LDM.  Removed from a reconnection attempt
        the setting of the metadata of the last successfully-received
        data-product from a search of the product-queue if the number of
        downstream LDM was two or more.  This was mistakenly introduced
        in version 6.4.5.

        Modified "log_log(3)" and "err_log(3)" so that they print error-
        messages using a "%s" format instead of passing them directly to
        ulog(3) because the messages might contain formatting characters
        (e.g., "%" from, for example, a product-identifier).  This will
        prevent upstream and downsteam LDM-s from crashing when printing
        a product-identifier that contains a "%".  (Thanks Harry.)

6.4.6   (was 6.4.6.5)   2006-10-19
        Improved error-message from readtcp() in the svc_tcp module
        when a select() on the socket times-out.

        Modified ldmadmin(1) script to allow a zero argument to the
        offset option (-o).

        Corrected behavior of the "-overwrite" option in pqact(1)'s FILE
        and STDIOFILE actions.  Before, data-products would always be
        appended unless the file was closed -- either explicitly via the
        "close" option or implicitly (and unpredictably) if pqact(1) ran
        out of file descriptors.  Now, both those actions always start
        writing from the beginning of the file.

        Corrected "-P port" option for ldmsend(1).  The option affected
        an LDM 6 connection but not an LDM 5 connection.  Now it does.

        Renamed the type "error_t" to "ErrorObj" to avoid a legitimate 
        name-conflict with system headers.

        Modified pq_del_oldest(3)) function so that it releases the data
        region if the signature isn't found in the signature-list.  This
        should have little, practical effect because the result of not
        finding the signature entry is, ultimately, to terminate the
        downstream LDM (once the queue is corrupt, it's a little late to
        ensure consistency -- still, the code is better).

        Modified vulog(3) function.  Because it calls functions that are
        unsafe in the presence of asynchronous signals (e.g., SIGCHLD),
        it now blocks most signals during its execution.  This should 
        prevent a SIGSEGV from occuring when inside the strftime(3) 
        function when a SIGCHLD is received.

        Changed error-message "Terminating due to LDM failure..." to 
        "Disconnecting due to LDM failure..." to improve accuracy.

        Moved initialization of autoshift module to accommodate incoming 
        HIYA connections that start sending data-products regardless of
        a RECLASS reply.  This solves a problem receiving data from WSI.

        Corrected ulog/log module (it only printed the first message).

        Cosmetic changes to "ulog/log" module.

        Committed previous-version changes to RPC library so that 
        they will actually appear in a distribution.

        pqexpire:
            Enabled "make tags".
            Added internal commentary to code.

        In an attempt to solve Robert Mullenax's problem of the upstream
        connection being closed for no apparent reason (see AET-991057)
        the "ulog/log" module was created to accumulate log-messages
        and some logging was added to the "rpc/svc_tcp" module.  This
        modification might have the added benefit of preventing a
        downstream LDM from receiving a SIGSEGV under very rare
        circumstances when the RPC layer closes the connection due to a
        fault (basically, svc_destroy(SVCXPRT*) was being called twice
        on the same transport).

6.4.5   (was 6.4.5.5)   2006-03-03
        Corrected behavior of downstream LDM when upstream host no
        longer is has the IP address that was used to establish the
        connection.  The downstream LDM now first verifies that
        the IP address of the upstream host has not changed when
        verifying that the upstream LDM is still alive after not
        receiving anything for 60 seconds.  This detects problems
        arising from the upstream host being assigned a different IP
        address by its Internet Service Provider upon reconnection
        to the Internet by the upstream host (e.g., the UCAR HAIPER
        airplane).  Added misc/inetutil/hostHasIpAddress() and modified
        server/requester6/is_upstream_alive() to use it.

        Rationalized forward and reverse hostname resolution:
        modified most code to use one of misc/inetutil/hostbyaddr(),
        misc/inetutil/addrbyhost(), or misc/inetutil/hostHasIpAddress.
        Added logging of excessive time-usage to those functions to
        notify user of, for example, an LDM server that's hanging trying
        to resolve an IP address into a hostname.  This is particularly
        important for LDM-s to which many rstats(1) connect.

        Modified the downstream LDM code so that it closes any
        connection to the network host database after an unsuccessful
        connection attempt.  This allows DNS updates to have an effect
        on a running downstream LDM.

        Modified when a downstream LDM process searches backwards
        through the product-queue for the most recent data-product that
        matches the product-class.  It now does it only once if it's the
        only downstream LDM process that will request the data.  This
        greatly reduces the load that a downstream LDM puts on the CPU
        when it can't connect to the upstream LDM.

        Corrected checking of saved product-information by a downstream
        LDM if the number of hosts sending the same products is two or
        more.  This should decrease the rate of transfer-mode switching.

        Changed the identifier used in ulog(3) messages: the remote
        hostname portion is no longer truncated after the first
        component of the fully-qualified hostname.  The maximum length
        of the identifier is still 32 characters.  This should make
        interpretation of log messages easier.

        Stopped ldmping(1) and pqcheck(1) from writing into log file
        when executing "ldmadmin start" and "ldmadmin stop".

        Modified rtstats(1) so that it can report more than 2^32 bytes
        of received data.

        Fixed "ldmadmin pqactHUP" for Mac OS X by adding "Darwin" to
        known operating-systems for executing ps(1) in order to find the
        pqact(1) PIDs (thanks to Dave Dempsey).

        Modified mkdirs_open() so that it doesn't error-return if the
        directory to be created exists (it might just have been created
        by another pqact(1) process).  This eliminates a race condition
        between two pqact(1) processes trying to write to the same
        output directory.

        Removed an assert(n > 0) call in pq/pq.c that was responsible
        for an upstream LDM crashing in the unlikely event that the
        first four bytes of a data-product's signature were all zero
        (2^32 to 1, against).

        Demoted "feed or notify failure; ..." message from level ERROR
        to level NOTICE because it's now expected for an autoshifting
        downstream LDM.

        Corrected test of strdup() result in parser for LDM 
        configuration-file.

        Modified pqinsert(1) so that it exits with a non-zero status if
        something went wrong inserting a file into the product-queue.

        Corrected ldmping(1).  It now correctly interprests hostnames
        that start with a digit (e.g., "600644362.tssmob.net") rather
        than assuming the hostname is an IP address in "dotted-quad"
        format.

6.4.4   (was 6.4.4.0)   2005-12-01

        Eliminated ERROR-level logging by the pqact(1) utility of
        the extraneous messages that start with "pbuf_flush (fd)
        write: Broken pipe" by returning removal of the relevant
        file-list entry to the reap() function, when appropriate.  This
        bug was introduced by the modification to pqact(1)'s logging in
        version 6.4.3.

6.4.3   (was 6.4.3.2)   2005-11-08
        Added support for 4 GB product-queues on 32-bit systems running
        Free BSD 4.

        Modfied product-queue module: it now memory-maps the entire 
        product-queue if possible and allowed based on a runtime 
        determination (rather than a configuration-time one).

        Modified pqact(1): it will now print the command-string of a
        PIPE child process (if available) when the child process is
        stopped or terminated by a signal or when the child terminates
        normally but with an error status.  The command-string won't
        be available if the child process terminates due to pqact(1)'s
        closing of the pipe.

        Modified logging module, ulog(3):
            Replaced use of vsprintf(3) with vsnprintf(3) to eliminate
            risk of buffer overflow.

            Rewrote vulog():
                Eliminated fork()ing in writing to console when regular
                logging fails because of reports of hanging, downstream
                LDM.  See <http://www.unidata.ucar.edu/support/help/MailArchives/ldm/msg04324.html>.

                Restructured code, removed superfluous code, and
                combined common code.

            Removed some lint(1).

        Corrected use of PATH_MAX in pqact/filel.c, which incorrectly
        assumed that the terminating NUL wasn't counted.

        Removed superfluous set_abbr_ident() from "up6" module.

        Changed URL "my.unidata.ucar.edu/content" to 
        "www.unidata.ucar.edu" wherever found.

6.4.2   (was 6.4.2.5)
    Bug Fixes:

        Downstream LDM:

            Fixed bug in "DownHelp" module that caused a downstream LDM
            5 resulting from a HIYA message to terminate normally with
            an error status when it received the first data-product.

        pqact(1):

            Fixed bug described in

                http://www.unidata.ucar.edu/support/help/MailArchives/ldm/msg04238.html.

            by improving how pqact(1) manages its file descriptors.
            File descriptors are now reserved for stdin, stdout,
            stderr, the configuration-file, the product-queue, and
            (possibly) logging.  Stdin and stdout are redirected to
            /dev/null at startup to prevent problems with miscoded child
            programs.  Stderr is redirected to /dev/null if logging
            isn't to stderr.  Most other file descriptors are set to
            close-on-exec.

        scour(1):

            Fixed a bug in scour(1) that caused it to output extraneous
            error-messages about not being able to read (irrelevant)
            directories.  The fix involved simplifying the use of the
            find(1) command.

        feedme(1):

            Fixed program feedme(1) -- which didn't work -- by adding
            use of module xdr_data.

    Non-Bug-Fix Improvements:

        General:

            Modified module xdr_data.  Changed implementation and API to
            allow programs like feedme(1) to allocate less memory.

            Removed some lint(1).

        rpc.ldmd(1):

            Added calls to prctl() on Linux systems to allow the LDM
            program (rpc.ldmd) to dump a core-file.

            Modified LDM server to use new "xdr_data" API.

        Downstream LDM:

            Cleaned-up code for determining the acceptable class of
            products from the product-class of a HIYA message and the
            ACCEPT entries in the LDM configuration-file.

            Modified "down6" module of downstream LDM system.  Renamed
            down6_new() to down6_init() and made it callable multiple
            times.  Changed handling of uninitialized module from
            assert()ion failure to error-code return.  Modified clients
            of down6 module accordingly.

        pqact(1):

            Improved efficiency of writing to a pipe by increasing the
            size of the pipe-buffer from _POSIX_PIPE_BUF (512) bytes to
            PIPE_BUF bytes on systems that define PIPE_BUF.

            Modified message logged when it takes longer than one second
            to flush a pipe: improved wording and reduced logging-level
            from ERROR to WARNING.

6.4.1
        Installation:

            Bracketed _XOPEN_SOURCE and _XOPEN_SOURCE_EXTENDED
            in "config/ldmconfig.h" with "#ifndef" to accommodate
            compilation environments that define those macros (contrary
            to the standard).

        Downsteam LDM 6:

            Fixed bug in handling of ACCEPT connections that caused
            the downstream LDM to crash by adding initialization of
            autoshift module in response to HIYA message.

6.4.0
        rpc.ldmd:

            Server:

                Added ability to use different port than well-known LDM
                port, 388:

                    Default LDM port can be set when package is built.

                    LDM port on which server will listen can be set when
                    server is executed.

                    Upstream port to which downstream LDM connects can
                    be set in associated REQUEST entry.

            Downstream LDM 6:

                Behavior:

                    Reject every data-product that is older than
                    "max_latency" seconds -- regardless of arrival mode
                    (HEREIS or COMINGSOON/BLKDATA).

                    Added ability to encode MD5 signature of last,
                    successfully-received data-product in FEEDME
                    product-class specification when connecting to
                    upstream LDM-6.  Should prevent skipping of
                    data-products that arrive at upstream LDM-6 out of
                    temporal order.

                    Added the ability of downstream LDM to automatically
                    adjust transfer-mode of feed (primary vs. secondary)
                    based on success of inserting data-products into
                    product-queue.

                    Replaced adjustment of product-class
                    specification in FEEDME request based on last
                    successfully-received data-product with similar
                    adjustment based on most recent data-product in
                    queue that matches specification.  Allows input from
                    other downstream LDM-s.

                    Changed way data-products are accumulated when
                    received via COMINSOON and BLKDATA messages.  They
                    are now fully received before any attempt is made to
                    insert them into product-queue.

                Performance:

                    Reduced CPU utilization by about 75 percent by
                    creating new RPC library function, svc_getreqsock(3)
                    and using it.

                    Increased size of queue for connection requests
                    in LDM server from 2 to 32.  Should ameliorate
                    connection problems that occur due to large number
                    of connection attempts in short time.

            Upstream LDM 6:

                Added "upstream" filtering.  An upstream LDM can now
                filter data-products based the product-identifier and
                regular-expression in the LDM configuration-file.

        pqact(1):

            Added ability to "back reference" more than nine
            subexpressions in string-replacement section of pqact(1)
            actions.  Now, for example, string "\(12)" in that section
            references twelfth subexpression of regular-expression.

        scour(1):

            Added blank line to top of scour(1) script to allow user's
            with non-conforming shell to execute script directly.

        rtstats(1):

            Default feedtype returned to ANY from ANY-EXP.

            Pseudo-random amount of time added to reporting interval to
            prevent convergence of TCP connections.

        Logging:

            Removed "<file>@<line>" field from "error" module log
            messages unless logging-level is DEBUG.

            Log messages are now prefixed with priority-level
            (e.g., NOTE, INFO).

            Slightly modified some log messages.

        Portability:

            Replaced use of non-standard C macro EPFNOSUPPORT in rpc(3)
            subpackage with EAFNOSUPPORT and EPROTONOSUPPORT.  Necessary
            to support building under Tiger version of MAC OS X.

            Replaced use of non-standard "h_addr" member of "hostent"
            structure with use of "h_addr_list[0]" to increase
            portability.

            Added "-lxnet" to LIBS on HP-UX 11 systems when in 64-bit
            mode.

6.3.1.0
        Removed the ldmprods(1) utility from the package because it 
        uses the *.stats files produced by the (now nonexistant)
        pqbinstats(1) utility.  User's should use the rtstats(1) utility
        for reporting statistics.

        *Really* removed pqbinstats(1) directory from the distribution.

        Fixed bug in pqact(1) that prevented decoders from writing to the
        logfile specified by the "-l" option.

6.3.0           2005-03-18
        Added "-I ip_addr" option to LDM server.  This allows the
        user to specify what network interface the server should use
        and enables

            1.  Construction of director/server clusters.

            2.  Running two LDM servers on the same host simultaneously.

        Added $ip_addr variable to ldmadmin(1) configuration-file,
        ldmadmin-pl.conf, and modified ldmadmin(1) accordingly.

        Added "--enable-logging=localn" option to configure(1) script to
        support the use of a different logging facility and permit the
        running of two LDM-s simultaneously.

        Removed sending of final statistics from rtstats(1)'s cleanup
        handler to avoid hanging the program if the remote host is
        unavailable.

        Added printing of IP address to "ldmadmin config" command.

        Removed "pqbinstats" directory from distribution and eliminated
        "ldmadmin dostats" command.

        Added "-P port" option to pqing(1) manual-page.

        Added "ulogger" to GARBAGE macro in ulog/Makefile so that the
        program will be removed by a "make clean" or "make distclean".

        Corrected misspelling in ldmadmin-pl.conf.

        The standard error stream of child processes executed by
        pqact(1) PIPE actions is directed to "/dev/null" in the child
        processes if it was closed in the pqact(1) process.

6.2.1           2005-02-18
        Added "1;" to the end of the ldmadmin(1) configuration-file,
        ldmadmin-pl.conf, so that setting $log_rotate to zero wouldn't
        cause the "require" statement in ldmadmin(1) to abort.

        Added RELEASE_NOTES to the source-distribution.

        Modified LDM configuration-file parser to prevent invalid
        entries like

            REQUEST IDS/DDPLUS .* host.domain

        from being misinterpreted as requesting data-products of
        feedtype "IDS" that match the regular-expression "/DDPLUS".
        Such entries are now detected as being invalid.

        Fixed the (deprecated) command "ldmadmin dostats" by correcting
        the invocation of the "mailpqstats" utility.

        Fixed extraneous memory-freeing in rtstats(1) that caused
        SIGABRT on Linux 2.6.10 system if the receiving LDM didn't want
        the data-products.

6.2.0           2005-02-01
        Added "rpc" subpackage -- replacing use of the native RPC
        library -- to work-around a bug in the AIX 5.1 ONC RPC 4.0
        implementation, which fails when receiving large (~10 MB)
        RPC messages (i.e., most NIMAGE data wasn't being received).

        Modified product-queue (pq) module:

            Corrected bug in pq(3) module when inserting a data-product
            that has the same insertion-time as an already existing
            data-product.  The insertion-time in now incremented by
            one microsecond to ensure unique keys in the time-map
            rather than using the byte-offset of the data-product.
            Hopefully, this will eliminate the rare occurrence in which
            a data-product is missed by a product-queue reader because
            it has the same insertion-time as the previous data-product
            in the product-queue but has a smaller byte-offset.

            Corrected fClr() and fMask() macros in file "pq/fbits.h"
            so that they correctly handle the case where the "flag"
            variable is smaller than the variable in question.  This
            removes a problem creating product-queues with data-sections
            larger than (2^32)-1 bytes on systems where sizeof(size_t)
            == 8 and sizeof(unsigned) == 4.

        Made all programs that use regular-expressions convert all
        externally-specified pathological regular-expressions into
        non-pathological ones.

        Modified top-level LDM server:

            Removed latent bug that caused file-descriptor table to
            fill-up -- preventing additional connections -- if fork(2)s
            failed for a while.

            Corrected bug in LDM configuration-file parser.  The LDM
            will now log an error-message and terminate if it encounters
            an invalid feedtype expression.

        Modified downstream (i.e., receiving) LDM:

            Changed the way the "last" data-product creation-time is
            saved.  Before, the creation-time of the most recently
            received data-product was used.  Now, that time is used
            only if it is more recent than the saved time.  This
            should reduce problems caused by the sequential arrival of
            data-products with creation-times that are non-monotonic.

            Modified down6_get_last_arrival() to accommodate Gilda's
            c89(1).

            Improved error-messages when the LDM can't connect to an
            upstream LDM.

        Modified programs to reduce artificially-induced latencies:

            Modified the toClients() function in the "pqing" module so
            that the "arrival" argument is ignored and the creation-time
            of the data-product is set within the function itself.
            This should reduce the (apparent) latency on systems doing
            data-product ingestion.

            Modified the pqinsert(1) utility so that the data-product
            creation- time is set just prior to inserting the
            data-product into the product-queue.  This should reduce any
            (apparent) latency.

        Modified pqact(1).  A configuration-file with no entries is now
        logged as such rather than as having a syntax error.

        Modified rtstats(1):

            A warning-level error-message is logged if it can't connect
            to the remote LDM.

            The latency field in the data-product it creates is now
            formatted "%g" from a floating-point value.

        Modified pqcheck(1).  Added support for logging debug-level
        messages (-x option).

        Modified scour(1) utility to work-around bug in OSF1's find(1)
        utility.

        Ensured that all utilities log messages of level LOG_WARNING.

        Modified ldmadmin(1) script:

            Moved the configuration section of ldmadmin(1) into a
            separate file (etc/ldmadmin-pl.conf).  A consequence of this
            is that if the environment variable LDMHOME is not set, then
            $HOME is used.

            Removed setting of UDUNITS_PATH because it doesn't have
            anything to do with running the LDM.  User's who need this
            environment variable set in order for the gribtonc(1)
            decoder to work properly should set it in the profile-file
            of the LDM user's user-shell.

            Corrected default value of $surf_size variable.  Previous
            value of "2M" caused command "ldmadmin mksurfqueue" to hang.

            Fixed bug in ldmadmin(1) so that "ldmadmin watch -f
            'IDS|DDPLUS'" now works.

            Made "ldmadmin clean" abort if the LDM system is running.

            Corrected use of "$?".

            Corrected some error-messages.

        Added scouring of ~ldm/logs/*.stats files to example scour(1)
        configuration-file.

        Ported package to

                Darwin (alias Mac OS X)
                SunOS 5.10 (alias Solaris 10)

            The package has poor performance under SunOS 5.10.  Sun is 
            investigating.

        Modified configure(1) script:

            Made the script try to create an LDM system that supports
            product-queue sizes up to (2^32)-1 bytes.

            Added "--disable-max-size" option so that the user can
            ensure that the resulting LDM only supports smaller
            product-queue sizes (in order to use a previously-existing
            product-queue, for example).

            Corrected test for non-socket /dev/log.

            Now augments, rather than replaces, a user-specified
            CPPFLAGS.

        Modified makefiles:

            Modified top-level makefile to get libldm.a(ldm_version.o)
            updated when VERSION is modified.

            "make clean" no longer removes *.log files; "make distclean"
            does.

        Removed files INSTALL and INSTALL.bin from distribution
        after moving their information to file README.

        Renamed this file (HISTORY) to CHANGE_LOG.

6.1.0           2004-08-25
        Modified the product-queue module (pq):

            Made available 4 data-product slots that were, otherwise,
            unvailable.  This means that the minimum number of empty
            slots can now go to 0.

            Added a writer-counter variable to the product-queue file.
            Opening the product-queue for writing increments the on-disk
            value and closing the product-queue decrements it.  This
            allows for a fast determination of whether the product-queue
            was properly closed and, consequently, self-consistent.  As
            a consequence, the script for starting the LDM system at
            boot-time has changed significantly (see the pqcheck(1)
            utility).  Furthermore, ALL INGESTERS MUST BE RELINKED
            AGAINST THE NEW LDM LIBRARY FOR THE NEW CONSISTENCY-TEST TO
            BE RELIABLE.

            Creation of a product-queue file now fails if the requested
            size of the file (which is contained in an "off_t") is too
            large to be represented by variables of type "size_t".

        Modified the LDM server (rpc.ldmd):

            Modified setting of "from" time in downstream LDM for the
            data-product selection criteria.  Now, it will not ever
            request any products that are older than the "time offset"
            argument of the "-o" option if it was specified or the
            "maximum latency" argument of the the "-m" option (default 1
            hour) otherwise.  Before this change, a downstream LDM could
            request data-products that were much older than this if the
            upstream LDM was unavailable for a long time.

            Added a 1 second pause before an upstream LDM first starts
            sending data-products or notifications to a downstream
            LDM.  This prevents, for example, a HEREIS packet arriving
            contiguously with a FEEDME reply and works around the poor
            RPC implementations of some operating systems.

        Modified the pqact(1) utility:

            Added a work-around for the non-conformance of OSF/1
            regarding the SA_RESTART option of sigaction().  On such
            an operating-system, a write to a pipe by pqact(1) could
            be terminated by a signal (e.g., SIGCHLD) causing the
            data-product to be incompletely processed.

            Increased the maximum number of file descriptors that can
            be simultaneously open from "32" to something based on the
            output of "getconf OPEN_MAX".

            Corrected examples in configuration-file (pqact.conf).

        Modified the pqcreate(1) utility: it now interprets the
        specification of the size of the product-queue by pqcreate(1)
        differently. Previously, a "K", "M", or "G" suffix would mean
        "kibi", "mibi", or "gibi" (powers of two nearest 1e3, 1e6, or
        1e9); now it means "kilo", "mega", or "giga".  This now makes
        "4000M" equal to "4G", whereas before they were different.

        Modified the ldmadmin(1) script:

            Added the command "restart".

            Added the options "-m maxLatency" and "-o offset" to the
            "start" command (the "restart" command also has these
            options).

            Added the variable $pq_slots.  This variable sets the number
            of data-product slots in the LDM product-queue.

            Modified the interpretation of the specification of the size
            of the product-queue to be consistent with the pqcreate(1)
            modification, above.

            Greatly increased the performance of the "ldmadmin
            queuecheck" command by switching from use of pqcat(1) to use
            of pqcheck(1).

            Removed the "ps" command because there are just too many
            ps(1) implementations out there that differ from the UNIX
            standard and from each other (and the same computer can have
            incompatible versions).

            The "watch" and "queuecheck" commands now first check that
            the LDM system is running.

            Added printing of $numlogs and $log_rotate to the "ldmadmin
            config" command.

        Modified the scour(1) utility:

            Greatly improved performance -- mostly by using xargs(1).

            Removed package-specificity from examples in
            configuration-file (scour.conf).

        Modified the ulog(3) module: it no longer appends an ASCII NUL
        to messages when logging to a file.

        Changed the feedtype-string that is printed for NEXRAD Level
        II data-products from CRAFT to NEXRAD2.  The strings CRAFT,
        NEXRD2, and NEXRAD2 can all be used to specify this feedtype in
        configuration-files, however.

        Increased the maximum number of statistical-reporting bins
        in the "binstats" module (which is used by rtstats(1) and
        pqbinstats(1)) from 96 to 4000 to eliminate underreporting
        problem now that more than 96 CRAFT radars exist.

        Corrected manual pages.  Removed all references to the
        LDM 5 "Site Manager's Guide".  Replaced references
        to "http://www.unidata.ucar.edu" with references to
        "http://www.unidata.ucar.edu/software/ldm/"

6.0.15          2004-03-31
        Added code to work-around TCP bug introduced by patch APAR
        IY38541 for the AIX operating-system.  This patch is included
        in maintenance-level 11 of AIX 4.3 and maintenance-level 5 of
        AIX 5.1.  The bug makes TCP connection non-blocking, causing
        upstream LDM to exit due to "resource temporarily unavailable".
        With this work-around, LDM6-s running on the above AIX systems
        will be able to send data-products to requesting downstream
        LDM6-s.  They will not, however, be able to satisfy requests
        by downstream LDM5-s.  Also, the same O/S upgrades introduced
        an, apparently, related bug in the TCP layer that causes the
        connection from a downstream LDM running on the upgraded O/S to
        an upstream LDM to episodically dissapear.  The upstream LDM
        reports a "broken pipe" and the downstream LDM reports that the
        connection to the upstream LDM "closed".  This problem will be
        reported to IBM.

        The above bug also causes a connection from a downstream LDM
        running on the upgraded AIX system to episodically close for no
        apparent reason.  Consequently, the reconnection strategy of a
        downstream LDM-6 has been modified to be more aggressive (i.e.,
        to try to reconnect earlier) but with an exponential backoff to
        the default maximum of 30 seconds.

6.0.14          2003-07-21

6.0.14.7
        Made test of pqact(1) configuration-file upon LDM startup 
        conditional upon its existance.

6.0.14.6
        Fixed bug in downstream LDM 6 introduced in version 6.0.4: under
        some circumstances, a failed FEEDME or NOTIFY request wouldn't
        cause the connection to be closed and, consequently, the socket
        and client-handle resources to be released -- leading to a
        blocked, upstream LDM process with a read-lock on a product.

        Fixed latent bug in module "up6".  Too few arguments passed to 
        udebug(3) when a product-queue lock is encountered.

6.0.14.5
        Fixed error-reporting bug.  Receiving LDM-s will no longer
        attempt to unregister from the portmapper -- eliminating the
        possibility of disconcerting (but harmless) "pmap_unset()"
        failure messages.

        Modified the LDM so that a SIGUSR1 causes the pseudo-random 
        number generator in the product-queue module to be reset.

        Improved robustness of the rtstats(1) utility in the face of bad
        clock times (e.g., CRAFT data).  This should prevent rtstats(1)
        from opening multiple connections in the same minute.  THIS IS A
        BIG DEAL.

6.0.14.4
        Ported package to HP-UX B.11.11 U.

        Changed the effect of a SIGTERM to the top-level LDM process: it
        now sends a SIGINT to all child processes in order to exit in a
        more timely manner.

        Eliminated use of the word "class" as a variable name to
        accommodate C++.

        Modified LDM 6 product-sending code so that it checks the
        connection if it hasn't sent anything for 30 seconds.  This
        should help prevent the buildup of upstream processes.

        Added a check of the syntactic validity of the pqact(1)
        configuration-file to the "ldmadmin start" command to help the
        user who changes the configuration-file without checking it.

6.0.14.3
        Partially ported package to HP-UX B.11.11 U.

        Added observance of "done" flag to module ldm_clnt -- resulting
        in more responsive termination of an LDM system that is
        attempting to connect to an upstream LDM.  Modified module acl
        accordingly.

6.0.14.2
        Made the IS_ALIVE check on the upstream LDM more tolerant of 
        connection failures.  This should reduce the number of
        unnecessary reconnections.

        Improved error-logging of LDM 6 connection attempts.  If an
        attempt fails, a error-message will be logged at the ERROR
        level.  The reason or reasons behind the failures of the port
        388 and portmapper attempts are logged at the INFO level.

6.0.14.1
        Fixed memory-leak in receiving LDM process.  When receiving from
        a sending LDM 6, the memory-usage of the receiving process
        would sometimes jump by about 250 kilobytes if the connection
        was broken and then re-established.

6.0.13
        Fixed a small memory-leak bug in the utility rtstats(1).  If the
        destination LDM was version 5, then it would leak about 37 bytes
        per transmission.

        Modified the file-existance tests in ldmadmin script so that
        they will work on systems (e.g., Linux) that would, otherwise,
        require a perl utility with compiled-in support for large-files.

6.0.12
        Modified strategy for determining which program version is
        used when connecting to an upstream LDM (version 5 or 6): a
        downstream LDM will now connect using version 5 if and only
        if a previous version 6 connection attempt receives a program
        version mismatch indication (RPC_PROGVERSMISMATCH).  This should
        eliminate the possibility of a downstream LDM-6 connecting to
        an upstream LDM-6 using LDM-5 protocols during the "window of
        vulnerability" that exists when the upstream LDM system is
        started.

        Changed downstream LDM code so that it doesn't sleep before
        reconnecting to the upstream LDM when the connection is closed
        due to a timeout.  This will reduce the magnitude of product
        latencies due to connection timeouts at the cost of more log
        messages.

        Synchronous checks have been added in several places to make the
        LDM more responsive to a termination request (such as from an
        "ldmadmin stop").

        To work around a bug in Unisys ingest systems, the program
        pqing(1) has been modified to allow an extraneous newline
        between the end-of-product and beginning-of-product delimiters.

6.0.11
        Requesting LDM process will no longer terminate if the
        connection to the upstream host is so bad that it can't connect
        in any fashion or if an LDM isn't running on that host.
        Instead, it will continue to retry.

6.0.10
        Corrected bug in make_request() in module requester that caused
        "wanted" and "allowed" product-class specifications in diagnostic 
        RECLASS message to be the same.

        Corrected bug in feed_or_notify() in module ldm6_server that caused
        "wanted" and "allowed" product-class specifications in diagnostic
        "Restricting request" message to be the same.

        Demoted logging-level of rtstats(1) "couldn't connect" message from
        ERR_FAILURE, to ERR_WARNING to lessen user anxiety.

6.0.9
        Corrected bug in make_request() that caused assertion failure in
        xdr_timestampt() because the timestamp was part of the RECLASS
        reply and the product-class of the reply had been XDR freed
        (setting its timstamps to TV_NONE).

6.0.8
        Replaced premature return from ldm_clnt_create_vers() use of
        NULLPROC for RPC error-code not being a program version 
        mismatch to being a time-out.

6.0.7
        Fixed SIGSEGV bug in ldm_clnttcp_create_vers() and improved 
        error messages.

6.0.6
        Reimplemented ldm_clnt() to solve rtstats(1) connection problem.

6.0.5
        Fixed slight memory-leak bug in rtstats(1) and ldmsend(1).

6.0.4
        Corrected use of hereis_6() and comingsoon_6() by programs
        rtstats(1) and ldmsend(1).  They should now be able to send to
        an LDM 6.

6.0.3
        Improved diagnostic messages in which_version().

        Made "ldmadmin pqactcheck" return a failure exit-status if the
        configuration file contains a syntax error.

        Generalized receiving LDM: now accepts multiple BLKDATA messages
        for a product.

        A downstream LDM no longer adjusts the time-interval of acceptible
        data products when replying to a HIYA.  Duplicate product detection
        is still in effect.  This prevents rejection of data products sent
        using ldmsend(1) by a host with an inaccurate clock.  It also
        places the burden of knowing what to send on the upstream HIYA-
        initiating LDM.

        Fixed bug that prevented the maximum hereis size field of ACCEPT
        entries in the LDM configuration-file from having an effect.

        Ported the ldmsend(1) and rtstats(1) utilities to LDM-6
        protocols: they can now send to a version 6 LDM.

        Added HTML documentation as a separate distribution.

6.0.2
        Restored use of "done" flag and removed atexit() registration of
        down6_destroy().

        Removed child-process-termination loop from ldmd.c in attempt to
        keep product-queue consistent (pqcat -s).

        Eliminated excessive delay caused by portmapper-access functions on
        a FreeBSD system than isn't running a portmapper.

        Fixed bug due to copying HEREIS product identifier to garbage 
        pointer in down6 module.

6.0.1
        Ensured release of COMINGSOON_6-reserved space in product-queue
        upon normal termination by modifying down6 module: 1) made
        down6_destroy() idempotent; and 2) registered down6_destroy()
        with atexit().  Hopefully, this will fix the "pqcat -s" failures.

6.0
        Changed default CFLAGS from "-g" to "-O".

        Reworked build procedure.  No more Makefile.in-s.

        Added commentary about pathological regular expressions to template
        "ldmd.conf" file.

        Added sync(1) invocation to "ldmadmin stop".

        Regularized compiler-command word-order.

        Made module child_process_set a singleton and made free(3)ing of
        pid_t element more robust (it might have been causing a SIGSEGV
        under Linux).

        Have duplicate products update the most-recent-product time 
        of a connection in both LDM-6 and LDM-5 receivers.

6.0.0.18
        Fixed incorporation of regex/ subdirectory into build
        procedure.

6.0.0.17
        Added regex(1) utility.

        Rearranged blocked-signals reversion steps in pq::ctl_get() to
        maintain invariants.

        Changed RPC timeout from default 25 s to 60 s.

6.0.0.16
        Added warning message if flushing NULLPROC-6 fails in "up6"
        module.

6.0.0.15
        Added "tags" target to pq/Makefile.in.

        Replaced 7 d timeout of non-batched (i.e., blocking) LDM-6
        RPC messages with default, 25 s timeout to avoid situation in
        which a sending LDM is trying to read the reply of a flushing
        NULLPROC call and the receiving LDM is in select() waiting for
        an incoming RPC message.  This "netlock" situation was seen on
        2003-02-7 between two sending LDMs on Jackie and two receiving
        LDMs on Thelma for the IDS|DDPLUS and NNEXRAD feeds.  (Bad RPC!
        No doughnut!)

6.0.0.14
        Ported to OSF/1.

        Added an additional criterium to the function
        is_upstream_alive() for assuming that the sending LDM is still
        alive: if the client-side handle can't be created due to a
        time-out of the connection attempt (RPC error == RPC_SYSTEMERROR
        && system error == ETIMEDOUT).

6.0.0.13
        Simplified xdr_data module and its use based on assumption of
        valid client-usage.  It was this or find every error-condition
        where xd_free() or xd_unset_buf() wouldn't be invoked.

        Corrected use of xdr_data module.

6.0.0.12
        Corrected use of "xdr_data" module.

        Problem.

6.0.0.11
        Increased use of "xdr_data" module:
            Modified modules "down6" and "svc5" to use "xdr_data" module
            for COMINGSOON/BLKDATA messages.

            Modified file "ldm.x": replaced generation of xdr_dbuf() by
            rpcgen(1) with explicit definition that uses the "xdr_data"
            module.

        Problem.

6.0.0.10
        Added module "xdr_data" and modified xdr_product() to use it.

6.0.0.9
        Made SIGTERM handling the same as SIGINT.

6.0.0.8
        Made updating of timestamp of most recently received HEREIS
        product by LDM-5 subsystem not depend on whether logging level
        is verbose.

6.0.0.7
        Tried to reduce backward searches through product queue when 
        connecting to upstream LDM:

            Added tracking of last-received product to both LDM-5 and
            LDM-6 receiving subsystems and the use of this information
            when requesting data from an upstream LDM.

            Moved backward search through product queue, looking for
            most recent matching product -- from inside connection-loop
            of acl::prog_requester() to before connection-loop.

        Added dummy feedTime module and invocations.

        Changed connection strategy to favor port LDM_PORT over the
        portmapper.

        Corrected ldmsend(1) and LDM-6 HIYA behavior.

6.0.0.6
        Removed indictment of upstream LDM from LDM-6 ECONNRESET error-message.

        Added debug-printing of time from product-creation to insertion
        into the product-queue to pq_sequence(...).

6.0.0.5
        Reduced logging-level of initial and final messages of upstream
        LDM.

6.0.0.4
        Added "CRAFT" and "CONDUIT" to the list of feedtypes and made
        them the default string specifications for output.

6.0.0.3
        Changed SIGTERM logging-level from udebug() to unotice()
        to reveal cause of "Terminating process group"
        messages.

6.0.0.2
        Corrected setting of _mode in down6 regarding IGNORE_BLKDATA.
