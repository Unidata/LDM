/* DO NOT EDIT THIS FILE. It was created by extractDecls */
/*
 *   Copyright 2011, University Corporation for Atmospheric Research.
 *   See file COPYRIGHT for copying and redistribution conditions.
 */

#ifndef PRODUCT_MAKER_H
#define PRODUCT_MAKER_H

#include "ldmProductQueue.h"

typedef struct productMaker   ProductMaker;

#ifdef __cplusplus
extern "C" {
#endif

/**
 * Returns a new product-maker.
 *
 * This function is thread-safe.
 *
 * @retval 0    Success.
 * @retval 1    Usage failure. \c log_add() called.
 * @retval 2    O/S failure. \c log_add() called.
 */
int pmNew(
    Fifo* const             fifo,           /**< [in] Pointer to FIFO from
                                              *  which to get data */
    LdmProductQueue* const  lpq,            /**< [in] LDM product-queue into
                                              *  which to put data-products */
    ProductMaker** const    productMaker)   /**< [out] Pointer to pointer to
                                              *  returned product-maker */;

/**
 * Frees a product-maker.
 *
 * @param[in,out] pm  The product-maker to be freed or NULL.
 */
void pmFree(
        ProductMaker* const pm);

/**
 * Executes a product-maker.
 *
 * This function is thread-compatible but not thread-safe.
 *
 * @retval (void*)0    The FIFO was closed.
 * @retval (void*)1    Usage failure. \c log_add() called.
 * @retval (void*)2    O/S failure. \c log_add() called.
 */
void* pmStart(
    void* const         arg)          /**< [in/out] Pointer to the
                                        *  product-maker to be executed */;

/**
 * Returns statistics since the last time this function was called or \link
 * pmStart() \endlink was called.
 *
 * @param[in]  productMaker      Product maker
 * @param[out] frameCount        Number of frames
 * @param[out] missedFrameCount  Number of missed frames
 * @param[out] prodCount         Number of products inserted into the product-queue
 */
void pmGetStatistics(
    ProductMaker* const  productMaker,
    unsigned long* const frameCount,
    unsigned long* const missedFrameCount,
    unsigned long* const prodCount);

/**
 * Returns the termination status of a product-maker
 *
 * This function is thread-compatible but not thread-safe.
 *
 * @retval 0    The FIFO was closed.
 * @retval 1    Usage failure. \c log_add() called.
 * @retval 2    O/S failure. \c log_add() called.
 */
int pmStatus(
    ProductMaker* const productMaker)   /**< [in] Pointer to the product-maker
                                          */;

#ifdef __cplusplus
}
#endif

#endif
