/*
 * mystdlib.h
 *
 *  Created on: Mar 3, 2012
 *      Author: brapp
 */

#ifndef MYSTDLIB_H_
#define MYSTDLIB_H_

#include <limits.h>
#include <sys/types.h>
#include <sys/stat.h>

#define TRUE		(1)
#define FALSE		(0)
#define YES		(1)
#define NO		(0)
#define SUCCESS		(0)
#define ERROR		(0)

#define EVENT_SIZE	(sizeof (struct inotify_event))
#define EVENT_BUF_LEN	(1024 * (EVENT_SIZE + 16))
#define MAX_STR_LEN	1023

#ifdef __GNUC__
#define fatal(...)\
{\
    fprintf(stderr, "FATAL ERROR OCCURRED: ");\
    fprintf(stderr, __VA_ARGS__);\
    fprintf(stderr, ": %s\n", strerror(errno));\
    exit(-1);\
}

#else /* __GNUC__ */
void
fatal(const char * fmt, ...)
{
	va_list list;

	fprintf(stderr, "FATAL ERROR OCCURRED: ");
	va_start(list, fmt);
	vfprintf(stderr, fmt, list);
	va_end(list);
	fprintf(stderr, ": %s\n", strerror(errno));
	exit(-1);
}

#endif /* __GNUC__ */

#define isDirectory(fname)	(getFileType (fname) == S_IFDIR)
#define isRegularFile(fname)	(getFileType (fname) == S_IFREG)
#define isPipe(fname)		(getFileType (fname) == S_IFIFO)
#define isSymLink(fname)	(getFileType (fname) == S_IFLNK)
#define isSocket(fname)		(getFileType (fname) == S_IFSOCK)
#define isCharDev(fname)	(getFileType (fname) == S_IFCHR)
#define isBlockDev(fname)	(getFileType (fname) == S_IFBLK)

@FUNCTION_DECLARATIONS@

#endif /* MYSTDLIB_H_ */
