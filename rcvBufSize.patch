From e6912379f10b092899c83956c886dea05a934060 Mon Sep 17 00:00:00 2001
From: Mustapha Iles <mustapha@ucar.edu>
Date: Wed, 17 Mar 2021 15:28:50 -0600
Subject: [PATCH 1/2] Ticket #: LDM !YZI-571321: socket receiver buffer size
 increase for NOAAport ingester

---
 noaaport/noaaportIngester.c | 29 ++++++++++++++++++++---------
 noaaport/noaaport_socket.c  | 17 +++++++++++++++--
 noaaport/noaaport_socket.h  |  4 +++-
 3 files changed, 38 insertions(+), 12 deletions(-)

diff --git a/noaaport/noaaportIngester.c b/noaaport/noaaportIngester.c
index 7500422..fcce7b1 100644
--- a/noaaport/noaaportIngester.c
+++ b/noaaport/noaaportIngester.c
@@ -84,7 +84,8 @@ decodeCommandLine(
         size_t* const         npages,
         char** const restrict prodQueuePath,
         char** const restrict mcastSpec,
-        char** const restrict interface)
+        char** const restrict interface,
+		int                   setBufSize)
 {
     int                 status = 0;
     extern int          optind;
@@ -94,7 +95,7 @@ decodeCommandLine(
     opterr = 0;                         /* no error messages from getopt(3) */
 
     while (0 == status &&
-            (ch = getopt(argc, argv, "b:cfI:l:m:nq:r:s:t:u:vx")) != -1) {
+            (ch = getopt(argc, argv, "b:cfI:l:m:nq:r:S:s:t:u:vx")) != -1) {
         switch (ch) {
             extern char*    optarg;
             extern int      optopt;
@@ -150,6 +151,9 @@ decodeCommandLine(
                   retrans_xmit_enable = OPTION_DISABLE;
 #endif
                 break;
+            case 'S':
+                   setBufSize = TRUE;
+                   break;
             case 's': {
 #ifdef RETRANS_SUPPORT
                 strncpy(sbn_channel_name, optarg, 12);
@@ -296,7 +300,7 @@ static void usage(
 "%s\n"
 "\n"
 "Usage: %s [-n|v|x] [-l log] [-u n] [-m addr] [-q queue] [-b npages] [-I ip_addr]\n"
-"          [-r <1|0>] [-t] [-s channel-name]\n"
+"          [-r <1|0>] [-S] [-t] [-s channel-name]\n"
 "where:\n"
 "   -b npages   Allocate \"npages\" pages of memory for the internal buffer.\n"
 "               Default is %lu pages. \"getconf PAGESIZE\" reveals page-size.\n"
@@ -308,6 +312,7 @@ static void usage(
 "               Default is to read from the standard input stream.\n"
 "   -n          Log through level NOTE. Report each data-product.\n"
 "   -q queue    Use \"queue\" as LDM product-queue. Default is \"%s\".\n"
+"   -S          Enable socket receiver buffer size increase. \n"
 "   -u n        Use logging facility local\"n\". Default is to use the\n"
 "               default LDM logging facility, %s. Implies \"-l ''\".\n"
 "   -v          Log through level INFO.\n"
@@ -480,6 +485,7 @@ unblockTermSignals(void)
  * @param[in] interface      IPv4 address of interface on which to listen for
  *                           multicast NOAAPort packets or NULL to listen on all
  *                           interfaces. Ignored iff `mcastSpec == NULL`.
+ * @param[in]  setBufSize    Enable socket receiver buffer size increase.
  * @param[out] isMcastInput  Is input from NOAAPort multicast?
  * @retval    -1             Failure. `log_add()` called.
  * @return                   Input file descriptor. `*isMcastInput` is set.
@@ -489,7 +495,8 @@ static int
 getInputFd(
         const char* const restrict mcastSpec,
         const char* const restrict interface,
-        bool* const restrict       isMcastInput)
+        bool* const restrict       isMcastInput,
+		int                        setBufSize)
 {
     int fd; // Input file descriptor
     bool mcastInput = mcastSpec != NULL;
@@ -502,7 +509,7 @@ getInputFd(
             log_add_syserr(
                     "Couldn't get file-descriptor of standard input stream");
     }
-    else if (nportSock_init(&fd, mcastSpec, interface)) {
+    else if (nportSock_init(&fd, mcastSpec, interface, setBufSize)) {
         log_add("Couldn't open NOAAPort socket");
         fd = -1;
     }
@@ -1210,6 +1217,7 @@ execute2(
  *                            all interfaces. Ignored iff `mcastSpec == NULL`.
  * @param[in] npages          Size of the queue in pages.
  * @param[in] prodQueuePath   Pathname of product-queue.
+ * @param[in] setBufSize      Enable socket receiver buffer size increase.
  * @retval    1               Couldn't open input. `log_add()` called.
  * @retval    2               Couldn't create FIFO. `log_add()` called.
  * @retval    3               Couldn't open product-queue. `log_add()` called.
@@ -1218,13 +1226,14 @@ static int
 execute(const char* const restrict mcastSpec,
         const char* const restrict interface,
         const size_t               npages,
-        const char* const restrict prodQueuePath)
+        const char* const restrict prodQueuePath,
+		int                        setBufSize)
 {
     log_assert(npages > 0);
 
     int  status;
     bool isMcastInput;
-    int  fd = getInputFd(mcastSpec, interface, &isMcastInput);
+    int  fd = getInputFd(mcastSpec, interface, &isMcastInput, setBufSize);
 
     if (fd == -1) {
         log_add("Couldn't open input");
@@ -1351,10 +1360,11 @@ int main(
             // Read from standard input stream
             char*             mcastSpec = NULL;
             char*             interface = NULL; // Listen on all interfaces
+            int               setBufSize= FALSE;
             const char* const COPYRIGHT_NOTICE = "Copyright (C) 2019 "
                     "University Corporation for Atmospheric Research";
             status = decodeCommandLine(argc, argv, &npages, &prodQueuePath,
-                    &mcastSpec, &interface);
+                    &mcastSpec, &interface, &setBufSize);
 
             if (status) {
                 log_error_q("Couldn't decode command-line");
@@ -1366,7 +1376,8 @@ int main(
 
                 tryLockingProcessInMemory(); // because NOAAPORT is realtime
 
-                status = execute(mcastSpec, interface, npages, prodQueuePath);
+                status = execute(mcastSpec, interface, npages, prodQueuePath,
+                		         setBufSize);
 
                 if (status) {
                     log_add("Couldn't ingest NOAAPort data");
diff --git a/noaaport/noaaport_socket.c b/noaaport/noaaport_socket.c
index 979a1d0..dcfd776 100644
--- a/noaaport/noaaport_socket.c
+++ b/noaaport/noaaport_socket.c
@@ -68,15 +68,18 @@ initNportSockAddr(
  * @param[in]  ifaceSpec  IPv4 address of interface on which to listen for
  *                        multicast UDP packets or NULL to listen on all
  *                        available interfaces.
+ * @param[in]  setBufSize Enable socket receiver buffer size increase.
  * @retval     0          Success. `*socket` is set.
  * @retval     1          Usage failure. `log_add()` called.
  * @retval     2          O/S failure. `log_add()` called.
+ * @retval     3          O/S failure. `log_add()` called.
  */
 int
 nportSock_init(
         int* const restrict        socket,
         const char* const restrict nportSpec,
-        const char* const restrict ifaceSpec)
+        const char* const restrict ifaceSpec,
+		int                        setBufSize)
 {
     struct sockaddr_in nportSockAddr;
     int                status = initNportSockAddr(&nportSockAddr, nportSpec);
@@ -95,7 +98,17 @@ nportSock_init(
             status = mcastRecvSock_init(socket, &nportSockAddr, &ifaceAddr);
             if (status)
                 log_add("Couldn't initialize socket for multicast reception");
-        }
+            else if (setBufSize) {
+                    int recvBufferSize = (8 * 1024 * 1024);
+                    status = setsockopt(fd, SOL_SOCKET, SO_RCVBUF,
+                    		(void*)&recvBufferSize, sizeof(recvBufferSize));
+            		if (status) {
+                        log_warning("setsockopt(SO_RCVBUF) failure");
+                        (void)close(fd);
+                         status = 0;
+            		}
+                }
+            }
     }
 
     return status;
diff --git a/noaaport/noaaport_socket.h b/noaaport/noaaport_socket.h
index 8824922..826f199 100644
--- a/noaaport/noaaport_socket.h
+++ b/noaaport/noaaport_socket.h
@@ -25,6 +25,7 @@
  * @param[in]  ifaceSpec  IPv4 address of interface on which to listen for
  *                        multicast UDP packets or NULL to listen on all
  *                        available interfaces.
+ * @param[in] setBufSize  Enable socket receiver buffer size increase.
  * @retval     0          Success. `*socket` is set.
  * @retval     1          Usage failure. \c log_add() called.
  * @retval     2          O/S failure. \c log_add() called.
@@ -33,7 +34,8 @@ int
 nportSock_init(
     int* const restrict        socket,
     const char* const restrict nportSpec,
-    const char* const restrict ifaceSpec);
+    const char* const restrict ifaceSpec,
+	int                        setBufSize);
 
 #ifdef __cplusplus
     }
-- 
1.8.3.1


From f4c5cc496ff17fdb495e26c205506781fd5b342c Mon Sep 17 00:00:00 2001
From: Steven Emmerson <emmerson@ucar.edu>
Date: Thu, 18 Mar 2021 12:50:04 -0600
Subject: [PATCH 2/2] Made receiver buffer size user settable

---
 CHANGE_LOG                  |  5 +++++
 configure.ac                |  2 +-
 noaaport/nbs_ingest.c       |  2 +-
 noaaport/noaaportIngester.c | 48 +++++++++++++++++++++++++--------------------
 noaaport/noaaport_socket.c  | 32 +++++++++++++++++-------------
 5 files changed, 52 insertions(+), 37 deletions(-)

diff --git a/CHANGE_LOG b/CHANGE_LOG
index 9814f23..964de07 100644
--- a/CHANGE_LOG
+++ b/CHANGE_LOG
@@ -1,3 +1,8 @@
+6.13.14.20
+    noaaportIngester(1):
+        * Made attempting to set the receive buffer size a command-line option.
+          (The operating system must allow the new size.)
+
 6.13.14.19      2021-03-11T13:52:45-0700
     scour(1):
         * Improved function getExcludedDirsList() and its use
diff --git a/configure.ac b/configure.ac
index 4780c4d..a929611 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2,7 +2,7 @@ dnl Process this file with automake to produce a configure script
 dnl Requires ./aclocal.m4
 dnl
 AC_PREREQ(2.59)
-AC_INIT([LDM], [6.13.14.19], [support-ldm@unidata.ucar.edu],,
+AC_INIT([LDM], [6.13.14.20], [support-ldm@unidata.ucar.edu],,
     [http://www.unidata.ucar.edu/software/ldm])
 
 AC_CONFIG_AUX_DIR([build-aux])
diff --git a/noaaport/nbs_ingest.c b/noaaport/nbs_ingest.c
index 156dc8c..769df87 100644
--- a/noaaport/nbs_ingest.c
+++ b/noaaport/nbs_ingest.c
@@ -368,7 +368,7 @@ static bool init(void)
             log_add("Couldn't open product-queue");
         }
         else {
-            status = nportSock_init(&sock, mcast_ip_addr, iface_ip_addr);
+            status = nportSock_init(&sock, mcast_ip_addr, iface_ip_addr, -1);
             if (status) {
                 log_add("Couldn't create socket for NBS reception");
             }
diff --git a/noaaport/noaaportIngester.c b/noaaport/noaaportIngester.c
index fcce7b1..7776472 100644
--- a/noaaport/noaaportIngester.c
+++ b/noaaport/noaaportIngester.c
@@ -74,18 +74,19 @@ int			     fillScanlines;
  * @param[out] prodQueuePath  Pathname of product-queue.
  * @param[out] mcastSpec      Specification of multicast group.
  * @param[out] interface      Specification of interface on which to listen.
+ * @param[out] rcvBufSize     Receiver buffer size in bytes
  * @retval     0              Success.
  * @retval     EINVAL         Error. `log_add()` called.
  */
 static int
 decodeCommandLine(
-        int                   argc,
-        char** const restrict argv,
-        size_t* const         npages,
-        char** const restrict prodQueuePath,
-        char** const restrict mcastSpec,
-        char** const restrict interface,
-		int                   setBufSize)
+        int                    argc,
+        char**  const restrict argv,
+        size_t* const          npages,
+        char**  const restrict prodQueuePath,
+        char**  const restrict mcastSpec,
+        char**  const restrict interface,
+		int*    const restrict rcvBufSize)
 {
     int                 status = 0;
     extern int          optind;
@@ -95,7 +96,7 @@ decodeCommandLine(
     opterr = 0;                         /* no error messages from getopt(3) */
 
     while (0 == status &&
-            (ch = getopt(argc, argv, "b:cfI:l:m:nq:r:S:s:t:u:vx")) != -1) {
+            (ch = getopt(argc, argv, "b:cfI:l:m:nq:r:Ss:t:u:vx")) != -1) {
         switch (ch) {
             extern char*    optarg;
             extern int      optopt;
@@ -152,7 +153,11 @@ decodeCommandLine(
 #endif
                 break;
             case 'S':
-                   setBufSize = TRUE;
+                   if (sscanf(optarg, "%d", &rcvBufSize) != 1 ||
+                           rcvBufSize <= 0) {
+                       log_add("Invalid receive buffer size: \"%s\"", optarg);
+                       status = EINVAL;
+                   }
                    break;
             case 's': {
 #ifdef RETRANS_SUPPORT
@@ -312,7 +317,7 @@ static void usage(
 "               Default is to read from the standard input stream.\n"
 "   -n          Log through level NOTE. Report each data-product.\n"
 "   -q queue    Use \"queue\" as LDM product-queue. Default is \"%s\".\n"
-"   -S          Enable socket receiver buffer size increase. \n"
+"   -S bufSize  Receiver buffer size in bytes\n"
 "   -u n        Use logging facility local\"n\". Default is to use the\n"
 "               default LDM logging facility, %s. Implies \"-l ''\".\n"
 "   -v          Log through level INFO.\n"
@@ -485,7 +490,7 @@ unblockTermSignals(void)
  * @param[in] interface      IPv4 address of interface on which to listen for
  *                           multicast NOAAPort packets or NULL to listen on all
  *                           interfaces. Ignored iff `mcastSpec == NULL`.
- * @param[in]  setBufSize    Enable socket receiver buffer size increase.
+ * @param[in] rcvBufSize     Receiver buffer size in bytes iff > 0
  * @param[out] isMcastInput  Is input from NOAAPort multicast?
  * @retval    -1             Failure. `log_add()` called.
  * @return                   Input file descriptor. `*isMcastInput` is set.
@@ -496,7 +501,7 @@ getInputFd(
         const char* const restrict mcastSpec,
         const char* const restrict interface,
         bool* const restrict       isMcastInput,
-		int                        setBufSize)
+		int                        rcvBufSize)
 {
     int fd; // Input file descriptor
     bool mcastInput = mcastSpec != NULL;
@@ -509,7 +514,7 @@ getInputFd(
             log_add_syserr(
                     "Couldn't get file-descriptor of standard input stream");
     }
-    else if (nportSock_init(&fd, mcastSpec, interface, setBufSize)) {
+    else if (nportSock_init(&fd, mcastSpec, interface, rcvBufSize)) {
         log_add("Couldn't open NOAAPort socket");
         fd = -1;
     }
@@ -1217,7 +1222,7 @@ execute2(
  *                            all interfaces. Ignored iff `mcastSpec == NULL`.
  * @param[in] npages          Size of the queue in pages.
  * @param[in] prodQueuePath   Pathname of product-queue.
- * @param[in] setBufSize      Enable socket receiver buffer size increase.
+ * @param[in] rcvBufSize      Receiver buffer size in bytes iff > 0
  * @retval    1               Couldn't open input. `log_add()` called.
  * @retval    2               Couldn't create FIFO. `log_add()` called.
  * @retval    3               Couldn't open product-queue. `log_add()` called.
@@ -1227,13 +1232,13 @@ execute(const char* const restrict mcastSpec,
         const char* const restrict interface,
         const size_t               npages,
         const char* const restrict prodQueuePath,
-		int                        setBufSize)
+		int                        rcvBufSize)
 {
     log_assert(npages > 0);
 
     int  status;
     bool isMcastInput;
-    int  fd = getInputFd(mcastSpec, interface, &isMcastInput, setBufSize);
+    int  fd = getInputFd(mcastSpec, interface, &isMcastInput, rcvBufSize);
 
     if (fd == -1) {
         log_add("Couldn't open input");
@@ -1360,14 +1365,15 @@ int main(
             // Read from standard input stream
             char*             mcastSpec = NULL;
             char*             interface = NULL; // Listen on all interfaces
-            int               setBufSize= FALSE;
-            const char* const COPYRIGHT_NOTICE = "Copyright (C) 2019 "
+            int               rcvBufSize= 0;
+            const char* const COPYRIGHT_NOTICE = "Copyright (C) 2021 "
                     "University Corporation for Atmospheric Research";
             status = decodeCommandLine(argc, argv, &npages, &prodQueuePath,
-                    &mcastSpec, &interface, &setBufSize);
+                    &mcastSpec, &interface, &rcvBufSize);
 
             if (status) {
-                log_error_q("Couldn't decode command-line");
+                log_add("Couldn't decode command-line");
+                log_flush_fatal();
                 usage(progname, npages, COPYRIGHT_NOTICE);
             }
             else {
@@ -1377,7 +1383,7 @@ int main(
                 tryLockingProcessInMemory(); // because NOAAPORT is realtime
 
                 status = execute(mcastSpec, interface, npages, prodQueuePath,
-                		         setBufSize);
+                		         rcvBufSize);
 
                 if (status) {
                     log_add("Couldn't ingest NOAAPort data");
diff --git a/noaaport/noaaport_socket.c b/noaaport/noaaport_socket.c
index dcfd776..e310962 100644
--- a/noaaport/noaaport_socket.c
+++ b/noaaport/noaaport_socket.c
@@ -68,7 +68,8 @@ initNportSockAddr(
  * @param[in]  ifaceSpec  IPv4 address of interface on which to listen for
  *                        multicast UDP packets or NULL to listen on all
  *                        available interfaces.
- * @param[in]  setBufSize Enable socket receiver buffer size increase.
+ * @param[in]  rcvBufSize Receiver buffer size in bytes iff > 0. A warning
+ *                        will be logged if the buffer size can't be set.
  * @retval     0          Success. `*socket` is set.
  * @retval     1          Usage failure. `log_add()` called.
  * @retval     2          O/S failure. `log_add()` called.
@@ -79,7 +80,7 @@ nportSock_init(
         int* const restrict        socket,
         const char* const restrict nportSpec,
         const char* const restrict ifaceSpec,
-		int                        setBufSize)
+		int                        rcvBufSize)
 {
     struct sockaddr_in nportSockAddr;
     int                status = initNportSockAddr(&nportSockAddr, nportSpec);
@@ -96,20 +97,23 @@ nportSock_init(
         }
         else {
             status = mcastRecvSock_init(socket, &nportSockAddr, &ifaceAddr);
-            if (status)
+            if (status) {
                 log_add("Couldn't initialize socket for multicast reception");
-            else if (setBufSize) {
-                    int recvBufferSize = (8 * 1024 * 1024);
-                    status = setsockopt(fd, SOL_SOCKET, SO_RCVBUF,
-                    		(void*)&recvBufferSize, sizeof(recvBufferSize));
-            		if (status) {
-                        log_warning("setsockopt(SO_RCVBUF) failure");
-                        (void)close(fd);
-                         status = 0;
-            		}
-                }
             }
-    }
+            else {
+                if (rcvBufSize > 0) {
+                    status = setsockopt(*socket, SOL_SOCKET, SO_RCVBUF,
+                            &rcvBufSize, sizeof(rcvBufSize));
+                    if (status) {
+                        log_add_syserr("Couldn't set receiver buffer size to "
+                                "%d bytes", rcvBufSize);
+                        log_flush_warning();
+                        status = 0;
+                    }
+                } // Receiver buffer size needs to be set
+            } // '*socket' open
+        } // Interface address set
+    } // Socket address is set
 
     return status;
 }
-- 
1.8.3.1

